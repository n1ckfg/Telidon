
  



                           NISTIR 5398
 
                           (supersedes NISTIR 4349, 4953, and 5238)



 
 
 
USER'S GUIDE FOR THE
PHIGS VALIDATION TESTS
(Version 2.1)



 
 

                           Kevin Brady
                           John Cugini
                           Qiming Wang
 
 
                           U.S. Department of Commerce
                           National Institute of
                              Standards and Technology
                           Computer Systems Laboratory
                           Gaithersburg, MD 20899


                           April 1994
 
 
 
 
 
 
 
 
                           U.S. Department of Commerce
                           Ronald H. Brown, Secretary

                           Technology Administration
                           Mary L. Good, Under Secretary for Technology

                           National Institute of Standards 
                              and Technology
                           Arati Prabhakar, Director
 
 



                       USER'S GUIDE FOR THE

                      PHIGS VALIDATION TESTS


                           (Version 2.1)



                                by

                            Kevin Brady

                            John Cugini

                            Qiming Wang







     ABSTRACT:  The PHIGS  Validation  Tests  (PVT),  developed  by
NIST, consist of a large set of Fortran and C programs which may be
used to test how well  implementations  of  PHIGS  conform  to  the
standard.  The tests are organized into a hierarchical structure of
modules  which  corresponds  to  the  conceptual  overview  of  the
standard.   The tests are associated with the standard via a set of
semantic requirements which are derived directly from the standard.
Cross-reference  tables  allow  the  user to find tests relating to
specific PHIGS  functions  and  data  structures.   Directions  for
installation and operation of the tests are included.

     KEYWORDS:  conformance  testing;  graphics  standards;  PHIGS;
testing of software; validation of software




                           CONTENTS

1       INTRODUCTION . . . . . . . . . . . . . . . . . . . . 1

2       STRUCTURE AND FORMAT OF PVT SUITE  . . . . . . . . . 2
2.1       Tree Structure . . . . . . . . . . . . . . . . . . 2
2.2       Modules  . . . . . . . . . . . . . . . . . . . . . 3
2.3       Subroutine Libraries . . . . . . . . . . . . . . . 3
2.4       Order  . . . . . . . . . . . . . . . . . . . . . . 4
2.5       Module Documentation . . . . . . . . . . . . . . . 4
2.5.1       Introductory Headings  . . . . . . . . . . . . . 4
2.5.2       Semantic Requirements  . . . . . . . . . . . . . 5
2.5.2.1       Related Functions  . . . . . . . . . . . . . . 6
2.5.2.2       Related Data Structures  . . . . . . . . . . . 6
2.5.2.3       Basis In The Standard  . . . . . . . . . . . . 7
2.5.2.4       Test Cases . . . . . . . . . . . . . . . . . . 7
2.5.2.5       Module Cross-references  . . . . . . . . . . . 7
2.5.2.6       Comments . . . . . . . . . . . . . . . . . . . 8
2.5.3       Local Dictionary . . . . . . . . . . . . . . . . 8
2.5.4       Semantic Cross-references  . . . . . . . . . . . 8
2.5.5       Local Subroutines  . . . . . . . . . . . . . . . 8
2.5.6       Program Design . . . . . . . . . . . . . . . . . 8
2.5.6.1       Headings . . . . . . . . . . . . . . . . . . . 8
2.5.6.2       Logic And TCs  . . . . . . . . . . . . . . . . 9
2.6       Source Code  . . . . . . . . . . . . . . . . . .  10
2.6.1       Language . . . . . . . . . . . . . . . . . . .  10
2.6.2       Generation Of C Version Of PVT From Fortran  .  10
2.6.2.1       Use Of f2c As Translator . . . . . . . . . .  11
2.6.2.2       Customization Of f2c Libraries . . . . . . .  11
2.6.2.3       Interface Between Fortran And C Bindings . .  11
2.6.3       All Variables Declared . . . . . . . . . . . .  13
2.6.4       Standard PHIGS Names . . . . . . . . . . . . .  13
2.6.5       Dummy Parameters . . . . . . . . . . . . . . .  13
2.6.6       Program Banner . . . . . . . . . . . . . . . .  13
2.6.7       Common . . . . . . . . . . . . . . . . . . . .  13
2.6.8       Special Characteristics Of C Code  . . . . . .  14
2.6.8.1       Prototyping  . . . . . . . . . . . . . . . .  14
2.6.8.2       File Handling  . . . . . . . . . . . . . . .  14
2.6.8.3       Pack/Unpack  . . . . . . . . . . . . . . . .  14
2.6.8.4       Character Strings  . . . . . . . . . . . . .  15
2.6.8.5       Error Handling . . . . . . . . . . . . . . .  16
2.6.8.6       Parameter Passing  . . . . . . . . . . . . .  17
2.6.8.7       Array Indexing . . . . . . . . . . . . . . .  18
2.7       Ubiquitous Subroutines . . . . . . . . . . . . .  18
2.7.1       Initialization And Clean-up Of Test Programs .  18
2.7.2       TC Subroutines . . . . . . . . . . . . . . . .  19
2.7.3       Message Subroutines  . . . . . . . . . . . . .  19
2.7.4       CHKINQ . . . . . . . . . . . . . . . . . . . .  20


                                v



3       INSTALLATION . . . . . . . . . . . . . . . . . . .  20
3.1       File Storage . . . . . . . . . . . . . . . . . .  20
3.1.1       Hierarchical Format  . . . . . . . . . . . . .  20
3.1.2       Alternative Storage Strategy For Subroutines .  21
3.2       Customization Of Code  . . . . . . . . . . . . .  22
3.2.1       Naming PVT Configuration File  . . . . . . . .  22
3.2.2       Special Processing For Opening PHIGS . . . . .  22
3.2.3       Random Number Generator  . . . . . . . . . . .  23
3.2.4       Naming Individual Message File . . . . . . . .  23
3.2.5       Resolution Of Parameters For <Open Workstation> 23
3.2.6       Providing Valid Names For Archive Files  . . .  24
3.2.7       Time-stamping Message Files  . . . . . . . . .  24
3.2.8       Operator Communication . . . . . . . . . . . .  24
3.2.9       Appending To Global Message File   . . . . . .  24
3.2.10      Control Of C Prototyping . . . . . . . . . . .  25
3.2.11      Special Characters . . . . . . . . . . . . . .  25
3.3       Compile Subroutines  . . . . . . . . . . . . . .  25
3.4       Procedures For Batch Processing  . . . . . . . .  26

4       OPERATION  . . . . . . . . . . . . . . . . . . . .  27
4.1       PVT Sessions And Workstations  . . . . . . . . .  27
4.2       Running INITPH For PVT Configuration . . . . . .  28
4.2.1       Parameters For Opening PHIGS . . . . . . . . .  30
4.2.2       Parameters For Opening Workstations  . . . . .  30
4.2.3       Control Of Messages  . . . . . . . . . . . . .  30
4.2.4       Control Of Error File  . . . . . . . . . . . .  31
4.2.5       Control Of Randomization . . . . . . . . . . .  31
4.2.6       Primary Workstation Support For Graphical 
            Output . . . . . . . . . . . . . . . . . . . .  32
4.2.7       Control For Prompting The Operator . . . . . .  32
4.2.8       Control For Operator Responses To Prompt . . .  32
4.2.9       Location And Size Of The Dialogue And Echo 
            Areas  . . . . . . . . . . . . . . . . . . . .  32
4.2.10      Ratio Of Meters To DC Units For The Primary 
            Workstation  . . . . . . . . . . . . . . . . .  33
4.3       Background Documentation . . . . . . . . . . . .  33
4.4       Execution And Interpretation . . . . . . . . . .  33
4.4.1       Testing Error Handling . . . . . . . . . . . .  33
4.4.2       Language Specific Tests  . . . . . . . . . . .  34
4.4.3       Failure To Compile Or Link . . . . . . . . . .  34
4.4.4       Failure To Complete Execution  . . . . . . . .  34
4.4.5       Operator Interaction . . . . . . . . . . . . .  35
4.4.5.1       Format For Answering Questions . . . . . . .  35
4.4.5.2       Special Processing Of Operator Responses . .  36
4.4.6       Completion Of Execution And Message Type . . .  36
4.4.7       Analysis Of Results  . . . . . . . . . . . . .  37
4.4.8       Troubleshooting  . . . . . . . . . . . . . . .  38
4.5       Session Completion . . . . . . . . . . . . . . .  38
4.6       Customization For Debugging  . . . . . . . . . .  39

REFERENCES . . . . . . . . . . . . . . . . . . . . . . . .  40



                                vi




APPENDIX A      GLOBAL VARIABLES

APPENDIX B      PVT TREE STRUCTURE

APPENDIX C      VERSION HISTORY OF THE PVT

APPENDIX D      TEST PROGRAM CHARACTERISTICS

APPENDIX E      DICTIONARY OF SUBROUTINES AND FUNCTIONS
                                              
APPENDIX F      EXAMPLES OF COMMAND PROCEDURES

APPENDIX G      BUILDING THE PVT IN UNIX

APPENDIX H      SOFTWARE METRICS

APPENDIX I      FUNCTION CROSS-REFERENCE

APPENDIX J      DATA STRUCTURE CROSS-REFERENCE

APPENDIX K      STANDARD SPECIFICATIONS CROSS-REFERENCE

APPENDIX L      MODULE CROSS-REFERENCE






























                               vii




1  INTRODUCTION

     PHIGS  stands  for   Programmer's   Hierarchical   Interactive
Graphics  System.  The PHIGS standard defines a set of functions to
be used by a programmer to manipulate  and  display  3-D  graphical
objects.   For  a  full  description  of the features of PHIGS, see
[PHIGS89].  The standard has been approved by the American National
Standards   Institute   (ANSI)   as   ANSI   X3.144-1988,   by  the
International Organization for Standards (ISO) as ISO  9592-1:1989,
and  by  the  Federal  government as Federal Information Processing
Standard (FIPS) 153.

     The PHIGS Validation Test (PVT) suite  is  a  product  of  the
Computer  Systems  Laboratory  (CSL)  of  the National Institute of
Standards and Technology (NIST).  The function of this suite is  to
test   whether  implementations  of  PHIGS  conform  to  the  PHIGS
standard.  The PVT is available to  individuals  and  organizations
for  use  in developing or testing PHIGS implementations.  CSL uses
version 2.1 of this suite to validate PHIGS  implementations  which
have been submitted for testing.

     There are  some  aspects  of  the  PHIGS  standard  which  can
reasonably  be  construed  in various ways.  The PVT suite embodies
CSL's   best   technical   judgment   concerning   the   standard's
requirements for conforming implementations.  CSL intends to update
the  PVT  suite  periodically  to  reflect  official  ANSI  or  ISO
interpretations  that  conflict with the assumptions upon which the
current version of the PVT is based.

     Version 2.1 includes tests for error handling and updates  the
PVT to reflect official interpretations of the PHIGS standard.  See
Appendix C for a  description  of  the  coverage  provided  by  the
various versions of the PVT.

     This document describes the general rules and  procedures  for
using  the  PVT suite.  Detailed information for specific tests may
be found in the module documentation, as described in section  2.5.
For  a  general  discussion  of PVT design issues, see [CUGI90] and
[CUGI91].

     We welcome any comments  or  suggestions  regarding  the  PVT.
Such comments may include reports of errors in the PVT, suggestions
for additional test cases, interpretation questions, or  any  other
ideas  on  how to improve the PVT.  Please send all correspondence,
including questions about PHIGS validation and obtaining  the  PVT,
to:
 
   Project Leader, PHIGS Validation Tests
   Computer Systems Laboratory
   National Institute of Standards and Technology
   Bldg. 225, Room A-266
   Gaithersburg, MD 20899
 



                                 1



     This report identifies certain commercial software products in
order  to  illustrate  some of the concepts discussed herein.  Such
identification does not  imply  recommendation  or  endorsement  by
NIST.



2  STRUCTURE AND FORMAT OF PVT SUITE

     The PVT suite is implemented as a set of  documentation  files
and  source  code  files.   This section describes the relationship
among these files, and the format conventions they follow.



2.1  Tree Structure

     The PVT  suite  is  organized  in  a  hierarchical,  or  tree,
structure.  This tree closely resembles the organization of section
4 of the generic ISO  PHIGS  standard,  which  contains  the  basic
conceptual  description  of PHIGS.  See Appendix B for the complete
description of the PVT tree.

     Concretely, the tree structure is  expressed  by  storing  the
modules of the PVT system in a hierarchical file directory, such as
that supported by VAX/VMS,  Unix,  and  MS-DOS.   For  illustrative
purposes  we  shall  adopt a neutral naming convention, wherein the
levels of a file structure are separated by the "~" character,  for
example:   PVT~05~03~DOC.TXT  as the name of the documentation file
for module 05~03.   As  distributed,  the  root  of  the  PVT  tree
contains a number of system files:

     a.  user-guide.prt:  user's guide for the PVT;  the  file  you
         are now reading

     b.  sys-dict.prt:  dictionary file to specify the  identifying
         numbers of PHIGS functions and data structures

     c.  pgm-char.prt:  contains a list of all programs, explicitly
         numbered, together with their characteristics

     d.  initph.f or initph.c:  source code for initializer of  PVT
         configuration file

     e.  oprcmt.f or oprcmt.c:  source code for  program  to  allow
         entry  of operator comments outside the usual context of a
         test program (see section 4.4.3)

     f.  complt.f or complt.c:  source code  for  program  to  test
         completion of validation session (see section 4.5)

     g.  sublib.f or sublib.c:  source code for  global  subroutine
         library



                                 2



     h.  trans-sublib.f  or  trans-sublib.c:    source   code   for
         transformation subroutine library

     i.  errlib.f or  errlib.c:   source  code  for  error  handler
         library




2.2  Modules

     There is at most one PVT module per node in the  tree.   Every
leaf node contains a module.  A non-leaf node may contain a module,
or may be empty, serving simply  to  organize  the  system.   Every
module  contains  exactly  one  documentation  file, conventionally
named DOC.TXT, and one or more program files, named  p01.f,  p02.f,
etc.   for  Fortran,  or  p01.c,  etc.   in  the  case  of  C.  The
documentation file contains the set of semantic requirements  (SRs)
for  the  module, together with the design for each of the module's
programs.  The programs  contain  the  test  cases  (TCs)  for  the
module.   Format  details  are explained below.  See Figure 1 for a
schematic diagram of the structure of a module.




                 Module
                    DOC.TXT (Documentation file)
                       Semantic Requirements
                          SR1
                          SR2
                          ...
                       P01 design
                       P02 design
                       ...
                    p01.f (Program file)
                       TC #1
                       TC #2
                       ...
                    p02.f (Program file)
                    ...
                 
                 
               Figure 1: File Structure of a Module



2.3  Subroutine Libraries

     The only other entities of the PVT system  not  in  the  root,
besides the documentation and source code files, are the subroutine
libraries (also in source code) used by the main  programs.   These
libraries  are  in  the tree structure, and are associated not with
individual modules, but with the set of modules below them  in  the


                                 3



tree  or at the same level.  Thus, if programs in modules 05~01~01,
05~01~03, 05~02, and 05~04 all use a library of common subroutines,
this  library  will reside in PVT~05.  Libraries are named sublib.f
or sublib.c.  There is a global  subroutine  library,  at  the  PVT
level, containing routines used throughout the PVT system.

     Finally, there are two special-purpose libraries,  anomalously
named  trans-sublib  and  errlib  in  the  root  node.   The former
contains  routines  that  simulate  the  geometric   transformation
utility   functions   of   PHIGS  and  perform  other  mathematical
functions.  The latter contains the PVT-defined version  of  PERHND
(the Fortran error handler) or perr_hand (the C error handler).

     The subroutines are self-documented; each starts with a  brief
description  of  its  purpose and of the meaning of its parameters.
See Appendix E for a dictionary of the names and locations  of  all
PVT subroutines.


2.4  Order

     There is  never  any  order-dependence  between  modules,  and
usually  there  is no required order for program execution within a
module.  Following the PVT tree structure, depth-first, may be  the
most  natural  way  to proceed through the modules, but there is no
requirement to do so.

     Module 11.02 is an exception to  this  rule:   it  checks  the
PHIGS  header  files for the C binding and its programs must be run
in sequence.



2.5  Module Documentation

     Module documentation is written for a reasonably knowledgeable
PHIGS  user.   Questions  about  PHIGS  itself  must be answered by
reference to the standard [PHIGS89].

     Figure  2  contains  a  schematic  outline   of   the   module
documentation.   Refer  to  it,  or  to an actual example of module
documentation when reading this section.



2.5.1  Introductory Headings -

     The first heading, "TITLE", contains a brief phrase describing
the  main  topic  of  the  module.   The  second heading, "MODULE#"
contains the identifying number of the module, which may be  simply
related  to  its location in the file hierarchy, e.g.  the files of
MODULE# 02.01.02 are in the PVT~02~01~02 sub-directory.  All  level
numbers are two-digit.  The third heading, "DESCRIPTION" contains a
free-format paragraph explaining the scope of the module.


                                 4



               TITLE:
               MODULE#:
               DESCRIPTION:
               SEMANTIC REQUIREMENTS:
                 SR1:
                   #F functions
                   #D data structures
                   #S references to standard
                   #T test cases
                   #X module cross-references
                   #C comments
                 SR2:
                   #F
                   #D
                   #S
                 ...
               
               LOCAL DICTIONARY:
               
               SEMANTIC CROSS-REFERENCES: (if applicable)
               
               LOCAL SUBROUTINES: (if applicable)
               
               PROGRAM 1
                 CHARACTERISTICS:
                 OPERATOR SCRIPT:
                 DESIGN:
                   TEST: #SR
                         "Text of test case message."
                   ...
                   TEST: #SR
                   ...
               END PROGRAM 1
               
               PROGRAM 2
                 ...
               END PROGRAM 2
               
               ...
               
       
       
             Figure 2: Format of Module Documentation





2.5.2  Semantic Requirements -

     Next comes the list of semantic requirements  associated  with
the  PHIGS  feature  under  test.   These  are  assigned sequential
identifying numbers, which will be referred to by the relevant TCs.


                                 5



Each  SR is a simple declarative sentence, stating some requirement
on the behavior of conforming implementations.   Although  intended
to   be  clear  and  unambiguous,  these  have  to  be  read  in  a
"reasonable" way, with appropriate assumptions about context.   The
SRs  are  not  "conditionalized" into absolute truths by explicitly
stating all the normal pre-conditions that may apply  (e.g.   if  a
structure is open and if the system has space left to allocate, and
if there is no power failure, then ..).

     The SRs use the terminology of the standard when referring  to
functions  or  data  structures.  By convention, angle brackets are
used when referring to the generic names of functions,  e.g.   <set
element  pointer>.   Note  that  the words "valid" and "realizable"
have a technical meaning:   the  former  indicates  simply  that  a
parameter  is  accepted  by a function without generating an error,
while the latter indicates that the implementation must actually be
able to render the graphical attribute in question.  The wording of
the SR  usually  applies  to  the  generic  standard,  and  is  not
language-dependent.   Of  course  the SRs for the language specific
modules are themselves language-dependent.

     Immediately following each SR there are a number of associated
fields,  one  per  line, each prefaced by a "#".  The first four of
these, #F, #D, #S, and #T are mandatory.



2.5.2.1  Related Functions -

     #F is used to list the functions associated with this SR, i.e.
those  whose  behavior is at least partially constrained by the SR.
Functions are referred to by an identifying  number  (1-324)  which
corresponds  to  the order in which they appear in section 5 of the
standard.  The sys-dict.prt  file  contains  a  complete  table  of
function numbers.



2.5.2.2  Related Data Structures -

     The #D entry lists the data structures which are  relevant  to
this SR, i.e.  those whose contents are changed or inspected in the
course of checking the SR.  The data structures are referred to  by
an  identifying hierarchical number which reflects the organization
of section 6 of the standard.  The  sys-dict.prt  file  contains  a
complete  table  of  data  structure  numbers.   Note that the data
structure number need not be  a  leaf  node.   If  the  SR  affects
everything  under  a  non-leaf  node,  then  an entry for that node
implicitly covers all those below it.







                                 6



2.5.2.3  Basis In The Standard -

     The #S entry lists those parts of the standard upon which  the
SR   is  logically  based.   These  references  are  in  the  form:
<section-number> / <page-number> / <paragraph-number>, all of which
refer  to  the  1989 ANSI/ISO PHIGS standard, [PHIGS89].  The rules
for counting paragraphs within  a  page  of  the  standard  are  as
follows.   Whatever partial chunk of text is at the top of the page
is number 1.  Subsequent paragraphs are deemed to start by a  blank
line  (even  if  half-height) followed by text at extreme left hand
margin (not indented), but not counting section titles.  Thus, page
38  has  7 paragraphs:  1 partial completing section 4.5.1, and 2-7
in section  4.5.2.   Figures  are  associated  with  the  preceding
paragraph.   For example, page 46 has 3 paragraphs with figure 7 as
part of the first.

     When an SR is based on one of the PHIGS language bindings, its
#S   entry   is   in  the  form  <language>  /  <section-number>  /
<page-number> / <paragraph-number>, and refers to either  [PHFOR90]
or [PHC91].

     The page numbers of the relevant functions,  as  listed  under
          ___
#F,  are  not  included;  if  a  function  is relevant, it is to be
assumed that its description in section 5 of the standard will have
some  bearing  on the SR.  If there is no basis in the standard for
the SR besides the description of the relevant  functions,  an  "n"
appears in the #S entry.



2.5.2.4  Test Cases -

     Each SR, under the #T entry, lists the TCs which depend on it.
The   format  of  each  TC  reference  is:   P  <program-number>  /
<test-case-number>.  The test case  number  simply  refers  to  its
static  sequential  position in the text of the program.  Note that
not all TCs are always executed; under certain conditions  specific
to  the  implementation,  some  may be skipped.  Moreover, some TCs
occur in loops and  are  executed  several  times.   Therefore  the
textual  position  of  TCs  in  the  code may not correspond to the
executed order of TCs.



2.5.2.5  Module Cross-references -

     In some cases an SR may be significantly related to the topics
of  several  modules.   When  this happens, we assign the SR to the
most strongly related module, and use the  #X  entry  to  list  the
other relevant modules.





                                 7



2.5.2.6  Comments -

     The #C entry is for free-form comments to allow explanation of
any  unusual aspect of the SR.  For instance, if the support in the
standard for the SR is obscure or indirect, the comment field might
be used to explain the validity of the SR.



2.5.3  Local Dictionary -

     Since  the  #F  and  #D  entries  under  the   SRs   are   not
self-explanatory,  the  documentation  supplies  the  subset of the
global function and data structure dictionary needed to decode  the
entries of this module.



2.5.4  Semantic Cross-references -

     If this module is pointed to by an entry in the  #X  field  of
another   module,   that  pointer  is  noted  here  in  the  format
<module-number>/SR<sr-number>.  For example, if SR4 in module 02.01
contains  a #X entry for module 04.01.01.01, then the latter module
will have "02.01/SR4" as a semantic cross-reference entry.



2.5.5  Local Subroutines -

     If the programs of this module use any local subroutines (i.e.
any  besides  those  in the root-level global library), it is noted
here.  For detailed documentation of the logic  and  parameters  of
subroutines, please see the source code.



2.5.6  Program Design -

     The second major part of the documentation of the module is  a
description  of the programs and TCs which actually test the SRs of
the module.  The programs are numbered  sequentially.   Except  for
the  language  specific  modules,  the  design  is  intended  to be
language-independent, relying only on the generic standard and  not
on language binding details.



2.5.6.1  Headings -

     Each program design starts  with  a  "PROGRAM"  header,  which
includes the ordinal number of the program within this module and a
descriptive title.  The next entry,  "CHARACTERISTICS"  contains  a
four-character  code ("y" or "n" for yes or no) to indicate various


                                 8



properties of the program:

     1.  requires  graphical  output  features   of   the   primary
         workstation, which must be of category OUTIN or OUTPUT,

     2.  requires  graphical  input   features   of   the   primary
         workstation, which must be of category OUTIN or INPUT,

     3.  reserved for future use; currently always "n"

     4.  the need for visual (or other human) interpretation,  i.e.
         the program cannot completely determine pass/fail results,
         but must rely to some degree on the operator


     The CHARACTERISTICS are useful in setting up procedures to run
the  test suite.  Programs with "--nn" are passive tests and may be
run  without  operator  intervention.   Programs  with  "nn--"  are
workstation independent tests and need not be repeated when testing
various workstation types (see section 4.1).

     The last heading  is  "OPERATOR  SCRIPT."  This  contains  the
instructions  to be followed by the operator when running the test.
If there is no need for operator intervention, then this entry will
say   "passive  test."  See  section  4.4.5  for  general  operator
instructions.

     Each program  design  is  terminated  explicitly  by  an  "END
PROGRAM" heading, followed by the identifying ordinal number of the
program.



2.5.6.2  Logic And TCs -

     The core of each program design is a body of pseudo-code which
describes  the  flow  of  logic  and data representation within the
program.  It should be clear from this pseudo-code why the embedded
TCs are supposed to work.  The pseudo-code describes only the logic
of the program relevant to the TCs; incidental processing, such  as
opening PHIGS, or opening a structure is not included.  The goal is
to give the user an understanding of the basic logic of  the  code,
not to depict all the programming details.  For the latter, one can
consult the code itself.

     The style of the pseudo-code  is  meant  to  be  informal  and
self-explanatory.   Only  a few common control structures are used,
such as looping, if-then-else, and goto.   Labels  (the  object  of
goto statements) begin in column 1 and terminate with a colon.  The
heading "TEST:" heralds the beginning of  a  test  case.   This  is
followed  on the same line by "#SR" and then a list of the SRs upon
which this TC is logically based.  Beginning on the  next  line  is
the textual statement of the expected (correct) result of the test,
surrounded by double-quotes.  The text is unique within the program


                                 9



and thus serves as the identifier of the TC.

     For interactive tests, prompts to the operator  are  indicated
by  "OPQA" (for operator question and answer), followed by a slash,
a topical heading in upper case, and then the question itself, e.g:

   OPQA/EDGE FLAG INDICATOR: Which triangles have visible edges?


     The result of each test is  recorded  by  executing  either  a
"pass"  or  "fail"  procedure, denoted in the pseudo-code simply by
those words.  Every TC should cause execution of either one or  the
other (but not both, of course) of these.  In many cases, where the
result depends directly on a single condition, instead of coding:

     if (condition) then
        pass
     else
        fail
     endif

we use the short-hand form:

     pass/fail depending on (condition)



2.6  Source Code

     In this section we discuss characteristics  which  pertain  to
the  source  code of the PVT system.  The code itself is written to
be comprehensible by a PHIGS- and Fortran-literate  reader.   Since
the  C  version  of  the  PVT  is  generated automatically from the
Fortran version, it is somewhat less readable.  You may wish to use
the  corresponding  pseudo-code  or  Fortran  code  as  an  aide to
understanding the C code.



2.6.1  Language -

     The language of version 2.1 of the PVT  system  is  full  ANSI
Fortran  (ANSI  X3.9-1978)  as  defined in [FORT78] or ANSI C (ANSI
X3.159-1989) as defined in [C1989].  The language binding to  PHIGS
is the full Fortran binding [PHFOR90] or C binding [PHC91].



2.6.2  Generation Of C Version Of PVT From Fortran -

     The most desirable approach for writing a C binding test suite
would have been to start with the design document for each program,
and have  written  new  C  code  to  perform  the  tests  outlined.
However,  due  to  the  limited  resources available to the NIST, a


                                10



Fortran to C translator was used to  produce  the  C  binding  test
suite.

     Using the translator meant  starting  with  well-designed  and
tested  Fortran code, and using that code to generate the C binding
code.  All of the design and programming effort was expended on the
Fortran  code  are carried over to the C binding test suite through
the translator with minimal effort.



2.6.2.1  Use Of f2c As Translator -

     The  translation  utility  used  was  the  public  domain  f2c
(Fortran  to  C)  converter,  developed  by AT&T and Bellcore labs.
After  evaluating  several  proprietary  and  other  public  domain
packages, this converter was chosen for two reasons:

     1.  the C source code generated from the Fortran code required
         no further modification, and

     2.  the purchase  of  additional  software  by  PVT  users  to
         perform a validation is not necessary.




2.6.2.2  Customization Of f2c Libraries -

     The  directory  structure  of  the  f2c  utility  was  altered
slightly   to  decrease  the  number  of  libraries  created.   The
libraries libF77 and  libI77  have  been  combined  into  a  single
library:   libf2c.   Since all of the code has been translated, the
translation  utility  f2c  itself   is   not   contained   in   the
distribution.   The  directory pvt/F2C contains the source code for
the subroutine library (see Figure 3).  Since the code has  already
been translated, only the subroutine library (i.e.  libf2c) need be
present to link the programs.

     The f2c source code itself has not been altered  in  any  way,
and sites that have f2c installed as a system library may use their
own version.



2.6.2.3  Interface Between Fortran And C Bindings -

     Once the Fortran code was translated by the f2c  utility,  the
generated  C  code  still  calls  the  PHIGS  Fortran  library.  To
interface this translated code to the PHIGS C library, a "layer" of
C code was written between the translated test code and the PHIGS C
library  (see  figure  3).   Each  PHIGS  Fortran  routine  has  an
equivalent layer routine where the first letter has been changed to
an "n" (e.g.  the PHIGS routine ppl becomes the layer routine  npl,


                                11


































             Figure 3: PVT Structure for C binding



and is contained in the file npl.c within the LAYER sub-directory).
Each subroutine in the layer is documented with  both  the  FORTRAN
and  the  C  parameters and their meanings.  Within the generated C
code, references to Fortran/PHIGS routines, which  all  begin  with
"P", are automatically altered to begin with "n".

     The layer routine accepts the  Fortran  input  parameters  and
converts  them  into  the equivalent C structures required by the C
binding.  The equivalent PHIGS C library call is  then  made  (e.g.
ppolyline  for  ppl),  allocating  space  if necessary.  The output
parameters (if  any)  from  the  PHIGS  C  library  call  are  then
extracted  and  returned  in  the  Fortran  output parameters.  The
routine also frees any space it previously allocated.

     This approach was possible since  the  standard  requires  the
same information to be present for each function, regardless of the
binding.  Therefore, even  though  the  syntax  of  the  two  calls
differ, they both process the same information.



                                12



2.6.3  All Variables Declared -

     Although not  required  by  the  Fortran  standard,  the  code
explicitly  declares the type of all program variables.  We believe
this is useful  for  several  purposes:   it  helps  avoid  certain
programming  errors  (e.g.  misspelled variables can be detected by
having  the  compiler  flag  undeclared  variables)  and   enhances
self-documentation of the code.



2.6.4  Standard PHIGS Names -

     Where appropriate, the Fortran code uses the standard symbolic
constant  names recommended in section 6 (Enumeration Types) of the
Fortran binding standard [PHFOR90].  Since the C code is  generated
from  the Fortran, the standard C macro definitions in section 6 of
[PHC91] are not used.  For example, the linetype dashed is  denoted
by PLDASH, not by PLINE_DASH.



2.6.5  Dummy Parameters -

     When the code invokes a PHIGS function some  of  whose  output
                 ___
parameters  are  not used in the subsequent logic, these parameters
are assigned names in the format:  <type>DUM<digit>,  where  <type>
is  "I"  for  integer,  "R"  for real, "L" for logical, and "C" for
character, and where <digit> is some differentiating  digit.   This
tells  the reader which parameters are relevant to the logic of the
program and which are incidental.



2.6.6  Program Banner -

     Each test program starts with comment lines forming a  banner.
This  banner identifies the program with a unique "TEST NUMBER" and
a "TEST TITLE".  These appear in a box of asterisks.  The format of
the   test  number  is  <module-number>  /  <program-number>.   For
example,  "04.03.01/02"  identifies  program  number  2  in  module
04.03.01.   Thus,  the  program's  file  name  is p02.f or p02.c in
directory PVT~04~03~01.



2.6.7  Common -

     Each test program contains a set of identical declarations for
certain variables in the common areas GLOBNU and GLOBCH.  These are
used  to  convey  information  within  the  system.   For  a   full
description of each of these global variables, see Appendix A.




                                13



2.6.8  Special Characteristics Of C Code -

     This section describes some of the conventions adopted for the
C  version  of  the  PVT.   A  major  constraint was the need to be
compatible with the code produced by the f2c translator.



2.6.8.1  Prototyping -

     Prototyping is a mechanism by  which  the  expected  parameter
types  for  an invoked function can be declared and checked against
actual usage.  Prototyping is allowed by the  C  language  standard
and  all code generated will, by default, use it [C1989].  However,
for those compilers that do not support prototyping,  this  can  be
suppressed (see section 3.2.10, below).



2.6.8.2  File Handling -

     In PHIGS, a file, as an  input  parameter,  appears  in  <open
phigs>,  <open archive file>, <error handler>, <error logging>, and
as an output parameter, in <inquire open archive file>.  The  PHIGS
FORTRAN  binding  assigns  the filename to the type integer, and in
most instances is associated with a logical unit number.  The PHIGS
C binding, however, assigns the filename to a character string.

     FORTRAN addresses files using the  integer  unit  number  with
which  the  file  was  opened.   The C language, on the other hand,
addresses a file by the file pointer  with  which  it  was  opened.
These   two  types  differ  greatly  and  there  is  no  one-to-one
correspondence between them.  The C tests must use a table that  is
kept  by the f2c code which keeps track of FORTRAN unit numbers and
the C files they represent.  A number of the  layer  code  routines
include the f2c header file "fio.h".  These routines deal with file
handling and must search the file table to  match  a  FORTRAN  unit
number  to a C filename.  An array (of default size 100) is created
at the start  of  each  program.   Array  index  [i]  contains  the
information  on  logical  unit  i  (e.g.   array[10]  contains  the
information on logical  unit  10).   This  information  should  not
affect  any  routine provided in the test suite, for they correctly
handle each situation.



2.6.8.3  Pack/Unpack -

     The FORTRAN binding has two functions, pack and unpack,  which
convert data from arrays of integer, real and character data to and
from an array of 80 character records.  This latter array, in turn,
may be used as a parameter to subsequent PHIGS calls.  However, the
C binding has no  such  functions  (it  uses  large  structures  to
accomplish  this same purpose).  Therefore, the layer code for pack


                                14



and unpack does not encode the  data  into  the  character  arrays.
Rather,  it  defines  a  general  purpose  type  (see  struct.h  in
pvt/LAYER) to hold such data.

     The layer code for pack and unpack (nprec and nurec) will move
data  into  and  from  the  input  arrays to a structure defined in
struct.h, contained in the LAYER directory.  Since NIST  is  coding
pack  and unpack (not the implementor), the format for data records
is set by us.  The current  approach  is  to  overlay  a  structure
(special  typedef) which holds 20 integers, 20 reals, and 5 strings
on top of the raw  80xN  area  defined  in  FORTRAN.   This  method
requires that 592 bytes of storage space be available, resulting in
the minimum datrec declaration being 80 x 8.  Since the  test  code
adheres  to  this  requirement and the method simulates the FORTRAN
implementation  exactly,  the  data   storage   will   be   totally
transparent to the user.

     The layer code for functions having input parameters  of  type
data-record  must  be  aware  of  the  datrec  format  and  use  it
correctly.  These functions then face only the familiar problem  of
re-formatting  FORTRAN style data into C style data to be passed to
the equivalent C functions.  The only difference is  that  in  this
case,  NIST  defined  the  FORTRAN-style data, instead of the PHIGS
standard.  This makes sense, since the FORTRAN binding specifically
does  not  define  the internal format of data-record - it mandates
only that pack stores the data,  and  that  unpack  is  capable  of
retrieving the same data.

     Using the C language, this new data structure is defined as  a
parameter  to  each  of  the  functions  that  use  it,  instead of
declaring it as the FORTRAN 80xN array of  characters.   Since  the
FORTRAN  main  program  does not manipulate these arrays in any way
(it only passes them to the subroutines), the actual content of the
array  is  never  known  by  the  main  program.   The subroutines,
however, receive the array as a pointer to a structure (defined  in
struct.h).  The data from the arrays is stored in the structure and
the array passed back.  This array is passed by the main program to
one  of  the PHIGS functions that uses it.  Each of those functions
again declares the received array  as  type  pointer  to  structure
(e.g.   a structure pointer), and interprets the structure the same
way it was packed, allowing the data  to  be  retrieved  and  used.
There  is  overhead in this method since FORTRAN requires two steps
(pack data, use data), and C requires only one (use data).   The  C
code must therefore emulate the FORTRAN code to limit the amount of
changes that must be performed by hand on translated code.



2.6.8.4  Character Strings -

     Character strings are represented differently in  the  FORTRAN
language  than  the  C  language.   In  FORTRAN,  the  length  of a
character string is declared as a property of the variable  itself.
In  C,  a  string  can  be  of  any  length  and a null termination


                                15



character signals the end  of  the  string.   The  f2c  translator,
therefore, represents each FORTRAN character variable as two C data
types.  The first is the length of the string, and  the  second  is
the string itself.  Each subroutine call in FORTRAN that contains a
character variable is translated into a C  function  call  with  an
extra  parameter  for  each character variable added on to the end.
The lengths of each string are conveyed in these  extra  variables.
The  layer  code  is written to account for these length variables.
Therefore, in the  LAYER  code,  some  PHIGS  functions  have  more
parameters  than the standard requires.  These parameters are added
to hold the lengths of the strings to be received.  For example the
FORTRAN call to <text>:
                                                             
       REAL          PX, PY
       CHARACTER*(*) CHARS
       ...
       CALL PTX ( PX, PY, CHARS )

  is translated to:

       float *px, *py;
       char *chars;
       int clen;
       ...
       ntx (*px, *py, *chars, clen)


     Notice the extra parameter clen.  This variable  is  added  to
convey the length of the character string chars.  Each routine that
uses strings follows this convention of the translator.  Since  the
length  is  known, the layer code checks for variables that are too
small to hold data returned from  inquires,  and  will  return  the
PHIGS   error   2001  (Ignoring  function,  output  parameter  size
insufficient) if they are found.



2.6.8.5  Error Handling -

     The FORTRAN standard defines the subroutine PERHND as the name
of  the  error  handling  routine.   A user can write his own error
handling subroutine, but must call it PERHND.  To have this routine
invoked,  most  implementations require the user to link his PERHND
routine before the system routines.  The  C  standard  defines  the
function   perr_hand  to  perform  the  equivalent  error  handling
function.

     The Fortran test code makes extensive use of the  NIST-defined
PERHND  routine to determine if a failure is so great that the test
code  must  abort  immediately.   In   order   to   preserve   this
functionality, the following steps were taken.





                                16



     1.  All explicit calls to PERHND are translated  to  calls  to
         nerhnd (done as usual for other calls to PHIGS functions).

     2.  In the layer code, nerhnd  translates  the  3rd  parameter
         (error file) into a form acceptable to perr_hand.

     3.  After automatic translation of PERHND from Fortran  to  C,
         its  name  is  changed  to perr_hand, and it is altered to
         accept a character string as the 3rd parameter,  to  agree
         with the PHIGS/C binding.


     This procedure allows invocation of the error  handler  in  C,
either  by  the  implementation's  error  signalling or by explicit
calls to  PERHND  in  the  Fortran  code  and  also  supports  both
user-defined and implementor-defined error handling.

     Another  error  handling  issue  is   the   PHIGS/C   function
pset_err_hand.   This  function  designates  an  alternate  routine
(other than the system default perr_hand) to be used as  the  error
handler.   It  has  no  equivalent  in Fortran and is tested in the
C-specific module 09.01.11.01.

     All of these changes should be totally transparent to the user
and are described here only for the purpose of clarifying the code.



2.6.8.6  Parameter Passing -

     Another  common  problem  encountered  when  changing  between
languages  is  the way parameters to functions are passed.  FORTRAN
parameters are passed by reference or value, depending  on  whether
the  parameter is a variable or some other expression.  The FORTRAN
standard states that constants (e.g.  3), expressions  (e.g.   X+2)
and  constant expressions (i.e.  variables declared as parameters),
declared as parameters to functions, may not be  changed  in  those
functions.   This  would  require parameters to be passed by value.
However, it  is  not  specified  that  they  cannot  be  passed  by
reference.   To  avoid  this  problem,  the  translator  passes all
variables by reference.  To prevent  problems  with  constants  and
expressions,  they  are first assigned to a newly created temporary
variable, and then the address of that variable is  passed  to  the
function.  As an example:

      CALL SUB (3, X, X+3)      { value, reference, value }

   is translated to:

       int c_1, c_2;
       c_1 = 3;
       c_2 = X + 3;
       sub(&c_1, &x, &c_2);



                                17



     Arrays and regular variables are already passed by  reference,
and there is no distinction between input or output variables.  The
layer code receives all variables as pointers.



2.6.8.7  Array Indexing -

     The last problem encountered dealt with array  indexing  which
is  the  result  of  another  difference  between the C and FORTRAN
languages, namely  the  way  they  physically  store  arrays.   The
FORTRAN standard specifies column-major order (i.e.  first index is
least significant) when physically storing arrays in memory.  C, on
the  other  hand,  specifies  row-major  order  (first  index  most
significant) when storing the arrays.  If a FORTRAN program were to
pass  a  multi-dimensional  array  to a C function, the array would
have to be first transposed.  Then, the array  is  used  by  the  C
routines,  and  again  transposed  before  being passed back to the
FORTRAN program.  The translator emulates the physical  storage  of
the FORTRAN code by collapsing all n-dimensional arrays to a single
dimension, and calculating array  indexes  internally.   The  layer
code  performs  all  necessary  transpositions  when  building  the
equivalent C structure.



2.7  Ubiquitous Subroutines

     In this section, we discuss briefly the function  of  some  of
the   more   commonly-used   subroutines.   Since  these  are  used
throughout the PVT system, anyone wishing to  understand  the  code
should  be  familiar  with  their  purpose.   There  are many other
subroutines,   however.    All   PVT   subroutine   libraries   are
self-documented, so when questions arise, the code itself should be
consulted.



2.7.1  Initialization And Clean-up Of Test Programs -

     Normally, the first executable statement within a program will
be  a call to INITGL.  This routine performs all the work needed to
set  up  the  environment  for  the  program;  in  particular,   it
initializes  the  values  in  the common areas GLOBNU and GLOBCH so
that they may be used freely (e.g.  workstation type needed to open
a  workstation).   It  does this by reading certain constant values
from the  PVT  configuration  file  (see  section  4.2  on  Running
INITPH).   The  program  supplies  its identifying TEST NUMBER (see
section above on Banner) as the single parameter.

     For interactive programs, the SETDLG subroutine  sets  up  the
dialogue   area   as  requested  in  the  configuration  file,  and
initializes the DIALOG common area.



                                18



     The last executable statement is a call to ENDIT.  This closes
all  open  workstations,  closes  the currently open structure, and
closes PHIGS.  It then calls WINDUP to write out  summary  results,
close  files, and perform any other processing needed to finish the
test program.



2.7.2  TC Subroutines -

     There are a number of subroutines needed to implement a  given
TC in the code.  These correspond closely to the way a TC is set up
in the pseudo-code.  The SETMSG subroutine sets up  a  "current  TC
message"  for the condition about to be tested, which contains both
the SR references and the text describing the condition under test.
If  a  test  case  is  currently being checked for adherence to the
standard, the test message will include "[UNDER REVIEW]".

     Depending on the results of the TC, the program then  executes
either  the PASS or FAIL subroutine, which records the result.  The
IFPF subroutine is a shorthand form, which accepts a single logical
expression as a parameter and invokes PASS if it evaluates as true,
and FAIL if false.



2.7.3  Message Subroutines -

     The only persistent output of each test program is a series of
messages.   The  following  subroutines  generate  messages  of the
indicated type:

    Subroutine    Message-type    Function
    ----------    ------------    --------
    INITGL        SY              initialize program
    ENDIT         SY              finalize program
    PASS          OK              record TC passed
    FAIL          FA              record TC failed
    IFPF          OK or FA        record TC result
    INMSG         IN              information
    UNMSG         UN              abort
    NCMSG         NC              abort
    CHKINQ        NC              continue or abort


     See section 4.4.6 on for the interpretation  of  messages  and
message-types.   The  subroutines UNMSG and NCMSG are used when the
program must be aborted, as opposed to  normal  program  conclusion
which  is done via ENDIT.  No further code is executed after either
of these is encountered in the flow of control.






                                19



2.7.4  CHKINQ -

     It is very  common  within  the  PVT  system  for  an  inquire
function  to  be incidental to the main purpose of the test.  Since
the test relies on the result of the inquire,  we  wish  to  ensure
that  it  has  completed  successfully.  Every incidental use of an
inquire, therefore, is followed by CHKINQ, which simply checks that
the  error  indicator  from  the  function is zero.  If not, CHKINQ
invokes NCMSG and therefore aborts the program.  Otherwise there is
no effect.

     Of course, when an  inquire  function  is  being  purposefully
tested,  its  error  indicator is checked explicitly as part of the
usual PASS/FAIL determination.



3  INSTALLATION

     This section covers the steps needed to install the  PVT  code
on  a  typical computer system.  The advice is necessarily general,
since  many   aspects   of   installation   are   system-dependent.
Installation consists of the following steps:

     1.  Copy files into hierarchical directory

     2.  Customize source code, especially naming of  configuration
         file

     3.  Compile all subroutines

     4.  Optionally, set up batch procedures for passive programs




3.1  File Storage

     Copy the PVT files from the medium on which they are delivered
to the hosting system.  If the medium is magnetic tape, there is an
accompanying information sheet to describe the physical  format  of
the  files.  Also, see Appendix G for detailed guidance on creating
the C version under UNIX.



3.1.1  Hierarchical Format -

     Store the files in a hierarchical directory  as  described  in
section  2.1 and Appendix B.  In particular, use the same two-digit
level numbers as in the files' own self-identification.   The  name
of  the PVT root level is arbitrary; a name like USER~PVT~...  is a
reasonable choice.  See section 2.1 for a list of  the  files  that
belong  in  the  PVT  root  directory.  The global and module-level


                                20



documentation need not be stored  on-line,  although  this  may  be
convenient  for  automatic  searching  for  entities within the PVT
suite.

     Assign the source code filenames  in  the  format  "pxx.f"  or
"pxx.c"  where "xx" indicates the ordinal number within the module,
and ".f" or ".c" indicates the source language.  For  example,  the
program with the header

   C  *********************************************************
   C  *                                                       *
   C  *    TEST NUMBER: 04.02.05.04/05                        *
   C  *    TEST TITLE : WSL pattern table initialized         *
   C  *                 properly                              *
   C  *                                                       *
   C  *    PHIGS Validation Tests, produced by NIST           *
   C  *                                                       *
   C  *********************************************************

should  be  stored  as   "user~pvt~04~02~05~04~p05.f".    Different
operating systems have various conventions for the suffix to denote
Fortran source code, such as ".FOR" or ".FTN".  Any such convention
is  acceptable  as  long  as  it  is  consistently  applied.  It is
strongly recommended, however, that the initial part of the name be
in  the  format  "Pxx".  Throughout the PVT documentation, programs
are always identified according  to  this  format,  and  it  avoids
confusion  if  the  program's  physical  name  matches  its logical
identification.

     Likewise, copy subroutine libraries into the appropriate  tree
nodes.   The  banner of each subroutine identifies the correct node
for the library.  The recommended file name is  sublib.f  (Fortran)
or sublib.c (C).

     When done, check your file  hierarchy  against  the  PVT  tree
structure  as  described in appendix B to ensure that all the files
have been copied.



3.1.2  Alternative Storage Strategy For Subroutines -

     The local subroutine libraries are assigned to  nodes  of  the
tree  only  for  the purpose of clarifying the logical relationship
among the test programs and subroutines.   If  linking  in  several
libraries  is  difficult in your system, you can simply concatenate
all the subroutine source code together  as  one  large  file,  and
compile  it  as  one  library,  presumably in the root.  No two PVT
subroutines have the same name, so no name clashes will occur.

     This alternative method is also on the distribution  tape  for
the  C  binding under the PVT root, pvt~V2LIB (see Figure 3).  This
may allow easier generation of object libraries for some  operating
systems.   The  sub-directory  pvt/V2LIB contains all routines, one


                                21



routine per file, each file name being  the  routine  name.   Files
ending  in  .c  are  the  C versions translated from the equivalent
FORTRAN versions (e.g.  XPOPPH.c  was  translated  from  XPOPPH.f).
Each of the files must be compiled and assembled into a library for
linking.  All object files resulting from the compilation of source
files  ending  in  .c  should comprise a single library.  It is not
recommended that the files be  separated  into  multiple  libraries
because  many  operating  systems require that the calling order of
the routines be followed.



3.2  Customization Of Code

     Some of the source code may need to be changed in order to run
on  your  system.   These places are noted in the code by a comment
line beginning with "CMOD".  Use any text editor to  perform  these
changes.   The  first change, naming the PVT configuration file, is
mandatory for all systems.  All the other changes are optional.



3.2.1  Naming PVT Configuration File -

     First, choose a name for the PVT configuration file.  The name
you  pick  must  be absolute, i.e.  it must be valid when used from
any  part  of  the  hierarchy.   We  recommend  locating  the   PVT
configuration file in the PVT root.

     This name must be inserted in three locations all of which are
in the PVT root:

     1.  the INITPH program which writes the file

     2.  the INITGL subroutine which reads the file and is  located
         in the global sublib file

     3.  the MULTWS subroutine which reads the file,  also  located
         in the global sublib file


     In all three cases, search for the  string  "INITPH.DAT"  (the
name we used) in these routines to locate the insertion point.

     The PVT configuration report file is a human-readable  version
of the PVT configuration file.  Pick a name for it as well, such as
"INITPH.PRT", and insert it into the INITPH program.







                                22



3.2.2  Special Processing For Opening PHIGS -

     All the test cases call XPOPPH to open PHIGS, rather than  the
standard  POPPH.  The XPOPPH subroutine, as delivered, simply calls
POPPH.  If your system  has  special  processing  requirements  for
accessing  PHIGS,  these  may  be addressed by additions to XPOPPH.
Note, however, that  for  validation  purposes,  such  changes  are
subject to approval by NIST.



3.2.3  Random Number Generator -

     The last routine in the global subroutine library,  RND01,  is
written  in  non-standard  Fortran, since that standard provides no
way to randomly initialize a seed for a  random  number  generator.
You  may  alter  RND01  (possibly  using  a local non-standard time
function) so that the seed is different for each  execution.   This
is  the  preferred  mode of execution.  All the other random-number
routines are built on RND01, so if it works, the  others  need  not
and should not be changed.

     For the C version, the standard C function, gmtime is used  to
obtain  a  random  starting value, and so no modification should be
necessary.



3.2.4  Naming Individual Message File -

     If you request that  the  test  programs  generate  individual
message files (see section 4.2.3) INITGL will, by default, form the
name of the file by using "p" as a prefix,  the  two-digit  ordinal
number  of  the  program,  and ".msg" as a suffix; e.g.  p04.f will
write to p04.msg.  if you prefer another naming convention,  search
for ".msg" in the INITGL routine and change the code accordingly.



3.2.5  Resolution Of Parameters For <Open Workstation> -

     The INITGL and MULTWS subroutines read the  PVT  configuration
file  in order to determine the parameter values needed to open the
primary  and  secondary   workstations   (workstation   identifier,
connection identifier, and workstation type), and report these back
to the calling program.  INITGL sets the value of  three  variables
in COMMON to do this, while MULTWS returns the values in its output
parameters.  In both cases, the  assumption  is  that  the  correct
values  are static and can be set once by the INITPH procedure (see
section 4.2, below).  If your system is such that this  information
can  be  determined only at run-time, you must re-code the relevant
sections of INITGL and MULTWS,  so  that  they  still  deliver  the
required values.



                                23



3.2.6  Providing Valid Names For Archive Files -

     The subroutine AVARNM, in node 03 of the PVT tree, must return
to  the  caller  an  integer  representing  the  valid  name  of an
available empty archive file.  The  code  assumes  that  this  name
should  be  interpreted  as a Fortran logical unit number.  If your
system has a different interpretation, or has special  requirements
for  opening  an  archive  file,  you  must  modify this subroutine
accordingly.



3.2.7  Time-stamping Message Files -

     The Fortran standard provides no function for determining time
or  date.   If,  however,  your  implementation does provide such a
feature and you wish to include this information in the PVT output,
we  suggest  you  alter the INITGL subroutine at the point where it
formulates the header system message.  This is done at the very end
of the subroutine, in the last call to BRDMSG.

     If you are modifying the C version, you may wish to use one of
the standard C functions that return the current time.



3.2.8  Operator Communication -

     The OPMSG and OPYN routines in the global  subroutine  library
write  messages  to and read messages from the operator.  Because a
workstation may not be open at the time these are executed, the PVT
Fortran  code  resorts to the use of the print and read statements.
If there is a better way to send a character string to and from the
operator   in   your   system,   you  may  re-code  these  routines
accordingly.  If print and read work well  within  your  system  no
change is necessary.



3.2.9  Appending To Global Message File -

     If you specify a global message file (see section 4.2.3),  the
INITGL  routine must position the file pointer at end of file so as
to append new messages.  In standard Fortran, the only  way  to  do
this  is  to  read  through the whole file.  If your Fortran system
provides a more efficient (though non-portable) way to do this, you
may wish to substitute that method in INITGL.  Otherwise, no change
is needed.

     Since the translator uses the FORTRAN code, this  inefficiency
is  carried  into  the  generated C code.  If you wish to provide a
more efficient way in C, such as opening the file in  append  mode,
you may substitute the method for the one provided in INITGL.



                                24



3.2.10  Control Of C Prototyping -

     Since ANSI compliant C allows the use of prototyping  [C1989],
the  layer  code for the C binding provides for both non-prototyped
and prototyped source code.  The use of a  define directive in each
source  file regulates which function declaration will be used.  If
your complier supports prototyping, no  define  directive  need  be
used.  If your complier does not support prototyping, all code must
be compiled with the directive  NO_PROTO.   This  may  be  done  by
changing  the  "Makefiles"  in  the  PVT root, in V2LIB, and in the
LAYER directories.



3.2.11  Special Characters -

     The test  suite  makes  use  of  the  entire  printable  ASCII
character  set  (one  of the requirements of the PHIGS standard for
the <text> function).  The characters appear in the source code and
may  also have another meaning on some systems (e.g.  the backslash
"\" character in UNIX).  Most  compilers  have  a  switch/parameter
that  notifies  the compiler to ignore the special "system" meaning
of these characters during  compilation.   If  the  code  does  not
compile,  check if your system uses any special characters, and the
switch/parameter for your compiler that  disables  them.   If  that
doesn't  work, the source code itself may have to be modified (e.g.
"ab\cd" re-written as ab\\cd").



3.3  Compile Subroutines

     In most systems, you will need to compile all  the  subroutine
files  so  as  to  create  subroutine  libraries, which may then be
linked in with each test program.  Test  suite  programs  for  both
language bindings require:

     1.  errlib, trans-sublib and sublib in the root

     2.  all the local sublib libraries  in  current  and  ancestor
         nodes,  or  in  the  case  of  the  C  binding  and single
         directory method, access to the V2LIB node

     3.  the  PHIGS  library  under  test,   and   possibly   other
         implementation  dependent  libraries,  such  as  those  to
         support windowing systems

The C binding also requires:

     1.  the f2c (FORTRAN to C) subroutine library,  conventionally
         named libf2c.





                                25



     2.  the appropriate C libraries  to  support  mathematics  and
         clock functions


     Of course not all the test programs use all  the  subroutines,
so   do  whatever  your  system  requires  such  that  only  needed
subroutines are linked in.  E.g.  in VMS,  the  /LIBRARY  qualifier
performs this function.

     We strongly  recommend  setting  up  a  command  procedure  to
compile,  link,  and  execute a test program solely by referring to
the name of the  program.   In  particular,  all  local  subroutine
                   _____
libraries  (those  above the program in the directory tree) and the
global libraries must be made available, as well as linking to  the
code  of the PHIGS implementation.  Note that errlib.f contains the
PERHND  subroutine  -  the  standard  PHIGS-Fortran  name  for   an
error-handler.  Correspondingly, errlib.c in the C version contains
perr_hand - the standard PHIGS-C name for an  error-handler.   Some
PHIGS  implementations  may  require  special  treatment to link in
PERHND or perr_hand.  Since most linkers prefer to be given  access
to  libraries  in order from caller to called procedure, the normal
sequence would be:

     1.  the local PVT libraries,

     2.  trans-sublib

     3.  the global PVT library, sublib

     4.  errlib (unless the system error-handler is to be used)

     5.  layer code for C binding

     6.  f2c library

     7.  PHIGS library

     8.  support libraries for C language

See Appendix F for two examples of how this might be  done.   These
examples  also show how errlib can be included or not:  this is the
way  that  many  systems  control   whether   a   user-defined   or
system-defined routine performs error handling.



3.4  Procedures For Batch Processing

     It may prove useful to construct a batch procedure (such as  a
shell  script  in  Unix)  for the passive tests of each category of
workstation, so that  you  can  automatically  invoke  the  correct
subset  of programs.  Be careful, however, that you provide for the
possibility of non-completion (e.g.  failure  to  compile,  aborted
execution) of programs run in batch mode.


                                26



4  OPERATION

     In this  section,  we  cover  the  steps  needed  to  run  and
interpret the PVT system.  Like other conformance test systems, the
PVT is not, nor can it be, a totally automated  process.   The  PVT
code and documentation are best seen as components of an integrated
and interdependent system,  which  includes  the  operator  as  its
active, directing component.  We include in the notion of operation
the  process  of  interpreting  the  behavior  of   the   programs,
particularly with regard to conformance.



4.1  PVT Sessions And Workstations

     Let us refer to the execution of a set of PVT  programs  as  a
_______
session.    For   each  session,  a  primary  workstation  must  be
specified, together with an optional set of secondary workstations.
The  primary  workstation  is the one whose features are thoroughly
tested by the PVT programs.  Secondary workstations are tested only
by  certain  special-purpose  programs  such  as those dealing with
multiple workstations.  Thus, for each workstation to be tested  in
depth, the operator must run a distinct session.

     In order to conform, a PHIGS implementation  must  support  at
least  one  workstation  of  category OUTIN.  No other workstations
need be supported.  If other workstations are accessible,  however,
they must have the capabilities associated with their categories.

     Thus, a typical scenario for conformance testing is  first,  a
session  in which an OUTIN workstation is designated as primary and
         ___
in which all the PVT programs are executed.  Such a session  checks
the minimum requirements for conformance.

     Subsequent  sessions  deal  with  the  capabilities  of  other
workstations  of  whatever category.  Each of these workstations is
designated in turn as primary and an appropriate subset of the  PVT
is  executed  for it.  Since there is no need to re-run tests which
are not relevant to the capabilities of these  other  workstations,
not all PVT programs need be executed in these subsequent sessions.
Use the information in the CHARACTERISTICS  entry  of  the  program
design   documentation   (summarized  in  appendix  D  and  in  the
pgm-char.prt  file)  to  decide  which  programs   are   pertinent,
according to the table below.

     Workstation
     Category         CHARACTERISTICS
     --------         ---------------
     OUTIN            yn-- or ny-- or yy--
     OUTPUT           yn--
     INPUT            ny--





                                27



     Programs with a CHARACTERISTIC  entry  of  "--nn"  require  no
operator  interaction and may be run in batch mode; otherwise there
must be an operator for the test.  By convention, within a  module,
all  the  passive  programs  precede  the  interactive  ones  (e.g.
P01-P05 are passive, P06-P09 are interactive).

     Figure 4 summarizes the way  in  which  several  sessions  are
performed so as to constitute a complete test of conformance.




   for each PHIGS implementation (hardware platform + software)
      for each language binding (Fortran, C)

         INITPH for primary OUTIN workstation
         execute all PVT tests for this language
         use COMPLT to check completeness of session

         for each additional workstation type

            INITPH for this workstation type
            execute workstation PVT tests of appropriate category
                (OUTIN,OUTPUT,INPUT) for this language
                (see PGM_CHAR.PRT file for guidance)
            use COMPLT to check completeness of session

         next workstation type
      next language binding
   next implementation



             Figure 4: Use of PVT sessions to test conformance





4.2  Running INITPH For PVT Configuration

     The PVT Configuration file contains the information  which  is
specific to the PHIGS implementation being tested, but the same for
all test programs within the PVT session.  Its purpose is to  allow
an  operator to specify such information only once at the beginning
of each session, rather than repeating it for  each  program.   The
INITPH   program   creates  this  file,  based  on  the  operator's
responses.  The program is stored as initph.f or  initph.c  in  the
PVT  root.   It  uses  some  subroutines from the global subroutine
library, and also from PHIGS itself, so  these  libraries  must  be
available as it is compiled and linked.





                                28



     Execute INITPH, and respond as prompted.  Most  responses  are
in  the  form  of an integer.  When parameter values are requested,
they  should  be  supplied  as  needed  by  the  Fortran   binding.
Conversion  to  C  will  be done automatically by the system.  E.g.
the error file parameter to <open phigs> is supplied by you  as  an
integer,  not a character string.  You should be prepared to supply
the following information to INITPH:

     1.  parameters for <open phigs> (error file and memory units)

     2.  number of workstations accessible in this session

     3.  <open  workstation>   parameters   for   each   accessible
         workstation     (workstation     identifier,    connection
         identifier, workstation type)

     4.  whether to suppress "pass" messages

     5.  choice of destination(s) for messages (screen,  individual
         files, or global file)

     6.  file name and logical unit for  global  message  file  (if
         used)

     7.  logical unit for individual message files (if used)

     8.  maximum line length for messages

     9.  whether the implementation allows the  error  file  to  be
         explicitly  opened  and  named  by the application program
         prior to execution of <open phigs>

    10.  an  identifying  character  string  contained   in   error
         messages generated by the system

    11.  whether to control the tests with a pseudo-random or  true
         random number sequence

    12.  whether the  primary  workstation  is  capable  of  visual
         output

    13.  method for prompting the operator, and maximum line length
         for prompts

    14.  method for operator responses to prompt

    15.  location and size of the dialogue and echo areas

    16.  ratio of meters to DC units for  the  primary  workstation
         (to  be  supplied  by you explicitly, or to be measured on
         screen)





                                29



4.2.1  Parameters For Opening PHIGS -

     The first two questions concern the  input  parameters  to  be
passed  to  the  <open  phigs>  function, whenever that function is
needed in a PVT program.  Simply supply  the  numeric  values  your
implementation requires.



4.2.2  Parameters For Opening Workstations -

     The next questions concern the workstations accessible to this
implementation.    Tell  INITPH  the  total  number  of  accessible
workstations (primary and secondary).  Then,  for  each  of  these,
supply  the  three  parameters by which <open workstation> can open
it:  workstation identifier, connection identifier, and workstation
type.   Be  sure  that  the  first  set of parameters refers to the
primary workstation.



4.2.3  Control Of Messages -

     Next, INITPH will ask you whether you want  a  message  to  be
generated whenever the implementation successfully passes a TC in a
test program.  You can specify either that such messages are always
suppressed,  always  generated,  or  that  each  program  asks  the
operator what to do, so that he or  she  can  selectively  suppress
pass-messages  at  run-time.   No  other  type  of  message  can be
suppressed.

     The next questions deal with the destination  of  messages  as
they are generated.  First, indicate whether or not messages are to
be sent to the operator (typically on the screen).  Next,  indicate
to  which  files  messages  should  be written.  Individual message
files are created once per execution of a test program.  By default
they  are  given  the  same  name  as the program, but with a "msg"
suffix, rather than "f" or "c".   The  global  message  file  is  a
cumulative  file  to  which  messages  are appended whenever a test
program is run.

     These are independent choices; messages can  be  sent  to  any
combination  of the three destinations:  operator, individual file,
or global file.  Each enabled destination receives exactly the same
set of messages.

     If you specify  a  global  file,  you  must  then  provide  an
absolute  name for this file, so that all programs can write to it.
This response is, of course, not in the form of an integer, as  are
the others.  You may want to specify a distinct name for the global
message file of each PVT session.  It may be useful for the name to
reflect   the   language  binding  and  the  type  of  the  primary
workstation  of  the  session  which   it   is   recording.    E.g.
"init-vt340-c.msg"  might  be  used to indicate the validation of a


                                30



VT-340 terminal using the C binding.

     Since  some  operating  systems  have  reserved  logical  unit
numbers  in  Fortran,  you  are also asked to provide these for the
individual and/or global file, if  they  have  been  designated  as
destinations.

     You must specify the maximum number  of  characters  per  line
which  should  be  generated when the PVT system formats a message.
Some  messages  may  be  quite  long  and  would  not  fit   on   a
reasonably-sized  single  line.   Message  text is never truncated;
rather, it is simply broken into lines of the specified size.



4.2.4  Control Of Error File -

     Many of the PVT programs that test error  handling  do  so  by
reading the error file created by the implementation.  If possible,
the ESETUP subroutine in 09.01 will assign the  name  "pxx.erf"  to
the  error file generated by the program pxx, by explicitly opening
the file and then passing its logical unit number to <open  phigs>.
Otherwise,  the  system  default name is used.  Tell INITPH whether
your implementation allows opening of the error file prior to <open
phigs>.

     When the PVT attempts to read and examine the error  file,  it
does not assume that there is exactly one record per error message.
Therefore, if each message  contains  a  special  character  string
(such  as  "PHIGS_ERROR:"),  supply this value so that multi-record
error messages can be distinguished automatically.

     Finally, INITPH will attempt to automatically create an  error
file  with a single error message; the text of this message will be
used as a separator when later tests analyze the contents of  error
files  generated  by  the  system.   Therefore, this single-message
error file  must  be  readable  by  those  tests,  under  the  name
"errsep.erf".   If the error file cannot be explicitly named by the
program, you must re-name it after execution  of  INITPH  from  its
system name to "errsep.erf".  INITPH will display a message if this
is necessary.



4.2.5  Control Of Randomization -

     Many of the interactive tests randomize the choices  presented
to  the  operator so that the correct responses are not predictable
(see section below on operator interaction).   For  some  purposes,
however,  it  is  desirable  that the tests execute with repeatable
displays and operator prompts.   If  you  want  to  get  repeatable
behavior, enter a real number between 0.1 and 0.9.  This value will
be  used  as  the  seed  for  a  random  number  sequence.    Thus,
re-initializing  to a distinct value between 0.1 and 0.9 will cause


                                31



repeatable behavior within the new session, but distinct from  that
of the previous session.

     Entering any value outside the range  of  0.1-0.9  causes  the
system  to  use  a  time  function  to  set the seed for the random
sequence, and thus generates truly random operator choices.



4.2.6  Primary Workstation Support For Graphical Output -

     If the primary workstation is capable of visual output, answer
yes,  otherwise  no.   The normal answer is "yes".  The question is
here to allow for testing of INPUT-only workstations  and  metafile
workstations in later versions of the PVT.



4.2.7  Control For Prompting The Operator -

     When running the interactive tests, the system poses questions
to  the  operator.   This  option lets you choose the mechanism for
transmitting  those  questions:   1-Fortran   print   (or   its   C
equivalent),   2-PHIGS  <message>,  or  3-PHIGS  <text>.   In  many
systems, Fortran PRINT will write to another window.  PHIGS  <text>
will  use  some  of the PHIGS display space for questions, possibly
leaving less room for the picture under examination.

     If using Fortran print or PHIGS <message>,  you  must  specify
the maximum number of characters per line in interactive prompts.



4.2.8  Control For Operator Responses To Prompt -

     You may specify the means by which the operator is to  respond
to  prompts:   either  1-Fortran  read  (or  its  C equivalent), or
2-PHIGS <request  string>  (and  the  device  number  for  <request
string>).



4.2.9  Location And Size Of The Dialogue And Echo Areas -

     If you are using PHIGS for operator input or output, you  must
specify  where  the  dialogue area (containing operator prompts and
responses) should be.  The choices are:  1-dialogue  at  bottom  of
screen  or  PHIGS  window, 2-dialogue at right, or 3-toggle picture
and dialogue so that the screen  can  alternate  betweem  the  two.
Since the picture area will use the largest square remaining on the
screen after the dialogue area has been reserved, it is recommended
that the dialogue area be on the right for wide screens, and on the
bottom for tall screens.



                                32



     You must then specify what percentage of the screen should  be
reserved  for  the  dialogue area.  Something in the range of 15-30
percent is usually a reasonable choice.

     Finally, if you are using PHIGS for  operator  input,  specify
what percentage of the dialogue area is to be reserved for the echo
of operator responses (the remaining area  is  used  for  prompts).
Since prompts are usually larger than the responses, something like
10-20 percent is a good choice.



4.2.10  Ratio Of Meters To DC Units For The Primary Workstation -

     You must tell the system the ratio of meters to DC  units  for
this  workstation.   You  may  either enter the number directly, or
physically measure a diagonal line on the screen, and  INITPH  will
compute the result.

     At the successful conclusion of INITPH, the operator  receives
a  report  on the names of the files to which the PVT configuration
file and PVT configuration report file (the human-readable version)
have been written.



4.3  Background Documentation

     In order to  understand  the  significance  of  the  programs'
output   for   conformance,   you   should  read  over  the  module
documentation and those sections of the standard referred to in the
#S  entries  of  the  SRs.   You  will  then  have  the appropriate
background information to allow you to focus on the details of each
test result.



4.4  Execution And Interpretation

     Invoke the system-dependent command(s) needed to compile, link
and  execute  each  program  in the session.  There are a number of
possible outcomes, each of which are dealt with below.   We  assume
throughout  the  following  sections  that  the  PVT  programs  are
themselves valid.  If you encounter some aspect of a program  which
you believe is incorrect, please submit a comment to that effect as
described in section 1.



4.4.1  Testing Error Handling -

     Normally, test programs are executed with  the  error  handler
defined  by the PVT (residing in errlib in the PVT root) in effect.
Those programs, however, that test the behavior of the system error


                                33



handler may have to be invoked in a different way, so as to exclude
errlib.  These programs  include  all  those  in  modules  numbered
09.01.xx.02, and 09.01/p03-p05.



4.4.2  Language Specific Tests -

     Note that some nodes  pertain  only  to  a  specific  language
binding.  For version 2.1 of the PVT these are:

       Fortran only:            C only:
       09.01.10                 09.01.11
       09.01.10.01              09.01.11.01
       09.01.10.02              09.01.11.02
       09.02.10                 09.02.11
       11.01                    11.02




4.4.3  Failure To Compile Or Link -

     If your compiler does not support some feature of ANSI Fortran
[FORT78]  or  ANSI C [C1989] used by a PVT program, you must find a
different way to perform the equivalent operation.  Note,  however,
that  such  lack  of support constitutes non-conformance, since the
Fortran  binding  [PHFOR90]  incorporates  the   Fortran   standard
[FORT78]  and  the  C  binding  [PHC91] incorporates the C standard
[C1989].  Similarly, problems in the system software which performs
linking  of  subroutines must be resolved by you.  Any problem with
system software which  prevents  a  valid  invocation  of  a  PHIGS
function by a program renders the implementation non-conforming.

     Uncorrected failure to begin execution of a program should  be
noted  by  running  the  OPRCMT program.  This will record operator
comments as messages in the specified destination files.  Therefore
the  results of all tests (even non-executing tests) are saved in a
uniform way.  Even though the OPRCMT program  resides  in  the  PVT
root,  you should be in the sub-directory of the appropriate module
when executing OPRCMT so that the individual message file  will  be
written  in  the  correct  location.   For example, suppose program
06.01.02/01  cannot  be  executed.   Then,  while  still  in   that
sub-directory,  execute  OPRCMT, enter the identifier of the module
and program ("06.01.02/01"), and  then  enter  your  comment(s)  as
prompted by the program.



4.4.4  Failure To Complete Execution -

     The PVT programs are written conservatively so as to fall well
within   the   operational   limits   of   any   reasonable   PHIGS
implementation.  Furthermore, the  PERHND  (or  perr_hand,  for  C)


                                34



subroutine  supplied  in  errlib.f  (or errlib.c) should handle any
errors signalled by  PHIGS  functions.   Therefore,  it  is  to  be
expected  that  every PVT program, once started, will proceed until
completion under the control of  the  appropriate  PVT  subroutine,
such  as  ENDIT  for  successful  completion,  or UNMSG for aborted
completion.

     If the PHIGS system itself aborts execution, it means that the
implementation  fails  the  test  and  does  not  conform, since no
unhandled PHIGS error conditions should arise within the PVT  code.
If  not otherwise evident, this outcome is indicated by the absence
of two SY-type messages (the first containing the error count,  the
second  to  identify  PVT  completion)  at  the  end of the message
file(s).

     You may wish to use the OPRCMT program (see preceding section)
to  enter an operator comment on the cause of failure, but be aware
that the individual message file generated by the original  program
may  be over-written.  The cumulative message file will contain the
output of both the aborted program and OPRCMT.



4.4.5  Operator Interaction -

     The interactive tests all present a graphical display  to  the
operator  in  the picture area of the screen and then ask him/her a
question about it.  See the OPERATOR SCRIPT entries in the  DOC.TXT
files   for   detailed   instructions   if   the   screen   is  not
self-explanatory.



4.4.5.1  Format For Answering Questions -

     In general, the format of the response should be obvious  from
the  question.   Most questions are single integer choices, such as
"Which fill area is different?" referring to a display of perhaps 8
numbered  fill areas.  Answer such questions with a single integer,
                                    __ _____ __ __  ______  _______
in the example given, 1 through 8.  If there is no  unique  correct
______
answer  (e.g.   all fill areas are the same, or several differ from
                                    _______ ____ ___
each other, or the screen is blank) respond with "0" (see below).

     When a  list  is  called  for  (e.g.   "Which  primitives  are
highlighted?"),  enter a list of integers separated by commas, e.g.
"2,3,5,6".  If the order of the list  is  significant,  the  prompt
will  so indicate.  The single character "n" denotes the empty list
(e.g.  your response  should  be  "n"  if  none  of  the  displayed
primitives were highlighted).

     Other response types are:  real numbers, "y" or "n" for yes/no
questions,  and  character strings.  If a response has an incorrect
format, PVT issues a warning and lets you re-enter the response.



                                35



4.4.5.2  Special Processing Of Operator Responses -

     Except for yes/no questions,  which  require  "y"  or  "n",  a
response  of  "0"  is  always  valid and means that the question is
unanswerable.  After a "0"  response,  the  operator  is  given  an
opportunity  to  enter a free-form comment explaining the nature of
the problem.  The comment is then recorded in  the  output  message
file.   An  operator  comment is entered as several text lines, and
terminated by a line containing a single period.  If the first line
of  the  comment  is the termination line, no message is generated.
Usually a "0" response causes the associated test case to fail.

     Also,  the  operator  may  respond  to  any  prompt  with  "@"
(at-sign).   This  allows  him/her to enter a comment pertaining to
the current picture and prompt,  but  without  causing  failure  as
would  the  "0"  response.   The  comment  is  made before actually
answering the question.  As with "0", the comment is recorded as  a
message  and  terminated  by  a  line  with a single period.  After
entering the comment, the original question is put to the  operator
again and must still be answered.

     When the operator has indicated to INITPH  that  the  dialogue
and  picture  area  are  to  be  toggled  (see  section 4.2.7), the
toggling is controlled by entering "t" or "T".  The  effect  is  to
switch  between  displaying the dialogue area and the picture area.
The actual answer may be entered when either area is visible.



4.4.6  Completion Of Execution And Message Type -

     The PVT programs sometimes examine whether they can proceed to
execute,  or  whether  anomalous  conditions  have arisen such that
further execution is futile.  In the latter case, before  stopping,
the  program  will issue a message of type UN or NC, indicating the
reason for aborting further testing.  Normally, all the TCs  within
the  program  that  are  appropriate  for  the  implementation  are
executed.

     In either case, the output of a completed PVT program consists
of  a  sequence  of  messages.   These  messages  are  sent  to the
destinations specified in the PVT  configuration  file.   They  are
followed by three records each consisting of a single period.  This
serves to separate visually the output of each test in  the  global
message file.

     The messages are categorized into seven types in order to help
the operator assess their significance.  The output is formatted so
that these types appear in the leftmost columns, with the  text  of
the   messages   indented.    The  following  table  describes  the
circumstances associated with each of the message types.





                                36



                       Message Types

    SY: System message, generated by INITGL and ENDIT.  These
        messages herald the beginning and completion of execution
        of a PVT program.  The next-to-last message contains a
        summary of the number of TCs executed and failures
        detected.

    OK: The standard message resulting from a passed test case,
        generated by PASS or IFPF.  INITPH allows the operator to
        suppress messages of this type.

    FA: The standard message resulting from a failed test case,
        generated by FAIL or IFPF.

    IN: Informational message, generated by INMSG or SIGTST.
        Some situation was encountered which, while not
        erroneous, is worth noting, for example, the
        implementation is such that a certain condition cannot be
        tested.  Also, this type of message can be used for the
        purpose of conveying useful but not conformance-related
        information about the implementation, such as support of
        optional PHIGS features.

    OP: Message as entered by the operator, either as a result of
        entering "0", or "@" in response to a prompt.  Typically,
        this message is used to record some unusual or unexpected
        visual feature of the display.

    UN: Unanticipated error message, generated by UNMSG.  This
        message is generated when the program detects some
        anomalous condition that prevents further processing.  No
        inference is to be drawn concerning implementation
        conformance.

    NC: Unanticipated non-conformance error message, generated by
        NCMSG or CHKINQ.  The program must abort because a feature
        of PHIGS which is not under test, but needed for the test,
        has failed.  Since the incidental feature is mandated by
        the standard, its failure indicates non-conformance.  Most
        commonly, this message type is generated by CHKINQ when a
        required inquire function fails.




4.4.7  Analysis Of Results -

     The operator may inspect  the  output  at  several  levels  of
detail.   In  the  simplest  case, he or she may simply look at the
error count at the end, to  see  whether  or  not  all  tests  were
passed.   By  scanning  the left column for FA or NC type messages,
the operator can focus on problems of  non-conformance  and  ignore
the   other   output.    Finally,  one  can  note  the  content  of


                                37



informational messages, which tests were passed  or  failed,  which
SRs  are  implicated in the result, and what the precise conditions
of the test were.



4.4.8  Troubleshooting -

     Obviously, these  is  no  foolproof  procedure  for  analyzing
unexpected results, but we recommend the following steps:

     1.  Look at the design for the program in  question  contained
         in  the  file  "DOC.TXT"  in the same sub-directory.  This
         document describes the part of the standard that is  being
         tested and the methodology the test is using.

     2.  In the case of Fortran, read the code as it corresponds to
         the design.  Subroutines may be located via the subroutine
         directory in Appendix E.

     3.  As previously stated, the C code is the translated version
         of  the equivalent FORTRAN code.  The converter translates
         the FORTRAN source code, but much of  the  readability  of
         the original code is lost in the translation.  If you have
         both language versions, it may help to read the equivalent
         Fortran alongside the C code.

     4.  If the failure occurred on a PHIGS call in the C  version,
         check  the  source code for the layer routine that failed.
         This code resides  in  the  sub-directory  pvt/LAYER  (See
         Figure 3).



4.5  Session Completion

     When you believe you have completed a session you may use  the
COMPLT  utility  to examine the global message file produced by the
session so as to check that no programs have been skipped.   COMPLT
does  not  work in the absence of a global file.  This utility is a
simple Fortran or C program; it does not call PHIGS.

     As prompted, enter the name of the global message file  to  be
checked, whether the file was produced by the Fortran or C binding,
and the expected subset of the PVT, based on the  category  of  the
primary  workstation.  COMPLT will report any discrepancies between
the expected subset of the PVT and the actual subset  executed,  as
reflected by the presence of "End execution" messages in the global
message file.  The OPRCMT utility  generates  the  "End  execution"
message  expected  by  COMPLT;  therefore  invoking  OPRCMT for any
programs in the session that have failed to run  to  completion  is
required in order to preclude error reports from COMPLT.




                                38



4.6  Customization For Debugging

     Users who are interested in debugging as well  as  conformance
checking  may  wish  to  augment  the  tests  so as to produce more
detailed information.  We recommend that the extra output from such
enhancements  follow  the  usual conventions of the PVT system.  In
particular, we recommend that the information be formatted  into  a
character variable (e.g.  using Fortran's WRITE statement) and then
written out as an IN type message with the INMSG subroutine.  There
are  many  examples  of  this in the normal code.  See these if you
need further guidance.













































                                39



                            REFERENCES

     [CUGI90] John Cugini, Mary  T.   Gunn,  Lynne  S.   Rosenthal,
_____  __________  _____  ________  _____   ______  ______
PHIGS  Validation  Tests  (Version  1.0):   Design  Issues, NIST SP
500-181,  National   Institute   of   Standards   and   Technology,
Gaithersburg, MD, 1990.

                             ___________  ___________  _______  ___
     [CUGI91] John  Cugini,  Interactive  Conformance  Testing  for
_____
PHIGS, Eurographics '91 (ed.  F.  H.  Post and W.  Barth), Elsevier
Science, New York, NY, 1991.

             ___________ ________  _
     [C1989] Programming Language  C,  ANSI  X3.159-1989,  American
National Standards Institute, New York, NY, 1989.

               ___________  ________   _______
     [FORT78]  Programming  Language   FORTRAN,   ANSI   X3.9-1978,
American National Standards Institute, New York, NY, 1978.

             ________ ________  _  _________  ______  ______  _____
     [GKS85] Computer Graphics  -  Graphical  Kernel  System  (GKS)
__________   ___________
Functional   Description,   ANSI   X3.124-1985,  American  National
Standards Institute, New York, NY, 1985.

              ___ __________  ____  _____
     [GKST89] GKS Validation  Test  Suite,  Version  2.1,  National
Institute of Standards and Technology, Gaithersburg, MD.

               ___________ __________ _______ _ ________ ________ _
     [PHFOR90] Information processing systems - Computer Graphics -
____________   ____________  ___________  ________  ______  _______
Programmer's   Hierarchical  Interactive  Graphics  System  (PHIGS)
________ ________ _ ____ __  _______
language bindings - Part 1:  FORTRAN, ISO/IEC 9593-1:1990, American
National Standards Institute, New York, NY, 1990.

              ___________  __________   _   ________   ________   _
     [PHC91]  Information  technology   -   Computer   Graphics   -
____________   ____________  ___________  ________  ______  _______
Programmer's   Hierarchical  Interactive  Graphics  System  (PHIGS)
________ ________ _  ____  __   _
language bindings -  Part  4:   C,  ISO/IEC  9593-4:1991,  American
National Standards Institute, New York, NY, 1990.

                ________  ________  _   ____________   ____________
     [PHIGS89]  Computer  Graphics  -   Programmer's   Hierarchical
___________   ________   ______   _______   _____   __   __________
Interactive   Graphics   System   (PHIGS)   (Part   1:   Functional
____________
Description),  ISO/IEC  9592-1:1989,  American  National  Standards
Institute, New York, NY, 1989.


















                                40












                            APPENDIX A

                         GLOBAL VARIABLES



     Below is a description of  the  variables  in  COMMON  in  the
Fortran source code.  They are used globally throughout PVT.


Variable   Type*   Description
--------   ----    -----------
CONID      S  I    Connection identifier, for <open workstation>
CTLHND     D  I    Tell PERHND whether to abort (0) or return (1)
DUMCH      S  C    Dummy character variables for future use
DUMINT     S  I    Dummy integer variables for future use
DUMRL      S  R    Dummy real variables for future use
ERRIND     D  I    Error indicator, returned from inquire functions
ERRFIL     S  I    PHIGS error file, for <open phigs>
ERRSIG     D  I    Signalled error code returned by PERHND
ERRSW      S  I    Indicates whether to send messages to operator
FUNCID     D  C    Function signalling the error, returned by PERHND
GLBERR     S  C    Absolute name of global message file
GLBLUN     S  I    Logical unit number of global message file
IERRCT     D  I    Count of errors detected by test
IFLERR     S  I    Controls writing of messages to message files
INDLUN     S  I    Logical unit number of individual message file
MAXLIN     S  I    Maximum characters per line in messages
MEMUN      S  I    Number of memory units, for <open phigs>
PASSSW     S  I    Controls writing/suppression of pass-messages
PIDENT     D  C    Unique program identifier - hierarchical number
TESTCT     D  I    Count of conditions tested so far within program
TSTMSG     D  C    Text for next condition to be reported.
UNERR      D  I    Count of unanticipated errors detected by test
WKID       S  I    Workstation identifier, for <open workstation>
WTYPE      S  I    Workstation type, for <open workstation>
           
* S: Static value read from configuration file
  D: Dynamic variable, altered during test execution

  I: Integer
  C: Character
  R: Real




                                A-1












                            APPENDIX B

                        PVT TREE STRUCTURE



     This appendix describes the tree structure of the PVT  system.
The  status  of  each  node  of  the  tree is specified in the left
column, and is one of the following:

     a.  Node does not contain a module.  Denoted by "-".

     b.  Node contains a module.  Denoted by a positive integer, n,
         indicating the number of programs in the module.  The node
         contains exactly one DOC.TXT file, and  n  program  files,
         numbered 1 through n.

     c.  Future  module(s);  the  node,  or  its  descendants  will
         contain modules in future versions of the PVT.  Denoted by
         "f".


     The second column indicates whether the node contains a  local
subroutine  library,  named  sublib.f  or  sublib.c,  to be used by
modules within that node's subtree.  If so, an "s" appears  in  the
column.





















                                B-1

                        PVT TREE STRUCTURE



01    01   Opening and closing PHIGS
      
-     02   Manipulating the CSS
03  s 02.01   Creation and inquiry of CSS networks
10    02.01.01   Individual structure creation
-     02.01.02   Structure deletion functions
06    02.01.02.01   Individual structure deletion
14  s 02.01.02.02   Structure network deletion
02    02.01.02.03   Global structure deletion
-   s 02.01.03   Structure identification and references
03    02.01.03.01   Change structure identifier
03    02.01.03.02   Change structure references
03    02.01.03.03   Change structure identifier and references
-     02.02   Element-level Operations
02    02.02.01   Opening and closing structures
03    02.02.02   Miscellaneous CSS elements
02    02.02.03   Set edit mode and control of element pointer
05    02.02.04   Deletion of structure elements
01    02.02.05   Copy all elements from structure
-     02.03   Examining CSS structures
02    02.03.01   Inquiring element type and size, and content
02  s 02.03.02   Element search
07  s 02.03.03   Incremental spatial search
     
-     03   Archive files
01    03.01   Opening and closing archive files
01    03.02   Conflict resolution flags
08  s 03.03   Archiving and retrieving structures
04  s 03.04   Examining structures in an archive
04  s 03.05   Deleting archived structures

-   s 04   Graphical Output
01  s 04.01   Primitives
02    04.01.01   Polyline
02    04.01.02   Polymarker
02    04.01.03   Text
02    04.01.04   Annotation text relative
03    04.01.05   Fill area
03    04.01.06   Fill area set
02    04.01.07   Cell array
01    04.01.08   Generalized drawing primitive














                                B-2

                        PVT TREE STRUCTURE



-   s 04.02   Primitive-specific aspects
-     04.02.01   Polyline 
04  s 04.02.01.01   Individual attributes
12  s 04.02.01.02   Workstation support
-     04.02.02   Polymarker 
04  s 04.02.02.01   Individual attributes
12  s 04.02.02.02   Workstation support
-   s 04.02.03   Text
11  s 04.02.03.01   Individual attributes
17  s 04.02.03.02   Workstation support
06  s 04.02.03.03   Inquire text extent
-     04.02.04   Annotation text
11  s 04.02.04.01   Individual attributes
08  s 04.02.04.02   Workstation support
-   s 04.02.05   Fill area and fill area set 
05  s 04.02.05.01   Individual attributes
13  s 04.02.05.02   Interior bundles
13  s 04.02.05.03   Edge bundles
06  s 04.02.05.04   Pattern table
-     04.03   Generic attributes
03  s 04.03.01   Set individual aspect source flag
-   s 04.03.02   Colour
04    04.03.02.01   Setting and inquiring workstation colour
10  s 04.03.02.02   Colour facilities and appearance
04    04.03.03   HLHSR
-     04.03.04   Namesets and filters
04  s 04.03.04.01   Namesets
04  s 04.03.04.02   Highlighting and invisibility
     
-     05   Workstations
-     05.01   Accessibility and Facilities
03    05.01.01   Opening and closing workstations
01    05.01.02   Characterization of workstations
08  s 05.02   Workstation updating
02  s 05.03   Posting structures to a workstation
f     05.04   Message

-     06   Geometry
-     06.01   Modelling
07    06.01.01   Modelling utilities
18  s 06.01.02   Modelling transformations in the CSS
-     06.02   Viewing
03  s 06.02.01   Viewing utilities
07  s 06.02.02   Control of workstation view table
04    06.03   Workstation transformations

f     07   Input
f     08   Metafiles







                                B-3

                        PVT TREE STRUCTURE



-     09   Error conditions
06  s 09.01   Error handling 
-   s 09.01.01   Operating state errors
07    09.01.01.01   Handled by user  
07    09.01.01.02   Handled by system
-   s 09.01.02   Workstation errors
10    09.01.02.01   Handled by user  
10    09.01.02.02   Handled by system
-   s 09.01.03   Output attribute errors
17    09.01.03.01   Handled by user  
17    09.01.03.02   Handled by system
-   s 09.01.04   Transformation and viewing errors
07    09.01.04.01   Handled by user  
07    09.01.04.02   Handled by system
-   s 09.01.05   Structure errors
06    09.01.05.01   Handled by user  
06    09.01.05.02   Handled by system
f     09.01.06   Input errors
f     09.01.07   Metafile errors
f     09.01.08   Escape errors
-   s 09.01.09   Archive and retrieve errors
06    09.01.09.01   Handled by user  
06    09.01.09.02   Handled by system
-   s 09.01.10   Fortran-specific errors
04    09.01.10.01   Handled by user  
04    09.01.10.02   Handled by system
-   s 09.01.11   C-specific errors
03    09.01.11.01   Handled by user  
01    09.01.11.02   Handled by system
-   s 09.02   Reported error indicator
04    09.02.01   Operating state error indicators
04    09.02.02   Workstation error indicators
08    09.02.03   Output attribute error indicators
10    09.02.04   Transformation and viewing error indicators
05    09.02.05   Structure error indicators
f     09.02.06   Input error indicators
f     09.02.07   Metafile error indicators
f     09.02.08   Escape error indicators
01    09.02.09   Archive.retrieve error indicators
05    09.02.10   FORTRAN specific error indicators
03    09.02.11   C specific error indicators

f     10   Escape
      
-     11   Language-specific features
01    11.01   Fortran utilities
05    11.02   Features specific to C








                                B-4












                            APPENDIX C

                    VERSION HISTORY OF THE PVT



     The following table summarizes the parts of the PHIGS standard
tested  by  successive  versions  of  the PVT.  "na" indicates "not
applicable", "--" indicates area not yet (if ever) covered by  PVT.
Coverage is the same for Fortran and C.


                                     Passive   Interactive
 
01. Opening and closing PHIGS        v1.0      na
02. Manipulating the CSS             v1.0      na
03. Archives                         v1.0      na
04. Graphical Output                 v1.0      v2.0
05. Workstation Control              v1.0      --
06. Geometry
06.01 Modelling                      v1.0      v2.1
06.02 Viewing                        v1.0      --
06.03 Workstation transformations    v1.0      --
07. Input                            --        --
08. Metafiles                        --        na
09. Error handling                   v2.1      na
10. Escape                           --        --
11. Language-specific features       v1.0      na
 
    PHIGS-PLUS                       --        --

















                                C-1












                            APPENDIX D

                   TEST PROGRAM CHARACTERISTICS



     The following table summarizes the CHARACTERISTICS  entry  for
all of the PVT programs.  See section 2.5.6.1 for an explanation of
the codes.

01          / P01: nnnn

02.01       / P01: nnnn   P02: nnnn   P03: nnnn

02.01.01    / P01: nnnn   P02: nnnn   P03: nnnn   P04: ynnn
              P05: nnnn   P06: nnnn   P07: nnnn   P08: nnnn
              P09: nnnn   P10: ynnn

02.01.02.01 / P01: nnnn   P02: nnnn   P03: nnnn   P04: nnnn
              P05: ynnn   P06: nnnn

02.01.02.02 / P01: nnnn   P02: nnnn   P03: nnnn   P04: ynnn
              P05: ynnn   P06: ynnn   P07: ynnn   P08: nnnn
              P09: nnnn   P10: ynnn   P11: ynnn   P12: ynnn
              P13: ynnn   P14: nnnn

02.01.02.03 / P01: nnnn   P02: nnnn

02.01.03.01 / P01: ynnn   P02: ynnn   P03: nnnn

02.01.03.02 / P01: nnnn   P02: nnnn   P03: ynnn

02.01.03.03 / P01: ynnn   P02: ynnn   P03: nnnn

02.02.01    / P01: nnnn   P02: nnnn

02.02.02    / P01: nnnn   P02: nnnn   P03: nnnn

02.02.03    / P01: nnnn   P02: nnnn

02.02.04    / P01: nnnn   P02: nnnn   P03: nnnn   P04: nnnn
              P05: nnnn

02.02.05    / P01: nnnn



                                D-1

                   TEST PROGRAM CHARACTERISTICS


02.03.01    / P01: nnnn   P02: nnnn

02.03.02    / P01: nnnn   P02: nnnn

02.03.03    / P01: nnnn   P02: nnnn   P03: ynnn   P04: nnnn
              P05: ynnn   P06: nnnn   P07: nnnn

03.01       / P01: nnnn

03.02       / P01: nnnn

03.03       / P01: nnnn   P02: nnnn   P03: nnnn   P04: nnnn
              P05: nnnn   P06: nnnn   P07: nnnn   P08: nnnn

03.04       / P01: nnnn   P02: nnnn   P03: nnnn   P04: nnnn

03.05       / P01: nnnn   P02: nnnn   P03: nnnn   P04: nnnn

04.01       / P01: ynny

04.01.01    / P01: nnnn   P02: ynny

04.01.02    / P01: nnnn   P02: ynny

04.01.03    / P01: nnnn   P02: ynny

04.01.04    / P01: nnnn   P02: ynny

04.01.05    / P01: nnnn   P02: ynny   P03: ynny

04.01.06    / P01: nnnn   P02: ynny   P03: ynny

04.01.07    / P01: nnnn   P02: ynny

04.01.08    / P01: ynnn

04.02.01.01 / P01: nnnn   P02: ynny   P03: ynny   P04: ynny

04.02.01.02 / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: ynnn   P07: ynnn   P08: ynnn
              P09: ynny   P10: ynny   P11: ynny   P12: ynny

04.02.02.01 / P01: nnnn   P02: ynny   P03: ynny   P04: ynny

04.02.02.02 / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: ynnn   P07: ynnn   P08: ynnn
              P09: ynny   P10: ynny   P11: ynny   P12: ynny

04.02.03.01 / P01: nnnn   P02: ynny   P03: ynny   P04: ynny
              P05: ynny   P06: ynny   P07: ynny   P08: ynny
              P09: ynny   P10: ynny   P11: ynny

04.02.03.02 / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: ynnn   P07: ynnn   P08: ynnn


                                D-2

                   TEST PROGRAM CHARACTERISTICS


              P09: ynnn   P10: ynny   P11: ynny   P12: ynny
              P13: ynny   P14: ynny   P15: ynny   P16: ynny
              P17: ynny

04.02.03.03 / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: ynny

04.02.04.01 / P01: nnnn   P02: ynny   P03: ynny   P04: ynny
              P05: ynny   P06: ynny   P07: ynny   P08: ynny
              P09: ynny   P10: ynny   P11: ynny

04.02.04.02 / P01: ynny   P02: ynny   P03: ynny   P04: ynny
              P05: ynny   P06: ynny   P07: ynny   P08: ynny

04.02.05.01 / P01: nnnn   P02: ynny   P03: ynny   P04: ynny
              P05: ynny

04.02.05.02 / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: ynnn   P07: ynnn   P08: ynnn
              P09: ynnn   P10: ynny   P11: ynny   P12: ynny
              P13: ynny

04.02.05.03 / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: ynnn   P07: ynnn   P08: ynnn
              P09: ynnn   P10: ynny   P11: ynny   P12: ynny
              P13: ynny

04.02.05.04 / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: ynnn

04.03.01    / P01: nnnn   P02: ynny   P03: ynny

04.03.02.01 / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynny

04.03.02.02 / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: ynny   P07: ynny   P08: ynny
              P09: ynny   P10: ynny

04.03.03    / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn

04.03.04.01 / P01: nnnn   P02: nnnn   P03: nnnn   P04: ynny

04.03.04.02 / P01: ynnn   P02: ynnn   P03: ynny   P04: ynny

05.01.01    / P01: nnnn   P02: nnnn   P03: nnnn

05.01.02    / P01: nnnn

05.02       / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: yynn   P07: ynnn   P08: ynnn

05.03       / P01: ynnn   P02: ynnn

06.01.01    / P01: nnnn   P02: nnnn   P03: nnnn   P04: nnnn


                                D-3

                   TEST PROGRAM CHARACTERISTICS


              P05: nnnn   P06: nnnn   P07: nnnn

06.01.02    / P01: nnnn   P02: nnnn   P03: nnnn   P04: nnnn
              P05: nnnn   P06: nnnn   P07: nnnn   P08: nnnn
              P09: ynny   P10: ynny   P11: ynny   P12: ynny
              P13: ynny   P14: ynny   P15: ynny   P16: ynny
              P17: ynny   P18: ynny

06.02.01    / P01: nnnn   P02: nnnn   P03: nnnn

06.02.02    / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: ynnn   P07: nnnn

06.03       / P01: ynnn   P02: ynnn   P03: ynnn   P04: nnnn

09.01       / P01: nnnn   P02: nnnn   P03: nnny   P04: nnny
              P05: nnny   P06: ynnn

09.01.01.01 / P01: nnnn   P02: ynnn   P03: nnnn   P04: ynnn
              P05: nnnn   P06: nnnn   P07: nnnn

09.01.01.02 / P01: nnny   P02: nnnn   P03: nnny   P04: ynny
              P05: nnny   P06: nnny   P07: nnny

09.01.02.01 / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: ynnn   P07: ynnn   P08: ynnn
              P09: ynnn   P10: ynnn

09.01.02.02 / P01: ynny   P02: ynny   P03: ynny   P04: ynny
              P05: ynny   P06: ynny   P07: ynny   P08: ynny
              P09: ynny   P10: ynny

09.01.03.01 / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: ynnn   P07: ynnn   P08: ynnn
              P09: ynnn   P10: ynnn   P11: ynnn   P12: ynnn
              P13: ynnn   P14: ynnn   P15: ynnn   P16: nnnn
              P17: ynnn

09.01.03.02 / P01: ynny   P02: ynny   P03: ynny   P04: ynny
              P05: ynny   P06: ynny   P07: ynny   P08: ynny
              P09: ynny   P10: ynny   P11: ynny   P12: ynny
              P13: ynny   P14: ynny   P15: ynny   P16: nnny
              P17: ynny

09.01.04.01 / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: ynnn   P07: ynnn

09.01.04.02 / P01: ynny   P02: ynny   P03: ynny   P04: ynny
              P05: ynny   P06: ynny   P07: ynny

09.01.05.01 / P01: nnnn   P02: nnnn   P03: nnnn   P04: nnnn
              P05: nnnn   P06: ynnn

09.01.05.02 / P01: nnny   P02: nnny   P03: nnny   P04: nnny


                                D-4

                   TEST PROGRAM CHARACTERISTICS


              P05: nnny   P06: ynny

09.01.09.01 / P01: nnnn   P02: nnnn   P03: nnnn   P04: nnnn
              P05: nnnn   P06: nnnn

09.01.09.02 / P01: nnny   P02: nnny   P03: nnny   P04: nnny
              P05: nnny   P06: nnny

09.01.10.01 / P01: ynnn   P02: nnnn   P03: ynnn   P04: nnnn

09.01.10.02 / P01: ynny   P02: nnny   P03: ynny   P04: nnny

09.01.11.01 / P01: nnnn   P02: nnnn   P03: ynnn

09.01.11.02 / P01: ynny

09.02.01    / P01: nnnn   P02: nnnn   P03: nnnn   P04: nnnn

09.02.02    / P01: nnnn   P02: ynnn   P03: ynnn   P04: ynnn

09.02.03    / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: ynnn   P06: ynnn   P07: ynnn   P08: ynnn

09.02.04    / P01: nnnn   P02: nnnn   P03: nnnn   P04: nnnn
              P05: nnnn   P06: nnnn   P07: nnnn   P08: nnnn
              P09: nnnn   P10: nnnn

09.02.05    / P01: ynnn   P02: nnnn   P03: nnnn   P04: nnnn
              P05: nnnn

09.02.09    / P01: nnnn

09.02.10    / P01: ynnn   P02: ynnn   P03: ynnn   P04: ynnn
              P05: nnnn

09.02.11    / P01: ynnn   P02: ynnn   P03: ynnn

11.01       / P01: nnnn

11.02       / P01: nnnn   P02: nnnn   P03: nnnn   P04: nnnn
              P05: nnnn















                                D-5












                            APPENDIX E

              DICTIONARY OF SUBROUTINES AND FUNCTIONS



     This table lists all subroutines and functions in the PVT,  in
alphabetical  order.   The two columns following each function name
indicate whether it is a subroutine or function, and its  location.
For example, ACTST is a subroutine in pvt~02~01~03~sublib, APPEQ is
a logical function in pvt~sublib, and ARRTP3  is  a  subroutine  in
pvt~trans-sublib.

abend   SUBROUT GL                abest3  INTG-FN TR
actst   SUBROUT 02.01.03          altsiz  SUBROUT 04.02
appeq   LOGC-FN GL                arcpth  SUBROUT 03.04
arcpts  SUBROUT 04                arreq   LOGC-FN 04.02.05.04
arrtp3  SUBROUT TR                asfint  SUBROUT 04.03.01
asfset  SUBROUT 04.03.01          avarnm  SUBROUT GL
basbot  REAL-FN 04.02             brdmsg  SUBROUT GL
c01002  SUBROUT 09.01.01          c01003  SUBROUT 09.01.01
c01004  SUBROUT 09.01.01          c01005  SUBROUT 09.01.01
c01006  SUBROUT 09.01.01          c01007  SUBROUT 09.01.01
ceilng  INTG-FN TR                chkelp  SUBROUT GL
chkfnt  SUBROUT 04.02             chkinq  SUBROUT GL
chkmcv  SUBROUT 06.01.02          chkpst  SUBROUT 05.03
chmono  SUBROUT 04.02.03.03       chtxrc  SUBROUT 04.02.03.03
cldiag  SUBROUT 04.02.05.01       clpair  SUBROUT 06.01.02
clpgon  SUBROUT 06.01.02          clpmk5  SUBROUT 06.01.02
coleql  LOGC-FN 04.03.02.02       colnam  SUBROUT 04.03.02
colpch  SUBROUT 04.03.02.02       coltrn  SUBROUT 04.03.02.02
comtok  SUBROUT 06.01.02          cpyiar  SUBROUT GL
crest   SUBROUT 09.01             crossp  SUBROUT TR
csseq   LOGC-FN GL                cssids  LOGC-FN 03.03
csspth  SUBROUT GL                curnms  SUBROUT 04.03.04.01
dchfl   LOGC-FN GL                dchflv  LOGC-FN GL
dchoic  SUBROUT GL                dchpf   SUBROUT GL
dchpfv  SUBROUT GL                deblnk  SUBROUT GL
delcss  SUBROUT 02.01.02.02       denhat  SUBROUT GL
dilist  SUBROUT GL                discol  SUBROUT 04
disedb  SUBROUT 04.02.05.03       disinb  SUBROUT 04.02.05.02
displb  SUBROUT 04.02.01.02       dispmb  SUBROUT 04.02.02.02
distxb  SUBROUT 04.02             dline   SUBROUT GL
dlstpf  SUBROUT GL                doimod  SUBROUT 05.02
dotprd  REAL-FN TR                drbued  SUBROUT 04.02.05.03


                                E-1

              DICTIONARY OF SUBROUTINES AND FUNCTIONS


drlval  SUBROUT GL                drwatx  SUBROUT 04.02.04.02
drwedb  SUBROUT 04.02.05.03       drwint  SUBROUT 04.02.05.02
drwplb  SUBROUT 04.02.01.02       drwpmb  SUBROUT 04.02.02.02
drwrec  SUBROUT GL                drwtxt  SUBROUT 04.02.03.02
ds3     SUBROUT 09.01.04          dsanst  SUBROUT 04.02.04.01
dstrng  SUBROUT GL                dyn     LOGC-FN GL
dynpf   SUBROUT GL                e01001  SUBROUT 09.01.01
e01003  SUBROUT 09.01.01          e01004  SUBROUT 09.01.01
e01005  SUBROUT 09.01.01          e01006  SUBROUT 09.01.01
e01007  SUBROUT 09.01.01          e02052  SUBROUT 09.01.02
e02053  SUBROUT 09.01.02          e02054  SUBROUT 09.01.02
e02056  SUBROUT 09.01.02          e02057  SUBROUT 09.01.02
e02058  SUBROUT 09.01.02          e02059  SUBROUT 09.01.02
e02060  SUBROUT 09.01.02          e02061  SUBROUT 09.01.02
e02063  SUBROUT 09.01.02          e03100  SUBROUT 09.01.03
e03101  SUBROUT 09.01.03          e03103  SUBROUT 09.01.03
e03104  SUBROUT 09.01.03          e03105  SUBROUT 09.01.03
e03106  SUBROUT 09.01.03          e03107  SUBROUT 09.01.03
e03108  SUBROUT 09.01.03          e03110  SUBROUT 09.01.03
e03111  SUBROUT 09.01.03          e03112  SUBROUT 09.01.03
e03113  SUBROUT 09.01.03          e03114  SUBROUT 09.01.03
e03115  SUBROUT 09.01.03          e03116  SUBROUT 09.01.03
e03117  SUBROUT 09.01.03          e03118  SUBROUT 09.01.03
e04150  SUBROUT 09.01.04          e04151  SUBROUT 09.01.04
e04152  SUBROUT 09.01.04          e04153  SUBROUT 09.01.04
e04154  SUBROUT 09.01.04          e04156  SUBROUT 09.01.04
e04157  SUBROUT 09.01.04          e05200  SUBROUT 09.01.05
e05201  SUBROUT 09.01.05          e05205  SUBROUT 09.01.05
e05206  SUBROUT 09.01.05          e05207  SUBROUT 09.01.05
e05208  SUBROUT 09.01.05          e09401  SUBROUT 09.01.09
e09402  SUBROUT 09.01.09          e09404  SUBROUT 09.01.09
e09405  SUBROUT 09.01.09          e09407  SUBROUT 09.01.09
e09408  SUBROUT 09.01.09          e12000  SUBROUT 09.01.10
e12001  SUBROUT 09.01.10          e12004  SUBROUT 09.01.10
e12005  SUBROUT 09.01.10          e12202  SUBROUT 09.01.11
ebltm   SUBROUT TR                ebltm3  SUBROUT TR
echkz   SUBROUT 09.01             ecom    SUBROUT TR
ecom3   SUBROUT TR                ecotm   SUBROUT TR
ecotm3  SUBROUT TR                eevmm   SUBROUT TR
eevom   SUBROUT TR                eevom3  SUBROUT TR
elgprm  SUBROUT 04.03.04.02       elstr   SUBROUT 02.01.03
enderr  SUBROUT 09.01             endit   SUBROUT GL
erfucd  SUBROUT GL                erfunm  SUBROUT GL
ermsgh  LOGC-FN 09.01             ero     SUBROUT TR
erox    SUBROUT TR                eroy    SUBROUT TR
eroz    SUBROUT TR                errctl  SUBROUT GL
esc     SUBROUT TR                esc3    SUBROUT TR
esetup  SUBROUT 09.01             etp     SUBROUT TR
etp3    SUBROUT TR                etr     SUBROUT TR
etr3    SUBROUT TR                exedv   SUBROUT 06.01.02
exp34   SUBROUT TR                expppl  SUBROUT 04.02.01.01
expppm  SUBROUT 04.02.02.01       exsvrs  SUBROUT 05.02
faclip  SUBROUT 06.01.02          fail    SUBROUT GL
filrec  SUBROUT 04.01             fitpar  SUBROUT GL


                                E-2

              DICTIONARY OF SUBROUTINES AND FUNCTIONS


fltran  SUBROUT 02.03.03          fpavl   LOGC-FN 04.02
geotxt  SUBROUT 04.02.03          gterrm  SUBROUT 09.01
gtroot  SUBROUT GL                hlfbox  SUBROUT 04.02
hueang  SUBROUT 04.03.02.02       iacans  SUBROUT GL
iacmsg  SUBROUT GL                iareq   LOGC-FN GL
iareql  LOGC-FN GL                iarfnd  INTG-FN GL
ichkz   SUBROUT 09.02             idmat   SUBROUT TR
ifpf    SUBROUT GL                ifphcl  SUBROUT 09.01.01
ifuncs  SUBROUT 09.02             inarea  INTG-FN TR
iniari  SUBROUT GL                initgl  SUBROUT GL
inmsg   SUBROUT GL                inoutl  SUBROUT 04.02.03
intinh  SUBROUT 04.03.01          intsty  LOGC-FN GL
invol   SUBROUT TR                ispths  SUBROUT TR
issab   SUBROUT TR                issdis  SUBROUT TR
issflt  SUBROUT 02.03.03          issgeo  SUBROUT 02.03.03
isspf   SUBROUT 02.03.03          itrim   INTG-FN GL
lbedty  SUBROUT 04.02.05.03       leadnb  INTG-FN GL
linbrk  SUBROUT GL                lintpt  SUBROUT TR
lnplpt  SUBROUT TR                locans  SUBROUT 04.02.04.01
locat2  SUBROUT 04.02.04.01       locatx  SUBROUT 04
locint  SUBROUT 04                locnpm  SUBROUT 06.01.02
locppl  SUBROUT 04                locppm  SUBROUT GL
locrec  SUBROUT 04.02.05          loctri  SUBROUT 04
loctx1  SUBROUT 04.02.03.01       loctx2  SUBROUT 04.02.03.01
loctxt  SUBROUT 04                matmul  SUBROUT TR
mod1    INTG-FN TR                modsep  REAL-FN 04.03.02.02
modtrn  INTG-FN 06.01.02          multws  SUBROUT GL
ncmsg   SUBROUT GL                ndlw    SUBROUT 04.02.01.01
ndmw    SUBROUT 04.02.02.01       newstr  SUBROUT GL
nfunm   SUBROUT GL                ngtxat  SUBROUT 04.02
nmscol  SUBROUT 04.03.04.02       nmsprm  SUBROUT 04.03.04.02
numlab  SUBROUT GL                opco    SUBROUT GL
opcofl  SUBROUT GL                opcomt  SUBROUT GL
opfail  SUBROUT GL                opint   SUBROUT GL
oplin   SUBROUT GL                opmsg   SUBROUT GL
opmsgw  SUBROUT GL                opyn    SUBROUT GL
parcof  SUBROUT TR                parlin  SUBROUT 04.02.05.01
parpt   SUBROUT 04.02.05.01       pass    SUBROUT GL
patavl  LOGC-FN 04.02.05.04       patrec  SUBROUT 04.02.05
perhnd  SUBROUT ER                pervec  SUBROUT TR
pf      SUBROUT GL                picchg  SUBROUT 05.02
picenv  SUBROUT 05.02             pl2ln   SUBROUT TR
pl2pl   SUBROUT TR                plattr  SUBROUT 04.02.01.01
pmattr  SUBROUT 04.02.02.01       prpfnt  SUBROUT 04.02
prpv1   SUBROUT TR                prsint  SUBROUT GL
prsrl   SUBROUT GL                prsuin  SUBROUT GL
pstctl  SUBROUT GL                pt2cof  SUBROUT TR
pt3pl   SUBROUT TR                pthseq  SUBROUT 02.01
ptlnds  SUBROUT TR                ptplds  SUBROUT TR
ptregd  REAL-FN TR                ptspl   SUBROUT TR
ranary  SUBROUT 06.01.02          ranlst  INTG-FN 04.02.01.01
ranmkt  INTG-FN 04.02.02.01       rareq   LOGC-FN GL
red43   SUBROUT TR                retopn  SUBROUT 03.03
rfuncs  SUBROUT 09.01             rlzew   LOGC-FN 04.02.05.03


                                E-3

              DICTIONARY OF SUBROUTINES AND FUNCTIONS


rlzlw   LOGC-FN 04.02.01.02       rlzms   LOGC-FN 04.02.02.02
rn1shf  SUBROUT GL                rnbset  SUBROUT GL
rnd01   REAL-FN GL                rndint  INTG-FN GL
rndrl   REAL-FN GL                rnperm  SUBROUT GL
rnset   SUBROUT GL                satan2  REAL-FN TR
scapar  SUBROUT GL                scherr  SUBROUT 09.01
set2d   SUBROUT GL                setasf  SUBROUT GL
setdif  SUBROUT 03.05             setdlg  SUBROUT GL
seteq   LOGC-FN GL                setfil  SUBROUT 02.03.03
sethue  SUBROUT 04.03.02.02       setis   LOGC-FN GL
setmsg  SUBROUT GL                setpcl  SUBROUT 05.02
setpst  SUBROUT 05.03             setrvs  SUBROUT GL
setstr  SUBROUT GL                setsvr  SUBROUT 05.02
setval  SUBROUT GL                setvs   SUBROUT GL
shedbw  SUBROUT 04.02.05.03       showew  SUBROUT 04.02.05.01
showlw  SUBROUT 04.02.01.01       showmw  SUBROUT 04.02.02.01
shplbw  SUBROUT 04.02.01.02       shpmbw  SUBROUT 04.02.02.02
sigmsg  SUBROUT GL                sigtst  SUBROUT GL
simark  SUBROUT 04.02             sphdis  LOGC-FN 02.03.03
sqgrmk  SUBROUT 04.03.02          srtiar  SUBROUT GL
srtrar  SUBROUT GL                stdcss  SUBROUT GL
strcon  LOGC-FN GL                streq   LOGC-FN 09.01
subfnt  SUBROUT 04.02             surfok  LOGC-FN 05.02
svrok   LOGC-FN 05.02             tcscid  SUBROUT 02.01.03
tcscir  SUBROUT 02.01.03          tranhs  SUBROUT 06.01.02
trnseq  LOGC-FN TR                tsanup  SUBROUT 04.02.04.01
tschup  SUBROUT 04.02.03          tstasc  SUBROUT 04.02
tstcid  SUBROUT 02.01.03          tstcir  SUBROUT 02.01.03
tstcor  SUBROUT 06.02.01          tstels  SUBROUT 02.03.02
tsterr  SUBROUT 09.01             tsthlf  SUBROUT 04.03.04.02
tsthue  INTG-FN 04.03.02.02       tstign  SUBROUT 09.01
tstivf  SUBROUT 04.03.04.02       tstprj  SUBROUT 06.02.01
tstvip  SUBROUT 06.02.02          tstwan  SUBROUT 09.01
tx2dex  SUBROUT 02.03.03          txcomp  SUBROUT 04.02.03.03
txexal  SUBROUT GL                txpcup  SUBROUT 04.02
undcmd  LOGC-FN 04.03.02.02       unmsg   SUBROUT GL
unrep   SUBROUT 04.02             varfnt  SUBROUT 04.02
vec1    SUBROUT TR                vecang  REAL-FN TR
vecl    REAL-FN TR                vecl2   REAL-FN TR
vislab  SUBROUT GL                wcnpc   SUBROUT GL
win6    SUBROUT GL                windup  SUBROUT GL
xfinh   SUBROUT 04                xpopph  SUBROUT GL
ylocel  REAL-FN GL                ypos8   REAL-FN 04.03.04.02
zval    REAL-FN 02.03.03












                                E-4












                            APPENDIX F

                  EXAMPLES OF COMMAND PROCEDURES



     Below are  two  examples  of  a  compile,  link,  and  execute
procedure  for  PVT programs.  The first is for the VAX/VMS system,
the second for UNIX.  These are for illustrative purposes only.

        ----------------    VAX/VMS   ----------------

   Assume the PVT root node is [USER.PVT.V2].  In order to invoke the
following, the user types:

$ @PHF  P01    ! run P01, with PVT-defined error handling
    or                                                               
$ @PHFE P01    ! run P01, with implementor-defined error handling


PHF.COM:
$ ! Procedure to invoke DecPHIGS and access PVT libraries.
$ ! Value of variable 'errlib' is set to cause invocation
$ ! of user error handler
$ errlib :== "[user.pvt.v2]errlib/lib, "
$ psource = p1
$ @phfcom


PHFE.COM
$ ! Procedure to invoke DecPHIGS and access PVT libraries.
$ ! Value of variable 'errlib' is set to prevent invocation
$ ! of system default error handler
$ errlib :== " "
$ psource = p1
$ @phfcom

          
PHFCOM.COM
$ ! Procedure to invoke DecPHIGS and access PVT libraries.
$ ! Value of variable 'errlib' controls whether user error
$ ! handling is invoked.  Name of program is passed down
$ ! in variable 'psource'.
$ set nover
$ define sys$input sys$command


                                F-1

                  EXAMPLES OF COMMAND PROCEDURES


$ locsub = " "    ! this'll be string with names of local sublibs
$ curdir = f$directory()     ! name of current directory
$ dirlen = f$length(curdir)  ! length of current directory name
$ stdloc = f$locate(".V2", curdir) ! get root level
$ rootnam = "V2"
$ if (stdloc .lt. dirlen) then goto rootset
$ write sys$output "Cannot find V2 in current directory."
$ goto alldone
$ rootset:  
$ numlev = (dirlen - stdloc - 4) / 3  ! number of levels of PVT
$ backup = 0
$ !
$ sub_loop:
$ if (backup .ge. numlev) then goto end_sub_loop
$ seekfile = "[" + f$extract(1,backup,"----------") + "]sublib"
$ gotfile  = f$search(seekfile + ".olb")  ! blank if no sublib at this level
$ if (gotfile .nes. "") then $ locsub = locsub + seekfile + "/lib,"
$ backup = backup + 1
$ goto sub_loop
$ !
$ end_sub_loop:
$ set ver
$ fort/warn=all/standard/float=ieee 'psource'
$ link 'psource','locsub' [user.pvt.'rootnam']trans_sublib/lib, -
   [user.pvt.'rootnam']sublib/lib, 'errlib' -
   sys$library:phigs$for_bnd/lib
$ run 'psource'
$ alldone:




























                                F-2

                  EXAMPLES OF COMMAND PROCEDURES



         ----------------    UNIX   ----------------

   Assume the PVT root node is /home/user/pvt/v2.  In order to invoke the
following, the user types:

$ pvt p01   ! run p01, with PVT-defined error handling
    or
$ pvt p01 e ! run P01, with implementor-defined error handling

pvt:
#/usr/bin/csh
              
# This script:
#    Determines the language of the input file (FTN or C)
#    Compiles the source to object code
#    Searches up the directory tree looking for libraries (*.a).
#      Stops searching at a directory called "STD" or root.
#    Links the executable code with all libraries (*.a) found
#      from topdir down.
#    Executes the program.
#
# If any step fails, the script will exit before proceeding.

# Test searching of libraries by invoking with an argument
# of "hi".  See usage at bottom for usage instructions.

#  Set PRE_PHIGS_LIB to point to your Phigs libraries.  This is
#  the first library listed in the link command.
   set PRE_PHIGS_LIB = " "

#  set POST_PHIGS_LIB to your phigs library.  This is listed
#  LAST in the link command.
   set POST_PHIGS_LIB = " -L/usr/phigs-2.0/lib -lphigs77 -lphigs -lxgl -L/usr/openwin/lib -lX11 -lm"

if ( $#argv < 1 ) then
   echo "Found < 1 argument"
   goto usage
endif

if ( $#argv > 2 ) then
   echo "Found > 2 arguments"
   goto usage
endif

if ( $1 == "-v" ) then
    set echocmd = ""
    shift
endif

# USER CONFIGURATION VARIABLES

# Change libext if libraries have different extensions.
set PVTROOT = ' /home/user/pvt/v2'


                                F-3

                  EXAMPLES OF COMMAND PROCEDURES


set libext = 'sublib.a'
set trans_lib = "$PVTROOT/trans-sublib.a "

if ( $#argv < 2) then
   echo "Link to user-defined errlib"
   set global_lib = "$PVTROOT/sublib.a $PVTROOT/errlib.a "
else if ($2 == "e") then
   echo "No link to user-defined errlib"
   set global_lib = "$PVTROOT/sublib.a "
else
   echo "Invalid 2nd argument"
   goto alldone
endif

set libs = ""

if ( -r $1.f ) then         # Fortran source
# to make call to SECNDS compile correctly, add -lV77
    set CC="f77 -ansi -C -u -g " EXT=.f
else if ( -r $1.c ) then    # C source
    set CC=cc  EXT=.c
else if ( $1 != "hi" ) then
    # if ext. not known & not testing, exit.
    echo ${0}:  Could not read $1.f or \
         $1.c\!  Fix and try again.
    goto alldone
endif

if ( $1 != "hi" ) then
    if ( $?echocmd ) echo $CC -c $1$EXT
    $CC -c $1$EXT                   # compile to .o
    if ( $status != 0 ) then        # Bogus compilation?
        echo ${0}:  Fix compilation errors in \
             $1$EXT and try again.
        goto alldone
    endif
endif

if ( $?echocmd ) echo -n ${0}: Searching for library archives...

set curdir = `pwd`
while ( $curdir != "" )
    if ( $curdir:t == "v2" ) break       # just processed v2 dir?
    if ( -e  $curdir/$libext) then       # found some!
        set libs = ($libs `/bin/ls $curdir/$libext`)
    endif
    set curdir = $curdir:h               # leave head (chop tail)
end
if ( $?echocmd ) echo done.

if ( $1 == "hi" || $?echocmd ) then
    echo ${0}:  Libraries found:
    echo $libs
    goto alldone


                                F-4

                  EXAMPLES OF COMMAND PROCEDURES


endif

set exec_suffix = 'phigsx'   # distinguish executables
# link with libraries
if ( $?echocmd ) echo $CC $PRE_PHIGS_LIB $1.o \
                      $libs $trans_lib $global_lib $POST_PHIGS_LIB -o $1
$CC $PRE_PHIGS_LIB $1.o  \
    $libs $trans_lib $global_lib $POST_PHIGS_LIB -o $1.$exec_suffix
if ( $status == 0 ) then        # linked OK
    if ( $?echocmd ) echo ./$1
    ./$1.$exec_suffix           # execute
else
    echo ${0}:  Fix link errors and try again.
    goto alldone
endif

############
usage:

echo Usage:  $0 '[-v] file'
echo Note:  file has no extension, but file.f or file.c exists.
echo '-v' option will echo commands before they are executed.
goto alldone

############

alldone:
exit




























                                F-5












                            APPENDIX G

                     BUILDING THE PVT IN UNIX



     The following steps must be followed in order to  install  the
test  suite  on  a  UNIX  system.   Note  that  Makefiles have been
provided  that  will  run  on  most   systems   but   may   require
modifications for your system.

     No executable is shipped in  the  distribution;  all  programs
must  be regenerated.  When building the f2c libraries, please read
the  section  describing  the  use  of  #define  USE_STRLEN.   This
definition is crucial for some systems.

Step [1]
        Build the f2c library - libf2c.a

      (a)
        cd pvt/F2C

      (b)
        Edit the makefile

       * Check the description of onexit and how it  applies
         to your system.

       * Select the C compile  line  that  you  want  (i.e.
         whether you want prototyping).

      (c)
        Review the README file and modify items as  required
        by your system.

      (d)
        Type make

  The result is a condensed version of the actual f2c utility.  The
libraries libF77 and libI77 have been combined into one library, and
the actual translator f2c is not distributed.  All code has been
translated and only the subroutine library is required.  The code
itself has not been altered in any way, and sites that have f2c
installed as a system library may use their own version.



                                G-1

                     BUILDING THE PVT IN UNIX


Step [2] Build the C layer code library - layer.a

      (a)
        cd pvt/LAYER

      (b)
        Edit the Makefile

       * Change PVTHOME (currently /home/kevin/pvt)  to  the
         directory where the PVT test suite is installed.

       * Change XINCDIR (currently /usr/openwin/include ) to
         the  directory  where  X11  is  installed.  This is
         required for include files if  your  implementation
         uses X11. If you do not require this variable, just
         leave it blank.

       * Change PHIGSINCDIR (currently $(PHIGSHOME)/include/phigs)
         to the directory where PHIGS is installed. This is  
         required  for  include files.

       * Select the C compile line  that  pertains  to  your
         system (i.e. whether you want prototyping)

      (c)
        Type make


Step [3] Build the subroutine library - libcpvt.a

  The following steps build use the single directory, rather than
hierarchically (see section 3.1.2).

      (a)
        cd pvt/V2LIB

      (b)
        Edit the Makefile
                                                            
       * Change PVTHOME (currently /home/kevin/pvt)  to  the
         directory where the PVT test suite is installed.

       * Change XINCDIR (currently /usr/openwin/include ) to
         the  directory  where  X11  is  installed.  This is
         required for include files if  your  implementation
         uses X11. If you do not require this variable, just
         leave it blank.

       * Change PHIGSINCDIR (currently $(PHIGSHOME)/include/phigs)  
         to the directory where PHIGS is installed. This is 
         required  for  include files.

       * Select the C compile line  that  pertains  to  your
         system (i.e. whether you want prototyping)


                                G-2

                     BUILDING THE PVT IN UNIX


      (c)
        Edit INITGL.c:

       * Change the filename character variable on line  180
         to   the  directory  where  you  will  install  the
         configuration file using INITPH.
         Currently:
            s_copy(filenm, "INITPH$DAT", 60L, 10L);
         Change to:
            s_copy(filenm, "<your directory>/pvt/INITPH$DAT", 60L, <NN>L);
         Change the <NN> to  the  length  of  the  character
         string, (up to a max of 60)


      (d)
        Edit MULTWS.c:

       * Change the filename character variable on line  206
         to   the  directory  where  you  will  install  the
         configuration file using INITPH.
         Currently:
           s_copy(filenm, "INITPH$DAT", 60L, 10L);
         Change to:
            s_copy(filenm, "<your directory>/pvt/INITPH$DAT", 60L, <NN>L);
         Change the <NN> to  the  length  of  the  character
         string, (up to a max of 60)

       * Refer  to  the  discussion   on   MULTWS   in   the
         customizations  section  (section 3.2.5) to determine
         if further changes are required (i.e. do you  need
         to generate a special workstation type).

      (e)
        Edit XPOPPH.c:
                                                            
       * Refer  to  the  discussion   on   XPOPPH   in   the
         customizations  section  (section 3.2.2) to determine
         if any changes are required (i.e. do you  need  to
         generate a special workstation type).

      (f)
        Type make

Step [4] Build initph and oprcmt

      (a)
        cd pvt

      (b)                
        Edit the Makefile

       * Change PVTHOME (currently /home/kevin/pvt)  to  the
         directory where the PVT test suite is installed.



                                G-3

                     BUILDING THE PVT IN UNIX


       * Change XINCDIR (currently /usr/openwin/include ) to
         the  directory  where  X11  is  installed.  This is
         required for include files if  your  implementation
         uses X11. If you do not require this variable, just
         leave it blank.

       * Make sure PHIGSHOME is set.

       * Check the system variable CPHIGS_LIB.  It  must  be
         set   to  the  libraries  required  by  your  PHIGS
         implementation,  including  the   PHIGS   libraries
         themselves  (i.e.  does  it use any X libraries?).
         Set  this  variable  accordingly  to   locate   the
         libraries you will need.

      (c)
        Edit pvt/C/std/initph.c:

       * Change the filename character variable on line  361
         to  the  directory where you would like to have the
         configuration file installed.
         Currently:
           s_copy(filenm, "INITPH$DAT", 60L, 10L);
         Change to:
           s_copy(filenm, "<your directory>/pvt/INITPH$DAT", 60L, <NN>L);
         Change the <NN> to  the  length  of  the  character
         string, (up to a max of 60)

   [d]  Change the filename character variable on  line  363
        to  the  directory  where you would like to have the
        HUMAN-READABLE configuration file installed.
        Currently:
         s_copy(filenm, "INITPH$PRT", 60L, 10L);
        Change to:
         s_copy(filenm, "<your directory>/pvt/INITPH$PRT", 60L, <NN>L);
        Change the <NN>  to  the  length  of  the  character
        string, (up to a max of 60)

      (e)
        Type make cadmin

Step [5] run pvt/C/std/initph to  create  the  configuration
         file, as described in section 4.2.


Step [6] Build the PVT test suite.

   [a]  Edit pvt/Makefile:

   * Select the C  compile  line  that  pertains  to  your
       system (i.e. whether you want prototyping)

In the PVT root type one of:



                                G-4

                     BUILDING THE PVT IN UNIX


 make all      [Build the C test suite]

 make cadmin   [Build the C version of initph]


Step [7] Run the test suite.

     Each of the programs that exist in the sub-tree must be
executed  to  perform  a  complete  validation.  You  should
develop  procedures  on  your  system  to  accomplish   this
efficiently.  When  the actual validation is performed, each
program must compile, link and execute without error.

In the PVT root type one of:

 make -f Makefile.run run     [Run both active and passive C
                              tests]

 make -f Makefile.run runactive
                              [Run active C tests]

 make -f Makefile.run runpassive
                              [Run passive C tests]

































                                G-5












                            APPENDIX H

                         SOFTWARE METRICS



     The size of the PVT system may be measured  in  several  ways.
The  following  table  presents  some size metrics for version 2.1.
The figures for lines of code apply only to  the  Fortran  version,
since almost all the C code was generated automatically.

   number of modules                         :     86
   number of test programs                   :    479
   number of lines in test programs          : 81,861
   number of subroutine libraries            :     49
   number of subroutines/functions           :    367
   number of lines in subroutines/functions  : 29,098
   number of lines in system utilities       :    892
   number of lines in module documentation   : 83,177
   number of lines in system documentation   :  6,760
   number of SRs (semantic requirements)     :  1,440
   number of TCs (test cases)                :  2,915
   staff-months of effort                    :    115
     (design, code, documentation)























                                H-1












                            APPENDIX I

                     FUNCTION CROSS-REFERENCE




#F 001 <open phigs>:
01/SR01 02.01.01/SR08 02.02.03/SR05 03.01/SR04 03.02/SR01 
05.01.01/SR01 05.01.01/SR02 09.01.01.01/SR01 09.01.01.02/SR01 
11.02/SR02 11.02/SR09 
 
#F 002 <close phigs>:
01/SR02 09.01.01.01/SR04 09.01.01.02/SR04 11.02/SR02 
 
#F 003 <open workstation>:
04.02.01.02/SR24 04.02.01.02/SR25 04.02.02.02/SR24 
04.02.02.02/SR25 04.02.03.02/SR24 04.02.03.02/SR25 
04.02.04.02/SR09 04.02.05.02/SR25 04.02.05.02/SR26 
04.02.05.03/SR24 04.02.05.03/SR25 04.02.05.04/SR16 
04.02.05.04/SR17 04.03.02.02/SR13 04.03.02.02/SR14 
04.03.02.02/SR20 04.03.04.02/SR03 04.03.04.02/SR07 05.01.01/SR06 
05.01.01/SR08 05.01.01/SR11 05.01.02/SR06 05.02/SR08 05.02/SR09 
05.03/SR11 06.02.02/SR09 06.02.02/SR10 06.02.02/SR11 
06.02.02/SR19 06.03/SR05 09.01.01.01/SR02 09.01.01.02/SR02 
09.01.02.01/SR01 09.01.02.01/SR02 09.01.02.01/SR03 
09.01.02.01/SR05 09.01.02.01/SR12 09.01.02.02/SR01 
09.01.02.02/SR02 09.01.02.02/SR03 09.01.02.02/SR05 
09.01.02.02/SR12 11.02/SR02 
 
#F 004 <close workstation>:
05.01.01/SR12 05.03/SR12 09.01.01.01/SR03 09.01.01.02/SR03 
09.01.02.01/SR04 09.01.02.02/SR04 11.02/SR02 
 
#F 005 <redraw all structures>:
05.02/SR16 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR09 09.01.02.02/SR04 09.01.02.02/SR09 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 006 <update workstation>:
05.02/SR17 05.02/SR18 09.01.01.01/SR03 09.01.01.02/SR03 
09.01.02.01/SR04 09.01.02.01/SR09 09.01.02.02/SR04 
09.01.02.02/SR09 09.01.10.01/SR01 09.01.10.02/SR01 
09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 


                                I-1

                     FUNCTION CROSS-REFERENCE


 
#F 007 <set display update state>:
05.02/SR01 05.02/SR02 05.02/SR03 05.02/SR08 05.02/SR22 05.02/SR23 
05.02/SR24 05.02/SR25 05.02/SR26 05.02/SR27 05.02/SR28 05.02/SR29 
05.02/SR31 05.02/SR32 09.01.01.01/SR03 09.01.01.02/SR03 
09.01.02.01/SR04 09.01.02.01/SR09 09.01.02.02/SR04 
09.01.02.02/SR09 09.01.10.01/SR01 09.01.10.02/SR01 
09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 008 <message>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.02/SR04 11.02/SR02 
 
#F 009 <polyline 3>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR12 04.01.01/SR01 
04.01.01/SR07 04.01.03/SR09 04.01.03/SR11 04.03.04.01/SR15 
05.02/SR19 05.02/SR20 05.02/SR21 06.01.02/SR17 06.01.02/SR57 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 010 <polyline>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR12 04.01.01/SR04 
04.01.01/SR07 04.01.03/SR09 04.01.03/SR10 04.03.04.01/SR15 
05.02/SR19 05.02/SR20 05.02/SR21 06.01.02/SR17 06.01.02/SR57 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 011 <polymarker 3>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR11 04.01.02/SR01 
04.01.02/SR07 04.03.04.01/SR15 05.02/SR19 05.02/SR20 05.02/SR21 
06.01.02/SR17 06.01.02/SR57 06.01.02/SR59 09.01.01.01/SR05 
09.01.01.02/SR05 09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 012 <polymarker>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR11 04.01/SR01 
04.01.02/SR04 04.01.02/SR07 04.03.04.01/SR15 05.02/SR19 
05.02/SR20 05.02/SR21 06.01.02/SR17 06.01.02/SR57 06.01.02/SR59 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 013 <text 3>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR15 04.01.03/SR01 
04.02.03.01/SR01 04.02.03.01/SR02 04.03.04.01/SR15 05.02/SR19 
05.02/SR20 05.02/SR21 06.01.02/SR17 06.01.02/SR57 06.01.02/SR60 
09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 014 <text>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR15 04.01.03/SR04 
04.02.03.01/SR01 04.02.03.01/SR02 04.03.04.01/SR15 05.02/SR19 
05.02/SR20 05.02/SR21 06.01.02/SR17 06.01.02/SR57 06.01.02/SR60 
09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 015 <annotation text relative 3>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR16 04.01.04/SR01 


                                I-2

                     FUNCTION CROSS-REFERENCE


04.01.04/SR07 04.01.04/SR09 04.02.04.01/SR01 04.02.04.01/SR02 
04.03.04.01/SR15 05.02/SR19 05.02/SR20 05.02/SR21 06.01.02/SR17 
06.01.02/SR57 06.01.02/SR61 06.01.02/SR62 09.01.01.01/SR05 
09.01.01.02/SR05 11.02/SR02 
 
#F 016 <annotation text relative>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR16 04.01.04/SR04 
04.01.04/SR07 04.01.04/SR08 04.01.04/SR09 04.02.04.01/SR01 
04.02.04.01/SR02 04.03.04.01/SR15 05.02/SR19 05.02/SR20 
05.02/SR21 06.01.02/SR17 06.01.02/SR57 06.01.02/SR61 
06.01.02/SR62 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 017 <fill area 3>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR13 04.01.05/SR01 
04.01.05/SR07 04.01.05/SR08 04.03.04.01/SR15 05.02/SR19 
05.02/SR20 05.02/SR21 06.01.02/SR17 06.01.02/SR57 06.01.02/SR63 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 018 <fill area>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR13 04.01.05/SR04 
04.01.05/SR07 04.01.05/SR08 04.03.04.01/SR15 05.02/SR19 
05.02/SR20 05.02/SR21 06.01.02/SR17 06.01.02/SR57 06.01.02/SR63 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 019 <fill area set 3>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR14 04.01.06/SR01 
04.01.06/SR07 04.01.06/SR08 04.03.04.01/SR15 05.02/SR19 
05.02/SR20 05.02/SR21 06.01.02/SR17 06.01.02/SR57 06.01.02/SR63 
06.01.02/SR64 09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR04 
09.01.10.02/SR04 11.02/SR02 
 
#F 020 <fill area set>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR14 04.01.06/SR04 
04.01.06/SR07 04.01.06/SR08 04.03.04.01/SR15 05.02/SR19 
05.02/SR20 05.02/SR21 06.01.02/SR17 06.01.02/SR57 06.01.02/SR63 
06.01.02/SR64 09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR04 
09.01.10.02/SR04 11.02/SR02 
 
#F 021 <cell array 3>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR17 04.01.07/SR01 
04.01.07/SR04 04.01.07/SR05 04.01.07/SR11 04.01.07/SR12 
04.01.07/SR13 04.01.07/SR14 04.03.04.01/SR15 05.02/SR19 
05.02/SR20 05.02/SR21 06.01.02/SR17 06.01.02/SR57 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.03.01/SR16 
09.01.03.02/SR16 11.02/SR02 
 
#F 022 <cell array>:
02.03.03/SR06 02.03.03/SR10 02.03.03/SR17 04.01.07/SR06 
04.01.07/SR09 04.01.07/SR10 04.01.07/SR11 04.01.07/SR12 
04.01.07/SR13 04.01.07/SR14 04.03.04.01/SR15 05.02/SR19 
05.02/SR20 05.02/SR21 06.01.02/SR17 06.01.02/SR57 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.03.01/SR16 


                                I-3

                     FUNCTION CROSS-REFERENCE


09.01.03.02/SR16 11.02/SR02 
 
#F 023 <generalized drawing primitive 3>:
02.03.03/SR06 02.03.03/SR10 04.01.08/SR01 04.03.04.01/SR15 
05.02/SR19 05.02/SR20 05.02/SR21 06.01.02/SR17 06.01.02/SR57 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 024 <generalized drawing primitive>:
02.03.03/SR06 02.03.03/SR10 04.01.08/SR06 04.03.04.01/SR15 
05.02/SR19 05.02/SR20 05.02/SR21 06.01.02/SR17 06.01.02/SR57 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 025 <set polyline index>:
04.02.01.02/SR03 04.02.01.02/SR04 04.02.01.02/SR05 
04.02.01.02/SR06 04.02.01.02/SR07 04.02.01.02/SR35 
04.02.01.02/SR43 04.02.01.02/SR44 04.02.01.02/SR45 
04.02.01.02/SR47 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.03.01/SR01 
09.01.03.02/SR01 11.02/SR02 
 
#F 026 <set polymarker index>:
04.02.02.02/SR03 04.02.02.02/SR04 04.02.02.02/SR05 
04.02.02.02/SR06 04.02.02.02/SR07 04.02.02.02/SR35 
04.02.02.02/SR43 04.02.02.02/SR44 04.02.02.02/SR45 
04.02.02.02/SR46 04.02.02.02/SR48 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 09.01.03.01/SR01 
09.01.03.02/SR01 11.02/SR02 
 
#F 027 <set text index>:
04.02.03.02/SR03 04.02.03.02/SR04 04.02.03.02/SR05 
04.02.03.02/SR06 04.02.03.02/SR07 04.02.03.02/SR38 
04.02.03.02/SR39 04.02.03.02/SR57 04.02.03.02/SR61 
04.02.03.02/SR64 04.02.04.02/SR01 04.02.04.02/SR02 
04.02.04.02/SR03 04.02.04.02/SR04 04.02.04.02/SR05 
04.02.04.02/SR11 04.02.04.02/SR12 04.02.04.02/SR24 
04.02.04.02/SR27 04.02.04.02/SR29 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 09.01.03.01/SR01 
09.01.03.02/SR01 11.02/SR02 
 
#F 028 <set interior index>:
04.02.05.02/SR03 04.02.05.02/SR04 04.02.05.02/SR05 
04.02.05.02/SR06 04.02.05.02/SR07 04.02.05.02/SR08 
04.02.05.02/SR35 04.02.05.02/SR39 04.02.05.02/SR51 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 
09.01.03.01/SR01 09.01.03.02/SR01 11.02/SR02 
 
#F 029 <set edge index>:
04.02.05.03/SR03 04.02.05.03/SR04 04.02.05.03/SR05 
04.02.05.03/SR06 04.02.05.03/SR07 04.02.05.03/SR30 
04.02.05.03/SR38 04.02.05.03/SR46 04.02.05.03/SR47 
04.02.05.03/SR48 04.02.05.03/SR50 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 09.01.03.01/SR01 


                                I-4

                     FUNCTION CROSS-REFERENCE


09.01.03.02/SR01 11.02/SR02 
 
#F 030 <set linetype>:
04.02.01.01/SR03 04.02.01.01/SR04 04.02.01.01/SR05 
04.02.01.01/SR06 04.02.01.01/SR07 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 031 <set linewidth scale factor>:
04.02.01.01/SR03 04.02.01.01/SR13 04.02.01.01/SR14 
04.02.01.01/SR15 04.02.01.01/SR16 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 032 <set polyline colour index>:
04.02.01.01/SR03 04.02.01.01/SR19 04.02.01.01/SR20 
04.02.01.01/SR21 04.02.01.01/SR22 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 09.01.03.01/SR12 
09.01.03.02/SR12 11.02/SR02 
 
#F 033 <set marker type>:
04.02.02.01/SR03 04.02.02.01/SR04 04.02.02.01/SR05 
04.02.02.01/SR06 04.02.02.01/SR07 04.02.02.01/SR17 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 
11.02/SR02 
 
#F 034 <set marker size scale factor>:
04.02.02.01/SR03 04.02.02.01/SR13 04.02.02.01/SR14 
04.02.02.01/SR15 04.02.02.01/SR16 04.02.02.01/SR17 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 
11.02/SR02 
 
#F 035 <set polymarker colour index>:
04.02.02.01/SR03 04.02.02.01/SR20 04.02.02.01/SR21 
04.02.02.01/SR22 04.02.02.01/SR23 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 09.01.03.01/SR12 
09.01.03.02/SR12 11.02/SR02 
 
#F 036 <set text font>:
04.02.03.01/SR11 04.02.03.01/SR12 04.02.03.01/SR13 
04.02.03.01/SR21 04.02.03.01/SR22 04.02.04.01/SR05 
04.02.04.01/SR06 04.02.04.01/SR14 04.02.04.01/SR15 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 
11.02/SR02 
 
#F 037 <set text precision>:
04.02.03.01/SR11 04.02.03.01/SR25 04.02.03.01/SR26 
04.02.03.01/SR27 04.02.03.01/SR28 04.02.03.01/SR29 
04.02.03.01/SR30 04.02.03.01/SR31 04.02.04.01/SR05 
04.02.04.01/SR18 04.02.04.01/SR19 04.02.04.01/SR20 
04.02.04.01/SR21 04.02.04.01/SR22 04.02.04.01/SR23 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 038 <set character expansion factor>:


                                I-5

                     FUNCTION CROSS-REFERENCE


04.02.03.01/SR11 04.02.03.01/SR34 04.02.03.01/SR35 
04.02.03.01/SR37 04.02.04.01/SR05 04.02.04.01/SR26 
04.02.04.01/SR29 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 039 <set character spacing>:
04.02.03.01/SR11 04.02.03.01/SR40 04.02.03.01/SR41 
04.02.03.01/SR43 04.02.04.01/SR05 04.02.04.01/SR32 
04.02.04.01/SR34 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 040 <set text colour index>:
04.02.03.01/SR11 04.02.03.01/SR46 04.02.03.01/SR47 
04.02.03.01/SR48 04.02.03.01/SR49 04.02.04.01/SR05 
04.02.04.01/SR37 04.02.04.01/SR38 04.02.04.01/SR39 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 
09.01.03.01/SR12 09.01.03.02/SR12 11.02/SR02 
 
#F 041 <set character height>:
04.02.03.01/SR03 04.02.03.01/SR11 04.02.03.01/SR52 
04.02.03.01/SR58 04.02.03.01/SR61 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 042 <set character up vector>:
04.02.03.01/SR11 04.02.03.01/SR79 04.02.03.01/SR80 
04.02.03.01/SR81 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 043 <set text path>:
04.02.03.01/SR11 04.02.03.01/SR64 04.02.03.01/SR65 
04.02.03.01/SR66 04.02.03.01/SR67 04.02.03.01/SR68 
04.02.03.01/SR69 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR01 
09.01.10.02/SR01 09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 044 <set text alignment>:
04.02.03.01/SR11 04.02.03.01/SR72 04.02.03.01/SR73 
04.02.03.01/SR74 04.02.03.01/SR75 04.02.03.01/SR76 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 045 <set annotation text character height>:
04.02.04.01/SR05 04.02.04.01/SR42 04.02.04.01/SR48 
04.02.04.01/SR51 04.02.04.01/SR52 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 046 <set annotation text character up vector>:
04.02.04.01/SR05 04.02.04.01/SR70 04.02.04.01/SR71 
04.02.04.01/SR72 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 047 <set annotation text path>:
04.02.04.01/SR05 04.02.04.01/SR55 04.02.04.01/SR56 


                                I-6

                     FUNCTION CROSS-REFERENCE


04.02.04.01/SR57 04.02.04.01/SR58 04.02.04.01/SR59 
04.02.04.01/SR60 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR01 
09.01.10.02/SR01 09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 048 <set annotation text alignment>:
04.02.04.01/SR05 04.02.04.01/SR63 04.02.04.01/SR64 
04.02.04.01/SR65 04.02.04.01/SR66 04.02.04.01/SR67 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 049 <set annotation style>:
04.02.04.01/SR05 04.02.04.01/SR75 04.02.04.01/SR76 
04.02.04.01/SR78 04.02.04.01/SR79 04.02.04.01/SR80 
04.02.04.01/SR81 04.02.04.01/SR82 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 050 <set interior style>:
04.02.05.01/SR03 04.02.05.01/SR04 04.02.05.01/SR05 
04.02.05.01/SR06 04.02.05.01/SR07 04.02.05.01/SR08 
04.02.05.01/SR09 04.02.05.01/SR10 04.02.05.01/SR12 
04.02.05.01/SR13 04.02.05.01/SR14 04.02.05.01/SR15 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 051 <set interior style index>:
04.02.05.01/SR03 04.02.05.01/SR04 04.02.05.01/SR14 
04.02.05.01/SR15 04.02.05.01/SR18 04.02.05.01/SR19 
04.02.05.01/SR20 04.02.05.01/SR21 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 052 <set interior colour index>:
04.02.05.01/SR03 04.02.05.01/SR04 04.02.05.01/SR10 
04.02.05.01/SR13 04.02.05.01/SR14 04.02.05.01/SR26 
04.02.05.01/SR27 04.02.05.01/SR28 04.02.05.01/SR29 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 
09.01.03.01/SR12 09.01.03.02/SR12 11.02/SR02 
 
#F 053 <set edge flag>:
04.02.05.01/SR04 04.02.05.01/SR32 04.02.05.01/SR33 
04.02.05.01/SR34 04.02.05.01/SR35 04.02.05.01/SR36 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 054 <set edgetype>:
04.02.05.01/SR04 04.02.05.01/SR40 04.02.05.01/SR41 
04.02.05.01/SR42 04.02.05.01/SR43 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 055 <set edgewidth scale factor>:
04.02.05.01/SR04 04.02.05.01/SR49 04.02.05.01/SR50 


                                I-7

                     FUNCTION CROSS-REFERENCE


04.02.05.01/SR51 04.02.05.01/SR52 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 056 <set edge colour index>:
04.02.05.01/SR04 04.02.05.01/SR55 04.02.05.01/SR56 
04.02.05.01/SR57 04.02.05.01/SR58 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 09.01.03.01/SR12 
09.01.03.02/SR12 11.02/SR02 
 
#F 057 <set pattern size>:
04.02.05.01/SR03 04.02.05.01/SR04 04.02.05.01/SR61 
04.02.05.01/SR62 04.02.05.01/SR63 04.02.05.01/SR71 
04.02.05.01/SR73 04.02.05.01/SR74 04.02.05.01/SR76 
04.02.05.01/SR77 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 058 <set pattern reference point and vectors>:
04.02.05.01/SR03 04.02.05.01/SR04 04.02.05.01/SR66 
04.02.05.01/SR68 04.02.05.01/SR70 04.02.05.01/SR71 
04.02.05.01/SR72 04.02.05.01/SR73 04.02.05.01/SR74 
04.02.05.01/SR76 04.02.05.01/SR77 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 059 <set pattern reference point>:
04.02.05.01/SR03 04.02.05.01/SR04 04.02.05.01/SR67 
04.02.05.01/SR69 04.02.05.01/SR71 04.02.05.01/SR72 
04.02.05.01/SR73 04.02.05.01/SR74 04.02.05.01/SR76 
04.02.05.01/SR77 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 060 <add names to set>:
02.03.03/SR06 02.03.03/SR18 02.03.03/SR19 02.03.03/SR20 
04.03.04.01/SR01 04.03.04.01/SR09 04.03.04.01/SR10 
04.03.04.01/SR12 04.03.04.01/SR15 04.03.04.01/SR16 
04.03.04.02/SR04 04.03.04.02/SR08 04.03.04.02/SR09 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 
09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 061 <remove names from set>:
02.03.03/SR06 02.03.03/SR18 02.03.03/SR19 02.03.03/SR20 
04.03.04.01/SR04 04.03.04.01/SR09 04.03.04.01/SR10 
04.03.04.01/SR13 04.03.04.01/SR15 04.03.04.01/SR16 
04.03.04.02/SR04 04.03.04.02/SR08 04.03.04.02/SR09 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 
09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 062 <set individual asf>:
04.02.01.02/SR35 04.02.01.02/SR43 04.02.01.02/SR44 
04.02.01.02/SR45 04.02.01.02/SR47 04.02.02.02/SR35 
04.02.02.02/SR43 04.02.02.02/SR44 04.02.02.02/SR45 
04.02.02.02/SR46 04.02.02.02/SR48 04.02.03.02/SR38 
04.02.03.02/SR39 04.02.03.02/SR57 04.02.03.02/SR61 
04.02.03.02/SR64 04.02.04.02/SR11 04.02.04.02/SR12 
04.02.04.02/SR24 04.02.04.02/SR27 04.02.04.02/SR29 


                                I-8

                     FUNCTION CROSS-REFERENCE


04.02.05.02/SR35 04.02.05.02/SR39 04.02.05.02/SR51 
04.02.05.03/SR30 04.02.05.03/SR38 04.02.05.03/SR46 
04.02.05.03/SR47 04.02.05.03/SR48 04.02.05.03/SR50 04.03.01/SR01 
04.03.01/SR04 04.03.01/SR05 04.03.01/SR06 04.03.01/SR07 
04.03.01/SR08 04.03.01/SR09 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR01 
09.01.10.02/SR01 09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 063 <set polyline representation>:
04.02.01.02/SR10 04.02.01.02/SR11 04.02.01.02/SR18 
04.02.01.02/SR33 04.02.01.02/SR34 04.02.01.02/SR35 
04.02.01.02/SR41 04.02.01.02/SR42 04.02.01.02/SR43 
04.02.01.02/SR44 04.02.01.02/SR45 04.02.01.02/SR46 
04.02.01.02/SR47 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR09 09.01.02.02/SR04 09.01.02.02/SR09 
09.01.03.01/SR01 09.01.03.01/SR03 09.01.03.01/SR04 
09.01.03.01/SR12 09.01.03.02/SR01 09.01.03.02/SR03 
09.01.03.02/SR04 09.01.03.02/SR12 11.02/SR02 
 
#F 064 <set polymarker representation>:
04.02.02.02/SR10 04.02.02.02/SR11 04.02.02.02/SR18 
04.02.02.02/SR33 04.02.02.02/SR34 04.02.02.02/SR35 
04.02.02.02/SR41 04.02.02.02/SR42 04.02.02.02/SR43 
04.02.02.02/SR44 04.02.02.02/SR45 04.02.02.02/SR46 
04.02.02.02/SR47 04.02.02.02/SR48 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR09 09.01.02.02/SR04 09.01.02.02/SR09 
09.01.03.01/SR01 09.01.03.01/SR03 09.01.03.01/SR05 
09.01.03.01/SR12 09.01.03.02/SR01 09.01.03.02/SR03 
09.01.03.02/SR05 09.01.03.02/SR12 11.02/SR02 
 
#F 065 <set text representation>:
04.02.03.02/SR10 04.02.03.02/SR11 04.02.03.02/SR18 
04.02.03.02/SR32 04.02.03.02/SR33 04.02.03.02/SR34 
04.02.03.02/SR35 04.02.03.02/SR36 04.02.03.02/SR38 
04.02.03.02/SR39 04.02.03.02/SR40 04.02.03.02/SR47 
04.02.03.02/SR53 04.02.03.02/SR55 04.02.03.02/SR56 
04.02.03.02/SR57 04.02.03.02/SR60 04.02.03.02/SR61 
04.02.03.02/SR63 04.02.03.02/SR64 04.02.04.02/SR10 
04.02.04.02/SR11 04.02.04.02/SR12 04.02.04.02/SR13 
04.02.04.02/SR20 04.02.04.02/SR24 04.02.04.02/SR27 
04.02.04.02/SR29 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR09 09.01.02.02/SR04 09.01.02.02/SR09 
09.01.03.01/SR01 09.01.03.01/SR03 09.01.03.01/SR06 
09.01.03.01/SR12 09.01.03.02/SR01 09.01.03.02/SR03 
09.01.03.02/SR06 09.01.03.02/SR12 09.01.10.01/SR01 
09.01.10.02/SR01 09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 066 <set interior representation>:
04.02.05.02/SR11 04.02.05.02/SR12 04.02.05.02/SR19 
04.02.05.02/SR31 04.02.05.02/SR33 04.02.05.02/SR35 
04.02.05.02/SR37 04.02.05.02/SR38 04.02.05.02/SR39 


                                I-9

                     FUNCTION CROSS-REFERENCE


04.02.05.02/SR40 04.02.05.02/SR41 04.02.05.02/SR50 
04.02.05.02/SR51 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR09 09.01.02.02/SR04 09.01.02.02/SR09 
09.01.03.01/SR01 09.01.03.01/SR03 09.01.03.01/SR08 
09.01.03.01/SR11 09.01.03.01/SR12 09.01.03.02/SR01 
09.01.03.02/SR03 09.01.03.02/SR08 09.01.03.02/SR11 
09.01.03.02/SR12 09.01.10.01/SR01 09.01.10.02/SR01 
09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 067 <set edge representation>:
04.02.05.03/SR10 04.02.05.03/SR11 04.02.05.03/SR18 
04.02.05.03/SR29 04.02.05.03/SR30 04.02.05.03/SR36 
04.02.05.03/SR37 04.02.05.03/SR38 04.02.05.03/SR44 
04.02.05.03/SR45 04.02.05.03/SR46 04.02.05.03/SR47 
04.02.05.03/SR48 04.02.05.03/SR49 04.02.05.03/SR50 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR03 09.01.01.02/SR03 
09.01.02.01/SR04 09.01.02.01/SR09 09.01.02.02/SR04 
09.01.02.02/SR09 09.01.03.01/SR01 09.01.03.01/SR03 
09.01.03.01/SR07 09.01.03.01/SR12 09.01.03.02/SR01 
09.01.03.02/SR03 09.01.03.02/SR07 09.01.03.02/SR12 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 068 <set pattern representation>:
04.02.05.01/SR75 04.02.05.01/SR76 04.02.05.01/SR77 
04.02.05.04/SR01 04.02.05.04/SR02 04.02.05.04/SR10 
04.02.05.04/SR19 04.02.05.04/SR20 04.02.05.04/SR21 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR03 09.01.01.02/SR03 
09.01.02.01/SR04 09.01.02.01/SR09 09.01.02.02/SR04 
09.01.02.02/SR09 09.01.03.01/SR03 09.01.03.01/SR11 
09.01.03.01/SR12 09.01.03.01/SR15 09.01.03.02/SR03 
09.01.03.02/SR11 09.01.03.02/SR12 09.01.03.02/SR15 
09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 069 <set colour representation>:
04.03.02.01/SR01 04.03.02.01/SR02 04.03.02.01/SR08 
04.03.02.02/SR03 04.03.02.02/SR05 04.03.02.02/SR06 
04.03.02.02/SR21 04.03.02.02/SR26 04.03.02.02/SR27 
04.03.02.02/SR30 04.03.02.02/SR31 04.03.02.02/SR33 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR03 09.01.01.02/SR03 
09.01.02.01/SR04 09.01.02.01/SR09 09.01.02.02/SR04 
09.01.02.02/SR09 09.01.03.01/SR03 09.01.03.01/SR12 
09.01.03.01/SR17 09.01.03.02/SR03 09.01.03.02/SR12 
09.01.03.02/SR17 11.02/SR02 
 
#F 070 <set highlighting filter>:
04.03.04.02/SR01 04.03.04.02/SR04 04.03.04.02/SR10 
04.03.04.02/SR11 04.03.04.02/SR12 04.03.04.02/SR13 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR03 09.01.01.02/SR03 
09.01.02.01/SR04 09.01.02.01/SR09 09.01.02.02/SR04 
09.01.02.02/SR09 09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 071 <set invisibility filter>:


                               I-10

                     FUNCTION CROSS-REFERENCE


04.03.04.02/SR05 04.03.04.02/SR08 04.03.04.02/SR09 
04.03.04.02/SR10 04.03.04.02/SR11 04.03.04.02/SR12 
04.03.04.02/SR13 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR09 09.01.02.02/SR04 09.01.02.02/SR09 
09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 072 <set colour model>:
04.03.02.01/SR05 04.03.02.01/SR09 04.03.02.02/SR17 
04.03.02.02/SR21 04.03.02.02/SR32 09.01.01.01/SR03 
09.01.01.02/SR03 09.01.02.01/SR04 09.01.02.01/SR09 
09.01.02.02/SR04 09.01.02.02/SR09 09.01.03.01/SR09 
09.01.03.02/SR09 09.01.10.01/SR01 09.01.10.02/SR01 
09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 073 <set hlhsr identifier>:
04.03.03/SR01 05.02/SR19 05.02/SR20 05.02/SR21 09.01.01.01/SR05 
09.01.01.02/SR05 11.02/SR02 
 
#F 074 <set hlhsr mode>:
04.03.03/SR04 04.03.03/SR06 04.03.03/SR07 04.03.03/SR11 
05.02/SR19 05.02/SR20 05.02/SR21 09.01.01.01/SR03 
09.01.01.02/SR03 09.01.02.01/SR04 09.01.02.01/SR09 
09.01.02.02/SR04 09.01.02.02/SR09 09.01.03.01/SR10 
09.01.03.02/SR10 11.02/SR02 
 
#F 075 <set local transformation 3>:
02.03.03/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.01.02/SR01 
06.01.02/SR07 06.01.02/SR08 06.01.02/SR16 06.01.02/SR17 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR01 
09.01.10.02/SR01 09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 076 <set local transformation>:
02.03.03/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.01.02/SR04 
06.01.02/SR07 06.01.02/SR16 06.01.02/SR17 06.01.02/SR18 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.10.01/SR01 
09.01.10.02/SR01 09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 077 <set global transformation 3>:
02.03.03/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.01.02/SR09 
06.01.02/SR15 06.01.02/SR16 06.01.02/SR17 09.01.01.01/SR05 
09.01.01.02/SR05 11.02/SR02 
 
#F 078 <set global transformation>:
02.03.03/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.01.02/SR12 
06.01.02/SR16 06.01.02/SR17 06.01.02/SR18 09.01.01.01/SR05 
09.01.01.02/SR05 11.02/SR02 
 
#F 079 <set modelling clipping volume 3>:
02.03.03/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.01.02/SR23 
06.01.02/SR36 06.01.02/SR37 06.01.02/SR38 06.01.02/SR39 
06.01.02/SR40 06.01.02/SR41 06.01.02/SR42 06.01.02/SR43 
06.01.02/SR44 06.01.02/SR45 06.01.02/SR46 06.01.02/SR47 
06.01.02/SR48 06.01.02/SR57 09.01.01.01/SR05 09.01.01.02/SR05 


                               I-11

                     FUNCTION CROSS-REFERENCE


09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 080 <set modelling clipping volume>:
02.03.03/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.01.02/SR26 
06.01.02/SR36 06.01.02/SR37 06.01.02/SR38 06.01.02/SR39 
06.01.02/SR49 06.01.02/SR57 09.01.01.01/SR05 09.01.01.02/SR05 
09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 081 <set modelling clipping indicator>:
05.02/SR19 05.02/SR20 05.02/SR21 06.01.02/SR29 06.01.02/SR52 
06.01.02/SR53 06.01.02/SR58 09.01.01.01/SR05 09.01.01.02/SR05 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 082 <restore modelling clipping volume>:
02.03.03/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.01.02/SR32 
06.01.02/SR56 06.01.02/SR57 09.01.01.01/SR05 09.01.01.02/SR05 
11.02/SR02 
 
#F 083 <set view index>:
05.02/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.02.02/SR01 
09.01.01.01/SR05 09.01.01.02/SR05 09.01.03.01/SR13 
09.01.03.02/SR13 11.02/SR02 
 
#F 084 <set view representation 3>:
05.02/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.02.02/SR14 
06.02.02/SR15 06.02.02/SR23 09.01.01.01/SR03 09.01.01.02/SR03 
09.01.02.01/SR04 09.01.02.01/SR07 09.01.02.02/SR04 
09.01.02.02/SR07 09.01.03.01/SR14 09.01.03.02/SR14 
09.01.04.01/SR01 09.01.04.01/SR04 09.01.04.01/SR05 
09.01.04.02/SR01 09.01.04.02/SR04 09.01.04.02/SR05 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 085 <set view representation>:
05.02/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.02.02/SR14 
06.02.02/SR15 06.02.02/SR16 06.02.02/SR23 09.01.01.01/SR03 
09.01.01.02/SR03 09.01.02.01/SR04 09.01.02.01/SR07 
09.01.02.02/SR04 09.01.02.02/SR07 09.01.03.01/SR14 
09.01.03.02/SR14 09.01.04.01/SR01 09.01.04.01/SR04 
09.01.04.01/SR05 09.01.04.02/SR01 09.01.04.02/SR04 
09.01.04.02/SR05 09.01.10.01/SR01 09.01.10.02/SR01 
09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 086 <set view transformation input priority>:
06.02.02/SR21 06.02.02/SR22 09.01.01.01/SR03 09.01.01.02/SR03 
09.01.02.01/SR04 09.01.02.01/SR07 09.01.02.02/SR04 
09.01.02.02/SR07 09.01.03.01/SR02 09.01.03.01/SR13 
09.01.03.02/SR02 09.01.03.02/SR13 09.01.10.01/SR01 
09.01.10.02/SR01 09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 087 <set workstation window 3>:
05.02/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.03/SR06 06.03/SR08 
06.03/SR14 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 


                               I-12

                     FUNCTION CROSS-REFERENCE


09.01.02.01/SR07 09.01.02.02/SR04 09.01.02.02/SR07 
09.01.04.01/SR02 09.01.04.01/SR06 09.01.04.02/SR02 
09.01.04.02/SR06 11.02/SR02 
 
#F 088 <set workstation window>:
05.02/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.03/SR07 06.03/SR08 
06.03/SR14 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR07 09.01.02.02/SR04 09.01.02.02/SR07 
09.01.04.01/SR02 09.01.04.01/SR06 09.01.04.02/SR02 
09.01.04.02/SR06 11.02/SR02 
 
#F 089 <set workstation viewport 3>:
05.02/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.03/SR09 06.03/SR11 
06.03/SR14 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR07 09.01.02.02/SR04 09.01.02.02/SR07 
09.01.04.01/SR03 09.01.04.01/SR07 09.01.04.02/SR03 
09.01.04.02/SR07 11.02/SR02 
 
#F 090 <set workstation viewport>:
05.02/SR10 05.02/SR19 05.02/SR20 05.02/SR21 06.03/SR10 06.03/SR11 
06.03/SR14 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR07 09.01.02.02/SR04 09.01.02.02/SR07 
09.01.04.01/SR03 09.01.04.01/SR07 09.01.04.02/SR03 
09.01.04.02/SR07 11.02/SR02 
 
#F 091 <translate 3>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR03 09.02.01/SR01 
11.02/SR02 
 
#F 092 <translate>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR04 09.02.01/SR01 
11.02/SR02 
 
#F 093 <scale 3>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR05 09.02.01/SR01 
11.02/SR02 
 
#F 094 <scale>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR06 09.02.01/SR01 
11.02/SR02 
 
#F 095 <rotate x>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR07 09.02.01/SR01 
11.02/SR02 
 
#F 096 <rotate y>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR08 09.02.01/SR01 
11.02/SR02 
 
#F 097 <rotate z>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR09 09.02.01/SR01 
11.02/SR02 
 
#F 098 <rotate>:


                               I-13

                     FUNCTION CROSS-REFERENCE


06.01.01/SR01 06.01.01/SR02 06.01.01/SR10 09.02.01/SR01 
11.02/SR02 
 
#F 099 <compose matrix 3>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR11 09.02.01/SR01 
11.02/SR02 
 
#F 100 <compose matrix>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR12 09.02.01/SR01 
11.02/SR02 
 
#F 101 <transform point 3>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR13 09.02.01/SR01 
11.02/SR02 
 
#F 102 <transform point>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR14 09.02.01/SR01 
11.02/SR02 
 
#F 103 <build transformation matrix 3>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR15 09.02.01/SR01 
11.02/SR02 
 
#F 104 <build transformation matrix>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR16 09.02.01/SR01 
11.02/SR02 
 
#F 105 <compose transformation matrix 3>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR17 09.02.01/SR01 
11.02/SR02 
 
#F 106 <compose transformation matrix>:
06.01.01/SR01 06.01.01/SR02 06.01.01/SR18 09.02.01/SR01 
11.02/SR02 
 
#F 107 <evaluate view orientation matrix 3>:
06.02.01/SR01 06.02.01/SR02 06.02.01/SR03 06.02.01/SR04 
09.02.01/SR01 09.02.04/SR05 09.02.04/SR06 09.02.04/SR07 
11.02/SR02 
 
#F 108 <evaluate view orientation matrix>:
06.02.01/SR01 06.02.01/SR02 06.02.01/SR05 06.02.01/SR06 
09.02.01/SR01 09.02.04/SR06 11.02/SR02 
 
#F 109 <evaluate view mapping matrix 3>:
06.02.01/SR01 06.02.01/SR02 06.02.01/SR07 06.02.01/SR08 
06.02.01/SR09 06.02.01/SR10 09.02.01/SR01 09.02.04/SR01 
09.02.04/SR02 09.02.04/SR03 09.02.04/SR04 09.02.04/SR08 
09.02.04/SR09 09.02.04/SR10 11.02/SR02 
 
#F 110 <evaluate view mapping matrix>:
06.02.01/SR01 06.02.01/SR02 06.02.01/SR11 06.02.01/SR12 
06.02.01/SR13 09.02.01/SR01 09.02.04/SR01 09.02.04/SR02 
09.02.04/SR03 11.02/SR02 


                               I-14

                     FUNCTION CROSS-REFERENCE


 
#F 111 <open structure>:
02.01.01/SR01 02.01.01/SR09 02.01.01/SR10 02.02.01/SR01 
02.02.01/SR02 02.02.01/SR03 05.03/SR10 09.01.01.01/SR06 
09.01.01.02/SR06 11.02/SR02 
 
#F 112 <close structure>:
02.02.01/SR04 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 113 <execute structure>:
02.01/SR01 02.01/SR05 02.01/SR06 02.01.01/SR03 02.01.01/SR09 
02.01.01/SR10 02.03.03/SR02 03.04/SR07 03.04/SR08 03.04/SR09 
04.02.01.01/SR12 04.02.01.01/SR18 04.02.01.01/SR24 
04.02.01.02/SR09 04.02.02.01/SR12 04.02.02.01/SR19 
04.02.02.01/SR25 04.02.02.02/SR09 04.02.03.01/SR24 
04.02.03.01/SR33 04.02.03.01/SR39 04.02.03.01/SR45 
04.02.03.01/SR51 04.02.03.01/SR63 04.02.03.01/SR71 
04.02.03.01/SR78 04.02.03.01/SR83 04.02.03.02/SR09 
04.02.04.01/SR17 04.02.04.01/SR25 04.02.04.01/SR31 
04.02.04.01/SR36 04.02.04.01/SR41 04.02.04.01/SR54 
04.02.04.01/SR62 04.02.04.01/SR69 04.02.04.01/SR74 
04.02.04.01/SR84 04.02.04.02/SR07 04.02.05.01/SR17 
04.02.05.01/SR25 04.02.05.01/SR31 04.02.05.01/SR39 
04.02.05.01/SR48 04.02.05.01/SR54 04.02.05.01/SR60 
04.02.05.01/SR65 04.02.05.01/SR81 04.02.05.01/SR83 
04.02.05.02/SR10 04.02.05.03/SR09 04.03.01/SR11 04.03.04.01/SR14 
05.02/SR19 05.02/SR20 05.02/SR21 05.03/SR10 06.01.02/SR20 
06.01.02/SR21 06.01.02/SR22 06.01.02/SR51 06.01.02/SR55 
09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 114 <label>:
02.02.02/SR01 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 115 <application data>:
02.02.02/SR04 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 116 <generalized structure element>:
02.02.02/SR07 02.02.02/SR08 02.02.02/SR11 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 117 <set edit mode>:
02.02.03/SR01 02.02.03/SR02 02.02.03/SR03 02.02.03/SR04 
02.02.03/SR05 02.02.03/SR06 09.01.01.01/SR02 09.01.01.02/SR02 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 118 <copy all elements from structure>:
02.02.05/SR01 02.02.05/SR02 02.02.05/SR03 02.02.05/SR04 
05.02/SR19 05.02/SR20 05.02/SR21 09.01.01.01/SR05 
09.01.01.02/SR05 11.02/SR02 
 
#F 119 <set element pointer>:
02.02.03/SR07 02.02.03/SR10 09.01.01.01/SR05 09.01.01.02/SR05 
11.02/SR02 


                               I-15

                     FUNCTION CROSS-REFERENCE


 
#F 120 <offset element pointer>:
02.02.03/SR08 02.02.03/SR10 09.01.01.01/SR05 09.01.01.02/SR05 
11.02/SR02 
 
#F 121 <set element pointer at label>:
02.02.03/SR09 09.01.01.01/SR05 09.01.01.02/SR05 09.01.05.01/SR03 
09.01.05.02/SR03 11.02/SR02 
 
#F 122 <delete element>:
02.02.04/SR01 02.02.04/SR02 02.02.04/SR07 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 123 <delete element range>:
02.02.04/SR03 02.02.04/SR04 02.02.04/SR07 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 11.02/SR02 
 
#F 124 <delete elements between labels>:
02.02.04/SR05 02.02.04/SR06 02.02.04/SR07 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR05 09.01.01.02/SR05 09.01.05.01/SR04 
09.01.05.02/SR04 11.02/SR02 
 
#F 125 <empty structure>:
02.01.01/SR02 02.01.01/SR09 02.01.01/SR10 02.02.04/SR08 
02.02.04/SR09 02.02.04/SR10 02.02.04/SR11 05.02/SR19 05.02/SR20 
05.02/SR21 05.03/SR10 09.01.01.01/SR02 09.01.01.02/SR02 
11.02/SR02 
 
#F 126 <delete structure>:
02.01.02.01/SR01 02.01.02.01/SR02 02.01.02.01/SR03 
02.01.02.01/SR04 02.01.02.01/SR05 02.01.02.01/SR06 
02.01.02.01/SR07 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR02 09.01.01.02/SR02 11.02/SR02 
 
#F 127 <delete structure network>:
02.01.02.02/SR01 02.01.02.02/SR02 02.01.02.02/SR03 
02.01.02.02/SR04 02.01.02.02/SR05 02.01.02.02/SR06 
02.01.02.02/SR07 02.01.02.02/SR08 02.01.02.02/SR09 
02.01.02.02/SR10 02.01.02.02/SR11 02.01.02.02/SR12 05.02/SR19 
05.02/SR20 05.02/SR21 09.01.01.01/SR02 09.01.01.02/SR02 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 128 <delete all structures>:
02.01.02.03/SR01 02.01.02.03/SR02 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR02 09.01.01.02/SR02 11.02/SR02 
 
#F 129 <change structure identifier>:
02.01.01/SR05 02.01.01/SR09 02.01.01/SR10 02.01.03.01/SR01 
02.01.03.01/SR02 02.01.03.01/SR03 02.01.03.01/SR04 
02.01.03.01/SR05 02.01.03.01/SR06 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR02 09.01.01.02/SR02 11.02/SR02 
 
#F 130 <change structure references>:


                               I-16

                     FUNCTION CROSS-REFERENCE


02.01.01/SR06 02.01.01/SR09 02.01.01/SR10 02.01.03.02/SR01 
02.01.03.02/SR02 02.01.03.02/SR03 02.01.03.02/SR04 
02.01.03.02/SR05 02.01.03.02/SR06 02.01.03.03/SR07 
02.01.03.03/SR08 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR02 09.01.01.02/SR02 11.02/SR02 
 
#F 131 <change structure identifier and references>:
02.01.01/SR07 02.01.01/SR09 02.01.01/SR10 02.01.03.03/SR01 
02.01.03.03/SR02 02.01.03.03/SR03 02.01.03.03/SR04 
02.01.03.03/SR05 02.01.03.03/SR06 02.01.03.03/SR07 
02.01.03.03/SR08 05.02/SR19 05.02/SR20 05.02/SR21 
09.01.01.01/SR02 09.01.01.02/SR02 11.02/SR02 
 
#F 132 <post structure>:
02.01.01/SR04 02.01.01/SR09 02.01.01/SR10 05.02/SR10 05.02/SR19 
05.02/SR20 05.02/SR21 05.03/SR01 05.03/SR02 05.03/SR03 05.03/SR04 
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR09 09.01.02.02/SR04 09.01.02.02/SR09 
09.01.05.01/SR06 09.01.05.02/SR06 11.02/SR02 
 
#F 133 <unpost structure>:
05.02/SR19 05.02/SR20 05.02/SR21 05.03/SR05 05.03/SR06 05.03/SR07 
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR09 09.01.02.02/SR04 09.01.02.02/SR09 11.02/SR02 
 
#F 134 <unpost all structures>:
05.02/SR19 05.02/SR20 05.02/SR21 05.03/SR08 05.03/SR09 
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR09 09.01.02.02/SR04 09.01.02.02/SR09 11.02/SR02 
 
#F 135 <open archive file>:
03.01/SR05 03.01/SR06 03.01/SR07 09.01.01.01/SR02 
09.01.01.02/SR02 09.01.09.01/SR01 09.01.09.01/SR02 
09.01.09.01/SR03 09.01.09.01/SR04 09.01.09.02/SR01 
09.01.09.02/SR02 09.01.09.02/SR03 09.01.09.02/SR04 11.02/SR02 
 
#F 136 <close archive file>:
03.01/SR08 03.01/SR09 09.01.01.01/SR07 09.01.01.02/SR07 
09.01.09.01/SR05 09.01.09.02/SR05 11.02/SR02 
 
#F 137 <archive structures>:
03.01/SR07 03.03/SR01 03.03/SR04 03.03/SR05 03.03/SR06 03.03/SR07 
03.03/SR08 09.01.01.01/SR07 09.01.01.02/SR07 09.01.05.01/SR01 
09.01.05.02/SR01 09.01.09.01/SR05 09.01.09.01/SR06 
09.01.09.01/SR07 09.01.09.02/SR05 09.01.09.02/SR06 
09.01.09.02/SR07 09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 138 <archive structure networks>:
03.01/SR07 03.03/SR02 03.03/SR04 03.03/SR05 03.03/SR06 03.03/SR07 
03.03/SR08 09.01.01.01/SR07 09.01.01.02/SR07 09.01.05.01/SR01 
09.01.05.02/SR01 09.01.09.01/SR05 09.01.09.01/SR06 
09.01.09.01/SR07 09.01.09.02/SR05 09.01.09.02/SR06 
09.01.09.02/SR07 09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 


                               I-17

                     FUNCTION CROSS-REFERENCE


#F 139 <archive all structures>:
03.01/SR07 03.03/SR03 03.03/SR04 03.03/SR05 03.03/SR06 03.03/SR07 
03.03/SR08 09.01.01.01/SR07 09.01.01.02/SR07 09.01.09.01/SR05 
09.01.09.01/SR06 09.01.09.01/SR07 09.01.09.02/SR05 
09.01.09.02/SR06 09.01.09.02/SR07 11.02/SR02 
 
#F 140 <set conflict resolution>:
03.02/SR02 09.01.01.01/SR02 09.01.01.02/SR02 09.01.10.01/SR01 
09.01.10.02/SR01 09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 141 <retrieve structure identifiers>:
03.01/SR07 03.04/SR01 09.01.01.01/SR07 09.01.01.02/SR07 
09.01.09.01/SR05 09.01.09.02/SR05 09.01.10.01/SR02 
09.01.10.02/SR02 11.02/SR02 
 
#F 142 <retrieve structures>:
03.01/SR07 03.03/SR09 03.03/SR12 03.03/SR13 03.03/SR14 03.03/SR15 
03.03/SR16 03.03/SR17 03.03/SR18 03.03/SR19 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR07 09.01.01.02/SR07 09.01.09.01/SR05 
09.01.09.01/SR06 09.01.09.01/SR09 09.01.09.02/SR05 
09.01.09.02/SR06 09.01.09.02/SR09 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 143 <retrieve structure networks>:
03.01/SR07 03.03/SR10 03.03/SR12 03.03/SR13 03.03/SR14 03.03/SR15 
03.03/SR16 03.03/SR17 03.03/SR18 03.03/SR19 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR07 09.01.01.02/SR07 09.01.09.01/SR05 
09.01.09.01/SR06 09.01.09.01/SR09 09.01.09.02/SR05 
09.01.09.02/SR06 09.01.09.02/SR09 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 144 <retrieve all structures>:
03.01/SR07 03.03/SR11 03.03/SR12 03.03/SR13 03.03/SR14 03.03/SR15 
03.03/SR16 03.03/SR17 03.03/SR18 03.03/SR19 05.02/SR19 05.02/SR20 
05.02/SR21 09.01.01.01/SR07 09.01.01.02/SR07 09.01.09.01/SR05 
09.01.09.01/SR06 09.01.09.02/SR05 09.01.09.02/SR06 11.02/SR02 
 
#F 145 <retrieve paths to ancestors>:
03.01/SR07 03.04/SR05 03.04/SR07 03.04/SR08 03.04/SR10 03.04/SR12 
03.04/SR13 03.04/SR16 09.01.01.01/SR07 09.01.01.02/SR07 
09.01.05.01/SR02 09.01.05.01/SR05 09.01.05.02/SR02 
09.01.05.02/SR05 09.01.10.01/SR01 09.01.10.01/SR02 
09.01.10.02/SR01 09.01.10.02/SR02 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 146 <retrieve paths to descendants>:
03.01/SR07 03.04/SR06 03.04/SR07 03.04/SR08 03.04/SR09 03.04/SR11 
03.04/SR14 03.04/SR15 03.04/SR17 09.01.01.01/SR07 
09.01.01.02/SR07 09.01.05.01/SR02 09.01.05.01/SR05 
09.01.05.02/SR02 09.01.05.02/SR05 09.01.10.01/SR01 
09.01.10.01/SR02 09.01.10.02/SR01 09.01.10.02/SR02 
09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 147 <delete structures from archive>:


                               I-18

                     FUNCTION CROSS-REFERENCE


03.01/SR07 03.05/SR01 03.05/SR04 03.05/SR05 09.01.01.01/SR07 
09.01.01.02/SR07 09.01.09.01/SR05 09.01.09.01/SR08 
09.01.09.02/SR05 09.01.09.02/SR08 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 148 <delete structure networks from archive>:
03.01/SR07 03.05/SR02 03.05/SR04 03.05/SR05 09.01.01.01/SR07 
09.01.01.02/SR07 09.01.09.01/SR05 09.01.09.01/SR08 
09.01.09.02/SR05 09.01.09.02/SR08 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 149 <delete all structures from archive>:
03.01/SR07 03.05/SR03 03.05/SR04 03.05/SR05 09.01.01.01/SR07 
09.01.01.02/SR07 09.01.09.01/SR05 09.01.09.02/SR05 11.02/SR02 
 
#F 150 <set pick identifier>:
05.02/SR19 05.02/SR20 05.02/SR21 09.01.01.01/SR05 
09.01.01.02/SR05 11.02/SR02 
 
#F 151 <set pick filter>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR10 09.01.02.02/SR04 09.01.02.02/SR10 
09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 152 <initialize locator 3>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.03.01/SR13 09.01.03.02/SR13 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 153 <initialize locator>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.03.01/SR13 09.01.03.02/SR13 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 154 <initialize stroke 3>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.03.01/SR13 09.01.03.02/SR13 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 155 <initialize stroke>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.03.01/SR13 09.01.03.02/SR13 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 156 <initialize valuator 3>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 157 <initialize valuator>:


                               I-19

                     FUNCTION CROSS-REFERENCE


09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 158 <initialize choice 3>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.10.01/SR01 09.01.10.01/SR03 09.01.10.02/SR01 
09.01.10.02/SR03 09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 159 <initialize choice>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.10.01/SR01 09.01.10.01/SR03 09.01.10.02/SR01 
09.01.10.02/SR03 09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 160 <initialize pick 3>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR10 09.01.02.02/SR04 09.01.02.02/SR10 
09.01.10.01/SR01 09.01.10.01/SR03 09.01.10.02/SR01 
09.01.10.02/SR03 09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 161 <initialize pick>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR10 09.01.02.02/SR04 09.01.02.02/SR10 
09.01.10.01/SR01 09.01.10.01/SR03 09.01.10.02/SR01 
09.01.10.02/SR03 09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 162 <initialize string 3>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 163 <initialize string>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 164 <set locator mode>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 165 <set stroke mode>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 166 <set valuator mode>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 


                               I-20

                     FUNCTION CROSS-REFERENCE


09.01.11.02/SR01 11.02/SR02 
 
#F 167 <set choice mode>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 168 <set pick mode>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR10 09.01.02.02/SR04 09.01.02.02/SR10 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 169 <set string mode>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 170 <request locator 3>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 11.02/SR02 
 
#F 171 <request locator>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 11.02/SR02 
 
#F 172 <request stroke 3>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 11.02/SR02 
 
#F 173 <request stroke>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR10 09.01.02.02/SR04 09.01.02.02/SR10 11.02/SR02 
 
#F 174 <request valuator>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 11.02/SR02 
 
#F 175 <request choice>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 11.02/SR02 
 
#F 176 <request pick>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR10 09.01.02.02/SR04 09.01.02.02/SR10 11.02/SR02 
 
#F 177 <request string>:
05.02/SR30 09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 11.02/SR02 
 
#F 178 <sample locator 3>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 


                               I-21

                     FUNCTION CROSS-REFERENCE


09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 11.02/SR02 
 
#F 179 <sample locator>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 11.02/SR02 
 
#F 180 <sample stroke 3>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 11.02/SR02 
 
#F 181 <sample stroke>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 11.02/SR02 
 
#F 182 <sample valuator>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 11.02/SR02 
 
#F 183 <sample choice>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 11.02/SR02 
 
#F 184 <sample pick>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR10 09.01.02.02/SR04 09.01.02.02/SR10 11.02/SR02 
 
#F 185 <sample string>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 11.02/SR02 
 
#F 186 <await event>:
09.01.01.01/SR03 09.01.01.02/SR03 11.02/SR02 
 
#F 187 <flush device events>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR11 09.01.02.02/SR04 09.01.02.02/SR11 
09.01.10.01/SR01 09.01.10.02/SR01 09.01.11.01/SR04 
09.01.11.02/SR01 11.02/SR02 
 
#F 188 <get locator 3>:
09.01.01.01/SR03 09.01.01.02/SR03 11.02/SR02 
 
#F 189 <get locator>:
09.01.01.01/SR03 09.01.01.02/SR03 11.02/SR02 
 
#F 190 <get stroke 3>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.10.01/SR02 
09.01.10.02/SR02 11.02/SR02 
 
#F 191 <get stroke>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.10.01/SR02 
09.01.10.02/SR02 11.02/SR02 
 
#F 192 <get valuator>:


                               I-22

                     FUNCTION CROSS-REFERENCE


09.01.01.01/SR03 09.01.01.02/SR03 11.02/SR02 
 
#F 193 <get choice>:
09.01.01.01/SR03 09.01.01.02/SR03 11.02/SR02 
 
#F 194 <get pick>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.10.01/SR02 
09.01.10.02/SR02 11.02/SR02 
 
#F 195 <get string>:
09.01.01.01/SR03 09.01.01.02/SR03 11.02/SR02 
 
#F 196 <write item to metafile>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR06 09.01.02.02/SR04 09.01.02.02/SR06 
09.01.10.01/SR03 09.01.10.02/SR03 11.02/SR02 
 
#F 197 <get item type from metafile>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR08 09.01.02.02/SR04 09.01.02.02/SR08 11.02/SR02 
 
#F 198 <read item from metafile>:
09.01.01.01/SR03 09.01.01.02/SR03 09.01.02.01/SR04 
09.01.02.01/SR08 09.01.02.02/SR04 09.01.02.02/SR08 11.02/SR02 
 
#F 199 <interpret item>:
09.01.01.01/SR02 09.01.01.02/SR02 09.01.10.01/SR03 
09.01.10.02/SR03 11.02/SR02 
 
#F 200 <inquire system state value>:
01/SR03 11.02/SR02 
 
#F 201 <inquire workstation state value>:
05.01.01/SR02 05.01.01/SR03 05.01.01/SR04 05.01.01/SR05 
11.02/SR02 
 
#F 202 <inquire structure state value>:
02.02.01/SR09 11.02/SR02 
 
#F 203 <inquire archive state value>:
03.01/SR03 03.01/SR05 03.01/SR08 03.01/SR10 11.02/SR02 
 
#F 204 <inquire list of available workstation types>:
05.01.02/SR04 05.01.02/SR05 05.01.02/SR06 05.01.02/SR07 
09.02.01/SR01 09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 
11.02/SR02 
 
#F 205 <inquire phigs facilities>:
02.03.03/SR21 02.03.03/SR22 03.01/SR01 03.01/SR02 04.01.03/SR07 
04.01.03/SR08 04.03.04.01/SR07 04.03.04.01/SR08 05.01.01/SR09 
05.01.01/SR10 05.01.01/SR11 09.02.01/SR01 09.02.10/SR03 
09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 206 <inquire generalized structure element facilities>:


                               I-23

                     FUNCTION CROSS-REFERENCE


02.02.02/SR11 02.02.02/SR12 09.02.01/SR01 09.02.10/SR03 
09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 207 <inquire modelling clipping facilities>:
06.01.02/SR35 06.01.02/SR36 06.01.02/SR37 09.02.01/SR01 
09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 208 <inquire edit mode>:
02.02.03/SR11 09.02.01/SR01 11.02/SR02 
 
#F 209 <inquire set of open workstations>:
05.01.01/SR01 05.01.01/SR06 05.01.01/SR07 05.01.01/SR12 
09.02.01/SR01 09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 
11.02/SR02 
 
#F 210 <inquire structure identifiers>:
02.01/SR02 02.01.01/SR09 09.02.01/SR01 09.02.10/SR03 
09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 211 <inquire archive files>:
03.01/SR04 03.01/SR06 03.01/SR09 03.01/SR11 09.02.01/SR01 
09.02.10/SR03 11.02/SR02 
 
#F 212 <inquire conflict resolution>:
03.02/SR01 03.02/SR03 09.02.01/SR01 11.02/SR02 
 
#F 213 <inquire all conflicting structures>:
03.04/SR02 09.02.01/SR04 09.02.09/SR01 09.02.10/SR03 
09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 214 <inquire conflicting structures in network>:
03.04/SR03 03.04/SR04 09.02.01/SR04 09.02.05/SR01 09.02.09/SR01 
09.02.10/SR01 09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 
09.02.11/SR03 11.02/SR02 
 
#F 215 <inquire more simultaneous events>:
09.02.01/SR01 11.02/SR02 
 
#F 216 <inquire workstation connection and type>:
05.01.02/SR08 09.02.01/SR02 09.02.02/SR03 11.02/SR02 
 
#F 217 <inquire list of view indices>:
06.02.02/SR08 06.02.02/SR18 06.02.02/SR19 06.02.02/SR20 
09.02.01/SR02 09.02.02/SR03 09.02.02/SR04 09.02.10/SR03 
09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 218 <inquire view representation>:
06.02.02/SR09 06.02.02/SR10 06.02.02/SR11 06.02.02/SR17 
06.02.02/SR24 06.02.02/SR25 06.02.02/SR26 06.02.02/SR27 
06.02.02/SR28 06.02.02/SR29 09.02.01/SR02 09.02.02/SR03 
09.02.02/SR04 09.02.03/SR02 09.02.03/SR08 09.02.10/SR01 
09.02.11/SR03 11.02/SR02 
 
#F 219 <inquire hlhsr mode>:


                               I-24

                     FUNCTION CROSS-REFERENCE


04.03.03/SR05 04.03.03/SR06 04.03.03/SR07 04.03.03/SR11 
04.03.03/SR12 04.03.03/SR13 04.03.03/SR14 04.03.03/SR15 
09.02.01/SR02 09.02.02/SR03 09.02.02/SR04 11.02/SR02 
 
#F 220 <inquire posted structures>:
05.03/SR14 05.03/SR15 09.02.01/SR02 09.02.02/SR03 09.02.02/SR05 
09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 221 <inquire display update state>:
04.03.03/SR06 04.03.03/SR07 05.02/SR01 05.02/SR02 05.02/SR04 
05.02/SR11 05.02/SR12 05.02/SR13 05.02/SR14 05.02/SR15 05.02/SR22 
05.02/SR23 05.02/SR24 05.02/SR25 05.02/SR26 05.02/SR27 05.02/SR28 
05.02/SR29 05.02/SR31 05.02/SR32 06.02.02/SR27 06.02.02/SR28 
06.03/SR18 06.03/SR19 09.02.01/SR02 09.02.02/SR03 09.02.02/SR05 
11.02/SR02 
 
#F 222 <inquire list of polyline indices>:
04.02.01.02/SR12 04.02.01.02/SR13 04.02.01.02/SR16 
04.02.01.02/SR24 04.02.01.02/SR25 09.02.01/SR02 09.02.02/SR03 
09.02.02/SR05 09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 
11.02/SR02 
 
#F 223 <inquire polyline representation>:
04.02.01.02/SR13 04.02.01.02/SR14 04.02.01.02/SR15 
04.02.01.02/SR16 04.02.01.02/SR24 04.02.01.02/SR25 
04.02.01.02/SR48 04.02.01.02/SR49 09.02.01/SR02 09.02.02/SR03 
09.02.02/SR05 09.02.03/SR01 09.02.03/SR02 09.02.10/SR01 
09.02.11/SR03 11.02/SR02 
 
#F 224 <inquire list of polymarker indices>:
04.02.02.02/SR12 04.02.02.02/SR13 04.02.02.02/SR16 
04.02.02.02/SR24 04.02.02.02/SR25 09.02.01/SR02 09.02.02/SR03 
09.02.02/SR05 09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 
11.02/SR02 
 
#F 225 <inquire polymarker representation>:
04.02.02.02/SR13 04.02.02.02/SR14 04.02.02.02/SR15 
04.02.02.02/SR16 04.02.02.02/SR24 04.02.02.02/SR25 
04.02.02.02/SR49 04.02.02.02/SR50 09.02.01/SR02 09.02.02/SR03 
09.02.02/SR05 09.02.03/SR01 09.02.03/SR02 09.02.10/SR01 
09.02.11/SR03 11.02/SR02 
 
#F 226 <inquire list of text indices>:
04.02.03.02/SR12 04.02.03.02/SR13 04.02.03.02/SR16 
04.02.03.02/SR24 04.02.03.02/SR25 04.02.04.02/SR09 09.02.01/SR02 
09.02.02/SR03 09.02.02/SR05 09.02.10/SR03 09.02.11/SR01 
09.02.11/SR02 11.02/SR02 
 
#F 227 <inquire text representation>:
04.02.03.02/SR13 04.02.03.02/SR14 04.02.03.02/SR15 
04.02.03.02/SR16 04.02.03.02/SR24 04.02.03.02/SR25 
04.02.03.02/SR28 04.02.03.02/SR34 04.02.03.02/SR35 
04.02.03.02/SR47 04.02.03.02/SR55 04.02.03.02/SR65 
04.02.03.02/SR66 04.02.04.02/SR09 04.02.04.02/SR10 


                               I-25

                     FUNCTION CROSS-REFERENCE


04.02.04.02/SR20 04.02.04.02/SR30 04.02.04.02/SR31 09.02.01/SR02 
09.02.02/SR03 09.02.02/SR05 09.02.03/SR01 09.02.03/SR02 
09.02.10/SR01 09.02.11/SR03 11.02/SR02 
 
#F 228 <inquire list of interior indices>:
04.02.05.02/SR13 04.02.05.02/SR14 04.02.05.02/SR17 
04.02.05.02/SR25 04.02.05.02/SR26 09.02.01/SR02 09.02.02/SR03 
09.02.02/SR05 09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 
11.02/SR02 
 
#F 229 <inquire interior representation>:
04.02.05.02/SR14 04.02.05.02/SR15 04.02.05.02/SR16 
04.02.05.02/SR17 04.02.05.02/SR25 04.02.05.02/SR26 
04.02.05.02/SR31 04.02.05.02/SR40 04.02.05.02/SR41 
04.02.05.02/SR52 04.02.05.02/SR53 09.02.01/SR02 09.02.02/SR03 
09.02.02/SR05 09.02.03/SR01 09.02.03/SR02 09.02.10/SR01 
09.02.11/SR03 11.02/SR02 
 
#F 230 <inquire list of edge indices>:
04.02.05.03/SR12 04.02.05.03/SR13 04.02.05.03/SR16 
04.02.05.03/SR24 04.02.05.03/SR25 09.02.01/SR02 09.02.02/SR03 
09.02.02/SR05 09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 
11.02/SR02 
 
#F 231 <inquire edge representation>:
04.02.05.03/SR13 04.02.05.03/SR14 04.02.05.03/SR15 
04.02.05.03/SR16 04.02.05.03/SR24 04.02.05.03/SR25 
04.02.05.03/SR29 04.02.05.03/SR51 04.02.05.03/SR52 09.02.01/SR02 
09.02.02/SR03 09.02.02/SR05 09.02.03/SR01 09.02.03/SR02 
09.02.10/SR01 09.02.11/SR03 11.02/SR02 
 
#F 232 <inquire list of pattern indices>:
04.02.05.01/SR20 04.02.05.01/SR21 04.02.05.04/SR03 
04.02.05.04/SR04 04.02.05.04/SR07 04.02.05.04/SR16 
04.02.05.04/SR17 09.02.01/SR02 09.02.02/SR03 09.02.02/SR05 
09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 233 <inquire pattern representation>:
04.02.05.01/SR20 04.02.05.04/SR04 04.02.05.04/SR05 
04.02.05.04/SR06 04.02.05.04/SR07 04.02.05.04/SR16 
04.02.05.04/SR17 04.02.05.04/SR20 04.02.05.04/SR21 09.02.01/SR02 
09.02.02/SR03 09.02.02/SR05 09.02.03/SR02 09.02.03/SR05 
09.02.03/SR06 09.02.10/SR01 09.02.10/SR02 09.02.11/SR03 
11.02/SR02 
 
#F 234 <inquire colour model>:
04.03.02.01/SR10 04.03.02.02/SR17 04.03.02.02/SR20 09.02.01/SR02 
09.02.02/SR03 09.02.02/SR05 11.02/SR02 
 
#F 235 <inquire list of colour indices>:
04.02.01.02/SR48 04.02.01.02/SR49 04.02.02.02/SR49 
04.02.02.02/SR50 04.02.03.02/SR65 04.02.03.02/SR66 
04.02.04.02/SR30 04.02.04.02/SR31 04.02.05.02/SR52 
04.02.05.02/SR53 04.02.05.03/SR51 04.02.05.03/SR52 


                               I-26

                     FUNCTION CROSS-REFERENCE


04.03.02.01/SR03 04.03.02.01/SR04 04.03.02.01/SR06 
04.03.02.02/SR13 04.03.02.02/SR14 09.02.01/SR02 09.02.02/SR03 
09.02.02/SR05 09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 
11.02/SR02 
 
#F 236 <inquire colour representation>:
04.03.02.01/SR04 04.03.02.01/SR05 04.03.02.01/SR06 
04.03.02.02/SR03 04.03.02.02/SR05 04.03.02.02/SR06 
04.03.02.02/SR13 04.03.02.02/SR14 04.03.02.02/SR21 
04.03.02.02/SR26 04.03.02.02/SR30 04.03.02.02/SR31 
04.03.02.02/SR32 04.03.02.02/SR33 09.02.01/SR02 09.02.02/SR03 
09.02.02/SR05 09.02.03/SR02 09.02.03/SR07 09.02.10/SR01 
09.02.10/SR02 09.02.11/SR03 11.02/SR02 
 
#F 237 <inquire highlighting filter>:
04.03.04.02/SR02 04.03.04.02/SR03 09.02.01/SR02 09.02.02/SR03 
09.02.02/SR05 09.02.10/SR02 11.02/SR02 
 
#F 238 <inquire invisibility filter>:
04.03.04.02/SR06 04.03.04.02/SR07 09.02.01/SR02 09.02.02/SR03 
09.02.02/SR05 09.02.10/SR02 11.02/SR02 
 
#F 239 <inquire workstation transformation 3>:
06.03/SR12 06.03/SR15 06.03/SR16 06.03/SR17 06.03/SR18 06.03/SR19 
06.03/SR20 09.02.01/SR02 09.02.02/SR03 09.02.02/SR04 11.02/SR02 
 
#F 240 <inquire workstation transformation>:
06.03/SR13 06.03/SR15 06.03/SR16 06.03/SR17 06.03/SR18 06.03/SR19 
06.03/SR20 09.02.01/SR02 09.02.02/SR03 09.02.02/SR04 11.02/SR02 
 
#F 241 <inquire locator device state 3>:
09.02.01/SR02 09.02.02/SR03 09.02.02/SR07 09.02.10/SR01 
09.02.10/SR02 09.02.11/SR03 11.02/SR02 
 
#F 242 <inquire locator device state>:
09.02.01/SR02 09.02.02/SR03 09.02.02/SR07 09.02.10/SR01 
09.02.10/SR02 09.02.11/SR03 11.02/SR02 
 
#F 243 <inquire stroke device state 3>:
09.02.01/SR02 09.02.02/SR03 09.02.02/SR07 09.02.10/SR02 
09.02.11/SR03 11.02/SR02 
 
#F 244 <inquire stroke device state>:
09.02.01/SR02 09.02.02/SR03 09.02.02/SR07 09.02.10/SR02 
09.02.11/SR03 11.02/SR02 
 
#F 245 <inquire valuator device state 3>:
09.02.01/SR02 09.02.02/SR03 09.02.02/SR07 09.02.10/SR02 
11.02/SR02 
 
#F 246 <inquire valuator device state>:
09.02.01/SR02 09.02.02/SR03 09.02.02/SR07 09.02.10/SR02 
11.02/SR02 
 


                               I-27

                     FUNCTION CROSS-REFERENCE


#F 247 <inquire choice device state 3>:
09.02.01/SR02 09.02.02/SR03 09.02.02/SR07 09.02.10/SR02 
11.02/SR02 
 
#F 248 <inquire choice device state>:
09.02.01/SR02 09.02.02/SR03 09.02.02/SR07 09.02.10/SR02 
11.02/SR02 
 
#F 249 <inquire pick device state 3>:
09.02.01/SR02 09.02.02/SR03 09.02.02/SR06 09.02.10/SR01 
09.02.10/SR02 09.02.11/SR03 11.02/SR02 
 
#F 250 <inquire pick device state>:
09.02.01/SR02 09.02.02/SR03 09.02.02/SR06 09.02.10/SR01 
09.02.10/SR02 09.02.11/SR03 11.02/SR02 
 
#F 251 <inquire string device state 3>:
09.02.01/SR02 09.02.02/SR03 09.02.02/SR07 09.02.10/SR01 
09.02.10/SR02 11.02/SR02 
 
#F 252 <inquire string device state>:
09.02.01/SR02 09.02.02/SR03 09.02.02/SR07 09.02.10/SR01 
09.02.10/SR02 11.02/SR02 
 
#F 253 <inquire workstation category>:
05.01.02/SR01 05.01.02/SR02 05.01.02/SR03 05.01.02/SR04 
05.01.02/SR10 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
11.02/SR02 
 
#F 254 <inquire display space size 3>:
05.01.02/SR01 06.03/SR02 06.03/SR04 09.02.01/SR01 09.02.02/SR01 
09.02.02/SR02 09.02.02/SR04 09.02.02/SR08 11.02/SR02 
 
#F 255 <inquire display space size>:
04.01/SR02 05.01.02/SR01 06.03/SR03 06.03/SR04 09.02.01/SR01 
09.02.02/SR01 09.02.02/SR02 09.02.02/SR04 09.02.02/SR08 
11.02/SR02 
 
#F 256 <inquire hlhsr facilities>:
04.03.03/SR08 04.03.03/SR09 04.03.03/SR10 04.03.03/SR11 
05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR04 09.02.02/SR08 09.02.10/SR03 09.02.11/SR01 
09.02.11/SR02 11.02/SR02 
 
#F 257 <inquire view facilities>:
05.01.02/SR01 06.02.02/SR04 06.02.02/SR05 09.02.01/SR01 
09.02.02/SR01 09.02.02/SR02 09.02.02/SR04 09.02.02/SR08 
11.02/SR02 
 
#F 258 <inquire predefined view representation>:
05.01.02/SR01 06.02.02/SR06 06.02.02/SR07 06.02.02/SR09 
09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 09.02.02/SR04 
09.02.02/SR08 09.02.03/SR02 09.02.03/SR08 11.02/SR02 
 


                               I-28

                     FUNCTION CROSS-REFERENCE


#F 259 <inquire workstation classification>:
05.01.02/SR01 05.01.02/SR09 05.01.02/SR10 09.02.01/SR01 
09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 
11.02/SR02 
 
#F 260 <inquire dynamics of workstation attributes>:
04.03.03/SR06 04.03.03/SR07 05.01.02/SR01 05.02/SR06 05.02/SR19 
05.02/SR20 05.02/SR21 05.02/SR24 05.02/SR25 05.02/SR26 05.02/SR27 
05.02/SR28 05.02/SR29 05.02/SR31 05.02/SR32 09.02.01/SR01 
09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 
11.02/SR02 
 
#F 261 <inquire default display update state>:
05.01.02/SR01 05.02/SR01 05.02/SR02 05.02/SR05 09.02.01/SR01 
09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 
11.02/SR02 
 
#F 262 <inquire polyline facilities>:
04.02.01.01/SR06 04.02.01.01/SR07 04.02.01.01/SR15 
04.02.01.01/SR16 04.02.01.02/SR19 04.02.01.02/SR21 
04.02.01.02/SR25 04.02.01.02/SR26 04.02.01.02/SR27 
04.02.01.02/SR29 04.02.01.02/SR30 04.02.01.02/SR31 
04.02.01.02/SR32 04.02.01.02/SR33 04.02.01.02/SR34 
04.02.01.02/SR39 04.02.01.02/SR40 04.02.01.02/SR41 05.01.02/SR01 
09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 
09.02.02/SR08 09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 
11.02/SR02 
 
#F 263 <inquire predefined polyline representation>:
04.02.01.02/SR20 04.02.01.02/SR21 04.02.01.02/SR22 
04.02.01.02/SR23 04.02.01.02/SR24 04.02.01.02/SR26 
04.02.01.02/SR27 04.02.01.02/SR28 05.01.02/SR01 09.02.01/SR01 
09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 
09.02.03/SR01 09.02.03/SR03 11.02/SR02 
 
#F 264 <inquire polymarker facilities>:
04.02.02.01/SR06 04.02.02.01/SR07 04.02.02.01/SR15 
04.02.02.01/SR16 04.02.02.02/SR19 04.02.02.02/SR21 
04.02.02.02/SR25 04.02.02.02/SR26 04.02.02.02/SR27 
04.02.02.02/SR29 04.02.02.02/SR30 04.02.02.02/SR31 
04.02.02.02/SR32 04.02.02.02/SR33 04.02.02.02/SR34 
04.02.02.02/SR39 04.02.02.02/SR40 04.02.02.02/SR41 05.01.02/SR01 
09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 
09.02.02/SR08 09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 
11.02/SR02 
 
#F 265 <inquire predefined polymarker representation>:
04.02.02.02/SR20 04.02.02.02/SR21 04.02.02.02/SR22 
04.02.02.02/SR23 04.02.02.02/SR24 04.02.02.02/SR26 
04.02.02.02/SR27 04.02.02.02/SR28 05.01.02/SR01 09.02.01/SR01 
09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 
09.02.03/SR01 09.02.03/SR03 11.02/SR02 
 
#F 266 <inquire text facilities>:


                               I-29

                     FUNCTION CROSS-REFERENCE


04.02.03.01/SR21 04.02.03.01/SR22 04.02.03.01/SR28 
04.02.03.01/SR37 04.02.03.01/SR53 04.02.03.01/SR54 
04.02.03.01/SR55 04.02.03.01/SR56 04.02.03.01/SR57 
04.02.03.01/SR61 04.02.03.02/SR19 04.02.03.02/SR21 
04.02.03.02/SR25 04.02.03.02/SR26 04.02.03.02/SR27 
04.02.03.02/SR30 04.02.03.02/SR31 04.02.03.02/SR32 
04.02.03.02/SR33 04.02.03.02/SR34 04.02.03.02/SR35 
04.02.03.02/SR36 04.02.03.02/SR37 04.02.03.02/SR40 
04.02.03.02/SR47 04.02.03.02/SR51 04.02.03.02/SR52 
04.02.03.02/SR53 04.02.03.02/SR54 04.02.03.02/SR55 
04.02.03.02/SR59 04.02.04.01/SR14 04.02.04.01/SR15 
04.02.04.01/SR20 04.02.04.01/SR29 04.02.04.01/SR52 
04.02.04.02/SR10 04.02.04.02/SR13 04.02.04.02/SR20 
04.02.04.02/SR26 05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 
09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 09.02.10/SR03 
09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 267 <inquire predefined text representation>:
04.02.03.02/SR20 04.02.03.02/SR21 04.02.03.02/SR22 
04.02.03.02/SR23 04.02.03.02/SR24 04.02.03.02/SR26 
04.02.03.02/SR27 04.02.03.02/SR28 04.02.03.02/SR29 
04.02.03.02/SR34 04.02.04.02/SR08 04.02.04.02/SR09 
04.02.04.02/SR10 05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 
09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 09.02.03/SR01 
09.02.03/SR03 11.02/SR02 
 
#F 268 <inquire annotation facilities>:
04.02.04.01/SR43 04.02.04.01/SR44 04.02.04.01/SR45 
04.02.04.01/SR46 04.02.04.01/SR47 04.02.04.01/SR77 
04.02.04.01/SR78 04.02.04.01/SR79 04.02.04.01/SR80 
04.02.04.01/SR81 04.02.04.01/SR82 05.01.02/SR01 09.02.01/SR01 
09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 
09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 269 <inquire text extent>:
04.02.03.01/SR36 04.02.03.01/SR42 04.02.03.01/SR59 
04.02.03.02/SR58 04.02.03.02/SR62 04.02.03.03/SR01 
04.02.03.03/SR04 04.02.03.03/SR05 04.02.03.03/SR06 
04.02.03.03/SR07 04.02.03.03/SR08 04.02.03.03/SR09 
04.02.03.03/SR10 04.02.03.03/SR11 04.02.03.03/SR12 
04.02.03.03/SR13 04.02.03.03/SR14 04.02.03.03/SR15 
04.02.03.03/SR16 04.02.03.03/SR17 04.02.03.03/SR18 
04.02.04.01/SR27 04.02.04.01/SR33 04.02.04.01/SR49 
04.02.04.02/SR25 04.02.04.02/SR28 05.01.02/SR01 09.02.01/SR01 
09.02.02/SR01 09.02.02/SR02 09.02.02/SR08 09.02.03/SR04 
09.02.10/SR01 09.02.11/SR03 11.02/SR02 
 
#F 270 <inquire interior facilities>:
04.02.05.01/SR08 04.02.05.01/SR09 04.02.05.01/SR20 
04.02.05.01/SR21 04.02.05.02/SR20 04.02.05.02/SR22 
04.02.05.02/SR26 04.02.05.02/SR27 04.02.05.02/SR29 
04.02.05.02/SR31 04.02.05.02/SR32 04.02.05.02/SR33 
04.02.05.02/SR34 04.02.05.02/SR42 04.02.05.02/SR43 
04.02.05.02/SR44 04.02.05.02/SR45 04.02.05.02/SR46 


                               I-30

                     FUNCTION CROSS-REFERENCE


04.02.05.02/SR47 05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 
09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 09.02.10/SR03 
09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 271 <inquire predefined interior representation>:
04.02.05.02/SR21 04.02.05.02/SR22 04.02.05.02/SR23 
04.02.05.02/SR24 04.02.05.02/SR25 04.02.05.02/SR27 
04.02.05.02/SR28 04.02.05.02/SR29 04.02.05.02/SR30 
04.02.05.02/SR31 05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 
09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 09.02.03/SR01 
09.02.03/SR03 11.02/SR02 
 
#F 272 <inquire edge facilities>:
04.02.05.01/SR42 04.02.05.01/SR43 04.02.05.01/SR51 
04.02.05.01/SR52 04.02.05.03/SR19 04.02.05.03/SR21 
04.02.05.03/SR26 04.02.05.03/SR27 04.02.05.03/SR32 
04.02.05.03/SR33 04.02.05.03/SR34 04.02.05.03/SR35 
04.02.05.03/SR36 04.02.05.03/SR37 04.02.05.03/SR42 
04.02.05.03/SR43 04.02.05.03/SR44 05.01.02/SR01 09.02.01/SR01 
09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 
09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 273 <inquire predefined edge representation>:
04.02.05.03/SR20 04.02.05.03/SR21 04.02.05.03/SR22 
04.02.05.03/SR23 04.02.05.03/SR24 04.02.05.03/SR25 
04.02.05.03/SR26 04.02.05.03/SR27 04.02.05.03/SR28 
04.02.05.03/SR29 05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 
09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 09.02.03/SR01 
09.02.03/SR03 11.02/SR02 
 
#F 274 <inquire pattern facilities>:
04.02.05.02/SR28 04.02.05.02/SR34 04.02.05.04/SR11 
04.02.05.04/SR13 04.02.05.04/SR14 05.01.02/SR01 09.02.01/SR01 
09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 
11.02/SR02 
 
#F 275 <inquire predefined pattern representation>:
04.02.05.04/SR12 04.02.05.04/SR13 04.02.05.04/SR15 
04.02.05.04/SR16 04.02.05.04/SR17 04.02.05.04/SR18 05.01.02/SR01 
09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 
09.02.02/SR08 09.02.03/SR03 09.02.03/SR06 09.02.10/SR02 
11.02/SR02 
 
#F 276 <inquire colour model facilities>:
04.03.02.02/SR15 04.03.02.02/SR16 04.03.02.02/SR17 
04.03.02.02/SR18 04.03.02.02/SR19 04.03.02.02/SR20 
04.03.02.02/SR22 04.03.02.02/SR23 04.03.02.02/SR24 
04.03.02.02/SR25 04.03.02.02/SR28 04.03.02.02/SR29 05.01.02/SR01 
09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 
09.02.02/SR08 09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 
11.02/SR02 
 
#F 277 <inquire colour facilities>:
04.02.01.02/SR28 04.02.02.02/SR28 04.02.03.02/SR29 


                               I-31

                     FUNCTION CROSS-REFERENCE


04.02.05.02/SR30 04.02.05.03/SR28 04.02.05.04/SR18 
04.03.02.02/SR01 04.03.02.02/SR02 04.03.02.02/SR03 
04.03.02.02/SR04 04.03.02.02/SR05 04.03.02.02/SR06 
04.03.02.02/SR07 04.03.02.02/SR08 04.03.02.02/SR10 
04.03.02.02/SR11 05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 
09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 11.02/SR02 
 
#F 278 <inquire predefined colour representation>:
04.03.02.02/SR09 04.03.02.02/SR10 04.03.02.02/SR11 
04.03.02.02/SR12 04.03.02.02/SR13 04.03.02.02/SR14 
04.03.02.02/SR15 05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 
09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 09.02.03/SR03 
09.02.03/SR07 09.02.10/SR02 11.02/SR02 
 
#F 279 <inquire list of available generalized drawing primitives 3>:
04.01.08/SR04 05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 
09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 09.02.10/SR03 
09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 280 <inquire list of available generalized drawing primitives>:
04.01.08/SR09 05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 
09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 09.02.10/SR03 
09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 281 <inquire generalized drawing primitive 3>:
04.01.08/SR05 05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 
09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 09.02.02/SR09 
11.02/SR02 
 
#F 282 <inquire generalized drawing primitive>:
04.01.08/SR10 05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 
09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 09.02.02/SR09 
11.02/SR02 
 
#F 283 <inquire list of available generalized structure elements>:
02.02.02/SR11 02.02.02/SR13 05.01.02/SR01 09.02.01/SR01 
09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 
09.02.10/SR03 09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 284 <inquire number of display priorities supported>:
05.01.02/SR01 05.03/SR16 05.03/SR17 05.03/SR18 05.03/SR19 
09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 09.02.02/SR05 
09.02.02/SR08 11.02/SR02 
 
#F 285 <inquire workstation state table lengths>:
04.02.01.02/SR17 04.02.01.02/SR18 04.02.02.02/SR17 
04.02.02.02/SR18 04.02.03.02/SR17 04.02.03.02/SR18 
04.02.05.02/SR18 04.02.05.02/SR19 04.02.05.03/SR17 
04.02.05.03/SR18 04.02.05.04/SR08 04.02.05.04/SR09 
04.02.05.04/SR10 04.03.02.01/SR07 04.03.02.01/SR08 05.01.02/SR01 
06.02.02/SR12 06.02.02/SR13 09.02.01/SR01 09.02.02/SR01 
09.02.02/SR02 09.02.02/SR05 09.02.02/SR08 11.02/SR02 
 
#F 286 <inquire dynamics of structures>:


                               I-32

                     FUNCTION CROSS-REFERENCE


05.01.02/SR01 05.02/SR07 05.02/SR19 05.02/SR20 05.02/SR21 
05.02/SR24 05.02/SR25 05.02/SR26 05.02/SR27 05.02/SR28 05.02/SR29 
05.02/SR31 05.02/SR32 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR05 09.02.02/SR08 11.02/SR02 
 
#F 287 <inquire number of available logical input devices>:
05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR07 11.02/SR02 
 
#F 288 <inquire default locator device data 3>:
05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR07 09.02.10/SR02 09.02.10/SR03 11.02/SR02 
 
#F 289 <inquire default locator device data>:
05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR07 09.02.10/SR02 09.02.10/SR03 11.02/SR02 
 
#F 290 <inquire default stroke device data 3>:
05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR07 09.02.10/SR02 09.02.10/SR03 11.02/SR02 
 
#F 291 <inquire default stroke device data>:
05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR07 09.02.10/SR02 09.02.10/SR03 11.02/SR02 
 
#F 292 <inquire default valuator device data 3>:
05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR07 09.02.10/SR02 09.02.10/SR03 11.02/SR02 
 
#F 293 <inquire default valuator device data>:
05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR07 09.02.10/SR02 09.02.10/SR03 11.02/SR02 
 
#F 294 <inquire default choice device data 3>:
05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR07 09.02.10/SR02 09.02.10/SR03 11.02/SR02 
 
#F 295 <inquire default choice device data>:
05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR07 09.02.10/SR02 09.02.10/SR03 11.02/SR02 
 
#F 296 <inquire default pick device data 3>:
05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR07 09.02.10/SR02 09.02.10/SR03 11.02/SR02 
 
#F 297 <inquire default pick device data>:
05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR07 09.02.10/SR02 09.02.10/SR03 11.02/SR02 
 
#F 298 <inquire default string device data 3>:
05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR07 09.02.10/SR02 09.02.10/SR03 11.02/SR02 
 
#F 299 <inquire default string device data>:


                               I-33

                     FUNCTION CROSS-REFERENCE


05.01.02/SR01 09.02.01/SR01 09.02.02/SR01 09.02.02/SR02 
09.02.02/SR07 09.02.10/SR02 09.02.10/SR03 11.02/SR02 
 
#F 300 <inquire set of workstations to which posted>:
05.03/SR13 09.02.01/SR01 09.02.05/SR01 09.02.10/SR03 
09.02.11/SR01 09.02.11/SR02 11.02/SR02 
 
#F 301 <inquire open structure>:
02.02.01/SR05 02.02.01/SR06 09.02.01/SR01 11.02/SR02 
 
#F 302 <inquire element pointer>:
02.02.01/SR08 09.02.01/SR03 11.02/SR02 
 
#F 303 <inquire current element type and size>:
02.02.02/SR02 02.02.02/SR05 02.02.02/SR09 02.03.01/SR01 
02.03.01/SR02 04.01.01/SR02 04.01.01/SR05 04.01.02/SR02 
04.01.02/SR05 04.01.03/SR02 04.01.03/SR05 04.01.04/SR02 
04.01.04/SR05 04.01.05/SR02 04.01.05/SR05 04.01.06/SR02 
04.01.06/SR05 04.01.07/SR02 04.01.07/SR07 04.01.08/SR02 
04.01.08/SR07 04.02.01.01/SR01 04.02.01.02/SR01 04.02.02.01/SR01 
04.02.02.02/SR01 04.02.03.01/SR09 04.02.03.02/SR01 
04.02.04.01/SR03 04.02.05.01/SR01 04.02.05.02/SR01 
04.02.05.03/SR01 04.03.01/SR02 04.03.03/SR02 04.03.04.01/SR02 
04.03.04.01/SR05 06.01.02/SR02 06.01.02/SR05 06.01.02/SR10 
06.01.02/SR13 06.01.02/SR24 06.01.02/SR27 06.01.02/SR30 
06.01.02/SR33 06.02.02/SR02 09.02.01/SR03 11.02/SR02 
 
#F 304 <inquire current element content>:
02.02.02/SR03 02.02.02/SR06 02.02.02/SR10 02.03.01/SR03 
04.01.01/SR03 04.01.01/SR06 04.01.02/SR03 04.01.02/SR06 
04.01.03/SR03 04.01.03/SR06 04.01.04/SR03 04.01.04/SR06 
04.01.05/SR03 04.01.05/SR06 04.01.06/SR03 04.01.06/SR06 
04.01.07/SR03 04.01.07/SR08 04.01.08/SR03 04.01.08/SR08 
04.02.01.01/SR02 04.02.01.02/SR02 04.02.02.01/SR02 
04.02.02.02/SR02 04.02.03.01/SR10 04.02.03.02/SR02 
04.02.04.01/SR04 04.02.05.01/SR02 04.02.05.02/SR02 
04.02.05.03/SR02 04.03.01/SR03 04.03.03/SR03 04.03.04.01/SR03 
04.03.04.01/SR06 06.01.02/SR03 06.01.02/SR06 06.01.02/SR11 
06.01.02/SR14 06.01.02/SR25 06.01.02/SR28 06.01.02/SR31 
06.01.02/SR34 06.02.02/SR03 09.02.01/SR03 09.02.10/SR02 
11.02/SR02 
 
#F 305 <inquire element type and size>:
02.03.01/SR04 02.03.01/SR05 09.02.01/SR01 09.02.05/SR01 
09.02.05/SR02 11.02/SR02 
 
#F 306 <inquire element content>:
02.03.01/SR06 09.02.01/SR01 09.02.05/SR01 09.02.05/SR02 
09.02.10/SR02 11.02/SR02 
 
#F 307 <inquire structure status>:
02.02.01/SR07 09.02.01/SR01 11.02/SR02 
 
#F 308 <inquire paths to ancestors>:


                               I-34

                     FUNCTION CROSS-REFERENCE


02.01/SR03 02.01/SR05 02.01/SR06 02.01/SR07 02.01/SR09 02.01/SR10 
02.01/SR13 09.02.01/SR01 09.02.05/SR01 09.02.05/SR05 
09.02.10/SR01 09.02.10/SR02 09.02.10/SR03 09.02.11/SR03 
11.02/SR02 
 
#F 309 <inquire paths to descendants>:
02.01/SR04 02.01/SR05 02.01/SR06 02.01/SR08 02.01/SR11 02.01/SR12 
02.01/SR14 09.02.01/SR01 09.02.05/SR01 09.02.05/SR05 
09.02.10/SR01 09.02.10/SR02 09.02.10/SR03 09.02.11/SR03 
11.02/SR02 
 
#F 310 <element search>:
02.03.02/SR01 02.03.02/SR02 02.03.02/SR03 02.03.02/SR04 
02.03.02/SR05 02.03.02/SR06 02.03.02/SR07 02.03.02/SR08 
02.03.02/SR09 09.02.01/SR01 09.02.05/SR01 09.02.10/SR01 
09.02.10/SR02 09.02.10/SR04 09.02.11/SR03 11.02/SR02 
 
#F 311 <incremental spatial search 3>:
02.03.03/SR01 02.03.03/SR02 02.03.03/SR03 02.03.03/SR04 
02.03.03/SR05 02.03.03/SR06 02.03.03/SR07 02.03.03/SR08 
02.03.03/SR09 02.03.03/SR10 02.03.03/SR11 02.03.03/SR12 
02.03.03/SR13 02.03.03/SR14 02.03.03/SR15 02.03.03/SR16 
02.03.03/SR17 02.03.03/SR18 02.03.03/SR19 02.03.03/SR20 
02.03.03/SR22 06.01.02/SR19 06.01.02/SR50 09.02.01/SR01 
09.02.05/SR03 09.02.05/SR04 09.02.10/SR01 09.02.10/SR02 
09.02.10/SR04 09.02.10/SR05 09.02.11/SR01 09.02.11/SR02 
09.02.11/SR03 11.02/SR02 
 
#F 312 <incremental spatial search>:
02.03.03/SR01 02.03.03/SR02 02.03.03/SR03 02.03.03/SR04 
02.03.03/SR05 02.03.03/SR06 02.03.03/SR07 02.03.03/SR08 
02.03.03/SR09 02.03.03/SR10 02.03.03/SR11 02.03.03/SR12 
02.03.03/SR13 02.03.03/SR14 02.03.03/SR15 02.03.03/SR16 
02.03.03/SR17 02.03.03/SR18 02.03.03/SR19 02.03.03/SR20 
02.03.03/SR22 06.01.02/SR19 06.01.02/SR50 09.02.01/SR01 
09.02.05/SR03 09.02.05/SR04 09.02.10/SR01 09.02.10/SR02 
09.02.10/SR04 09.02.10/SR05 09.02.11/SR01 09.02.11/SR02 
09.02.11/SR03 11.02/SR02 
 
#F 313 <inquire input queue overflow>:
09.02.01/SR02 11.02/SR02 
 
#F 314 <inquire error handling mode>:
09.01/SR03 09.02.01/SR01 11.02/SR02 
 
#F 315 <emergency close phigs>:
09.01/SR11 11.02/SR02 
 
#F 316 <error handling>:
09.01/SR04 09.01/SR05 09.01/SR06 09.01/SR07 09.01/SR08 09.01/SR10 
11.02/SR02 
 
#F 317 <error logging>:
09.01/SR08 09.01/SR09 11.02/SR02 


                               I-35

                     FUNCTION CROSS-REFERENCE


 
#F 318 <set error handling mode>:
09.01/SR01 09.01.01.01/SR02 09.01.01.02/SR02 09.01.10.01/SR01 
09.01.10.02/SR01 09.01.11.01/SR04 09.01.11.02/SR01 11.02/SR02 
 
#F 319 <escape>:
09.01.01.01/SR02 09.01.01.02/SR02 11.02/SR02 
 
#F 320 <pack data record>:
11.01/SR01 
 
#F 321 <unpack data record>:
11.01/SR02 
 
#F 322 <create store>:
11.02/SR02 11.02/SR13 
 
#F 323 <delete store>:
11.02/SR02 11.02/SR14 
 
#F 324 <set error handler>:
09.01.11.01/SR01 09.01.11.01/SR02 09.01.11.01/SR03 11.02/SR02 


































                               I-36












                            APPENDIX J

                  DATA STRUCTURE CROSS-REFERENCE



 
#D 1.1:
01/SR01 01/SR02 01/SR03 09.01/SR11 09.01.01.01/SR01 
09.01.01.01/SR02 09.01.01.01/SR03 09.01.01.01/SR04 
09.01.01.01/SR05 09.01.01.01/SR06 09.01.01.01/SR07 
09.01.01.02/SR01 09.01.01.02/SR02 09.01.01.02/SR03 
09.01.01.02/SR04 09.01.01.02/SR05 09.01.01.02/SR06 
09.01.01.02/SR07 09.02.01/SR01 09.02.01/SR02 09.02.01/SR03 
09.02.01/SR04 
 
#D 1.2:
05.01.01/SR02 05.01.01/SR03 05.01.01/SR04 05.01.01/SR05 
09.01/SR11 09.01.01.01/SR01 09.01.01.01/SR03 09.01.01.01/SR04 
09.01.01.02/SR01 09.01.01.02/SR03 09.01.01.02/SR04 
09.01.02.01/SR01 09.01.02.01/SR02 09.01.02.01/SR03 
09.01.02.01/SR04 09.01.02.01/SR05 09.01.02.01/SR12 
09.01.02.02/SR01 09.01.02.02/SR02 09.01.02.02/SR03 
09.01.02.02/SR04 09.01.02.02/SR05 09.01.02.02/SR12 09.02.01/SR02 
 
#D 1.3:
02.01.03.01/SR01 02.01.03.01/SR03 02.01.03.03/SR01 
02.01.03.03/SR03 02.02.01/SR09 09.01/SR11 09.01.01.01/SR01 
09.01.01.01/SR04 09.01.01.01/SR05 09.01.01.01/SR06 
09.01.01.02/SR01 09.01.01.02/SR04 09.01.01.02/SR05 
09.01.01.02/SR06 09.02.01/SR03 
 
#D 1.4:
03.01/SR03 03.01/SR05 03.01/SR08 03.01/SR10 09.01/SR11 
09.01.01.01/SR01 09.01.01.01/SR04 09.01.01.01/SR07 
09.01.01.02/SR01 09.01.01.02/SR04 09.01.01.02/SR07 09.02.01/SR04 
 
#D 2.1:
05.01.02/SR07 09.02.02/SR01 09.02.02/SR02 
 
#D 2.2:
02.02.02/SR11 04.02.03.01/SR19 04.02.04.01/SR12 05.01.02/SR05 
05.01.02/SR06 09.01.02.01/SR02 09.01.02.02/SR02 09.02.02/SR01 
09.02.02/SR02 
 


                                J-1

                  DATA STRUCTURE CROSS-REFERENCE


#D 2.2.1:
05.01.01/SR08 05.01.02/SR01 05.01.02/SR02 05.01.02/SR04 
09.02.02/SR02 
 
#D 2.3:
05.01.01/SR09 05.01.01/SR10 05.01.01/SR11 09.01.02.01/SR12 
09.01.02.02/SR12 
 
#D 2.4:
03.01/SR01 03.01/SR02 09.01.09.01/SR02 09.01.09.02/SR02 
 
#D 2.5:
04.03.04.01/SR07 04.03.04.01/SR08 04.03.04.01/SR09 
04.03.04.01/SR10 04.03.04.02/SR12 04.03.04.02/SR13 
 
#D 2.6:
04.01.03/SR07 04.01.03/SR08 
 
#D 2.7:
04.01.03/SR07 04.01.03/SR08 04.02.03.01/SR14 04.02.03.02/SR41 
04.02.04.01/SR07 04.02.04.02/SR14 
 
#D 2.8:
02.03.03/SR21 02.03.03/SR22 
 
#D 2.9:
02.03.03/SR21 02.03.03/SR22 
 
#D 2.10.1:
04.02.01.02/SR08 
 
#D 2.10.2:
04.02.01.01/SR11 
 
#D 2.10.3:
04.02.01.01/SR17 
 
#D 2.10.4:
04.02.01.01/SR23 
 
#D 2.10.5:
04.03.01/SR10 
 
#D 2.10.6:
04.03.01/SR10 
 
#D 2.10.7:
04.03.01/SR10 
 
#D 2.11.1:
04.02.02.02/SR08 
 
#D 2.11.2:
04.02.02.01/SR11 


                                J-2

                  DATA STRUCTURE CROSS-REFERENCE


 
#D 2.11.3:
04.02.02.01/SR18 
 
#D 2.11.4:
04.02.02.01/SR24 
 
#D 2.11.5:
04.03.01/SR10 
 
#D 2.11.6:
04.03.01/SR10 
 
#D 2.11.7:
04.03.01/SR10 
 
#D 2.12.1:
04.02.03.02/SR08 04.02.04.02/SR06 
 
#D 2.12.2:
04.02.03.01/SR23 04.02.04.01/SR16 
 
#D 2.12.3:
04.02.03.01/SR32 04.02.04.01/SR24 
 
#D 2.12.4:
04.02.03.01/SR38 04.02.04.01/SR30 
 
#D 2.12.5:
04.02.03.01/SR44 04.02.04.01/SR35 
 
#D 2.12.6:
04.02.03.01/SR50 04.02.04.01/SR40 
 
#D 2.12.7:
04.03.01/SR10 
 
#D 2.12.8:
04.03.01/SR10 
 
#D 2.12.9:
04.03.01/SR10 
 
#D 2.12.10:
04.03.01/SR10 
 
#D 2.12.11:
04.03.01/SR10 
 
#D 2.12.12:
04.02.03.01/SR62 
 
#D 2.12.13:
04.02.03.01/SR82 


                                J-3

                  DATA STRUCTURE CROSS-REFERENCE


 
#D 2.12.16:
04.02.03.01/SR70 
 
#D 2.12.17:
04.02.03.01/SR77 
 
#D 2.12.18:
04.02.03.01/SR77 
 
#D 2.13.1:
04.02.04.01/SR53 
 
#D 2.13.2:
04.02.04.01/SR73 
 
#D 2.13.5:
04.02.04.01/SR61 
 
#D 2.13.6:
04.02.04.01/SR68 
 
#D 2.13.7:
04.02.04.01/SR68 
 
#D 2.13.8:
04.02.04.01/SR83 
 
#D 2.14.1:
04.02.05.02/SR09 
 
#D 2.14.2:
04.02.05.01/SR16 
 
#D 2.14.3:
04.02.05.01/SR24 
 
#D 2.14.4:
04.02.05.01/SR30 
 
#D 2.14.5:
04.03.01/SR10 
 
#D 2.14.6:
04.03.01/SR10 
 
#D 2.14.7:
04.03.01/SR10 
 
#D 2.15.1:
04.02.05.03/SR08 
 
#D 2.15.2:
04.02.05.01/SR38 


                                J-4

                  DATA STRUCTURE CROSS-REFERENCE


 
#D 2.15.3:
04.02.05.01/SR47 
 
#D 2.15.4:
04.02.05.01/SR53 
 
#D 2.15.5:
04.02.05.01/SR59 
 
#D 2.15.6:
04.03.01/SR10 
 
#D 2.15.7:
04.03.01/SR10 
 
#D 2.15.8:
04.03.01/SR10 
 
#D 2.15.9:
04.03.01/SR10 
 
#D 2.16.1:
04.02.05.01/SR64 
 
#D 2.16.2:
04.02.05.01/SR80 
 
#D 2.16.3:
04.02.05.01/SR82 
 
#D 2.17:
02.02.02/SR12 
 
#D 2.18:
02.02.02/SR11 02.02.02/SR12 
 
#D 2.22:
04.03.04.01/SR11 
 
#D 2.23.1:
06.01.02/SR19 
 
#D 2.23.2:
06.01.02/SR19 
 
#D 2.23.3:
06.01.02/SR50 
 
#D 2.23.4:
06.01.02/SR54 
 
#D 2.23.5:
06.01.02/SR35 06.01.02/SR37 06.01.02/SR47 


                                J-5

                  DATA STRUCTURE CROSS-REFERENCE


 
#D 2.23.6:
06.01.02/SR35 06.01.02/SR36 
 
#D 2.23.7:
06.01.02/SR35 06.01.02/SR36 06.01.02/SR44 06.01.02/SR45 
06.01.02/SR46 
 
#D 3:
02.03.03/SR02 02.03.03/SR03 02.03.03/SR04 02.03.03/SR05 
02.03.03/SR06 
 
#D 3.1:
04.03.01/SR08 04.03.01/SR09 
 
#D 3.1.1:
04.02.01.02/SR03 04.02.01.02/SR05 04.02.01.02/SR06 
04.02.01.02/SR07 04.02.01.02/SR08 04.02.01.02/SR09 
04.02.01.02/SR35 04.02.01.02/SR43 04.02.01.02/SR47 
 
#D 3.1.2:
04.02.01.01/SR03 04.02.01.01/SR05 04.02.01.01/SR06 
04.02.01.01/SR07 04.02.01.01/SR11 04.02.01.01/SR12 
 
#D 3.1.3:
04.02.01.01/SR03 04.02.01.01/SR14 04.02.01.01/SR15 
04.02.01.01/SR16 04.02.01.01/SR17 04.02.01.01/SR18 
 
#D 3.1.4:
04.02.01.01/SR03 04.02.01.01/SR20 04.02.01.01/SR21 
04.02.01.01/SR22 04.02.01.01/SR23 04.02.01.01/SR24 
 
#D 3.1.5:
04.02.01.01/SR06 04.02.01.01/SR07 04.02.01.02/SR35 04.03.01/SR06 
04.03.01/SR07 04.03.01/SR10 04.03.01/SR11 
 
#D 3.1.6:
04.02.01.01/SR15 04.02.01.01/SR16 04.02.01.02/SR43 04.03.01/SR06 
04.03.01/SR07 04.03.01/SR10 04.03.01/SR11 
 
#D 3.1.7:
04.02.01.01/SR21 04.02.01.01/SR22 04.02.01.02/SR47 04.03.01/SR06 
04.03.01/SR07 04.03.01/SR10 04.03.01/SR11 
 
#D 3.2:
04.03.01/SR08 04.03.01/SR09 
 
#D 3.2.1:
04.02.02.02/SR03 04.02.02.02/SR05 04.02.02.02/SR06 
04.02.02.02/SR07 04.02.02.02/SR08 04.02.02.02/SR09 
04.02.02.02/SR35 04.02.02.02/SR43 04.02.02.02/SR48 
 
#D 3.2.2:
04.02.02.01/SR03 04.02.02.01/SR05 04.02.02.01/SR06 


                                J-6

                  DATA STRUCTURE CROSS-REFERENCE


04.02.02.01/SR07 04.02.02.01/SR11 04.02.02.01/SR12 
 
#D 3.2.3:
04.02.02.01/SR03 04.02.02.01/SR14 04.02.02.01/SR15 
04.02.02.01/SR16 04.02.02.01/SR18 04.02.02.01/SR19 
 
#D 3.2.4:
04.02.02.01/SR03 04.02.02.01/SR21 04.02.02.01/SR22 
04.02.02.01/SR23 04.02.02.01/SR24 04.02.02.01/SR25 
 
#D 3.2.5:
04.02.02.01/SR06 04.02.02.01/SR07 04.02.02.02/SR35 04.03.01/SR06 
04.03.01/SR07 04.03.01/SR10 04.03.01/SR11 
 
#D 3.2.6:
04.02.02.01/SR15 04.02.02.01/SR16 04.02.02.02/SR43 04.03.01/SR06 
04.03.01/SR07 04.03.01/SR10 04.03.01/SR11 
 
#D 3.2.7:
04.02.02.01/SR22 04.02.02.01/SR23 04.02.02.02/SR48 04.03.01/SR06 
04.03.01/SR07 04.03.01/SR10 04.03.01/SR11 
 
#D 3.3:
04.03.01/SR08 04.03.01/SR09 
 
#D 3.3.1:
04.02.03.02/SR03 04.02.03.02/SR05 04.02.03.02/SR06 
04.02.03.02/SR07 04.02.03.02/SR08 04.02.03.02/SR09 
04.02.03.02/SR38 04.02.03.02/SR39 04.02.03.02/SR57 
04.02.03.02/SR61 04.02.03.02/SR64 04.02.04.02/SR01 
04.02.04.02/SR03 04.02.04.02/SR04 04.02.04.02/SR05 
04.02.04.02/SR06 04.02.04.02/SR07 04.02.04.02/SR11 
04.02.04.02/SR12 04.02.04.02/SR24 04.02.04.02/SR27 
04.02.04.02/SR29 
 
#D 3.3.2:
04.02.03.01/SR11 04.02.03.01/SR13 04.02.03.01/SR21 
04.02.03.01/SR22 04.02.03.01/SR23 04.02.03.01/SR24 
04.02.03.01/SR28 04.02.04.01/SR05 04.02.04.01/SR06 
04.02.04.01/SR14 04.02.04.01/SR15 04.02.04.01/SR16 
04.02.04.01/SR17 04.02.04.01/SR20 
 
#D 3.3.3:
04.02.03.01/SR11 04.02.03.01/SR21 04.02.03.01/SR22 
04.02.03.01/SR27 04.02.03.01/SR28 04.02.03.01/SR32 
04.02.03.01/SR33 04.02.04.01/SR05 04.02.04.01/SR14 
04.02.04.01/SR15 04.02.04.01/SR19 04.02.04.01/SR20 
04.02.04.01/SR24 04.02.04.01/SR25 
 
#D 3.3.4:
04.02.03.01/SR11 04.02.03.01/SR35 04.02.03.01/SR37 
04.02.03.01/SR38 04.02.03.01/SR39 04.02.04.01/SR05 
04.02.04.01/SR26 04.02.04.01/SR29 04.02.04.01/SR30 
04.02.04.01/SR31 


                                J-7

                  DATA STRUCTURE CROSS-REFERENCE


 
#D 3.3.5:
04.02.03.01/SR11 04.02.03.01/SR41 04.02.03.01/SR43 
04.02.03.01/SR44 04.02.03.01/SR45 04.02.04.01/SR05 
04.02.04.01/SR32 04.02.04.01/SR34 04.02.04.01/SR35 
04.02.04.01/SR36 
 
#D 3.3.6:
04.02.03.01/SR11 04.02.03.01/SR47 04.02.03.01/SR48 
04.02.03.01/SR49 04.02.03.01/SR50 04.02.03.01/SR51 
04.02.04.01/SR05 04.02.04.01/SR37 04.02.04.01/SR38 
04.02.04.01/SR39 04.02.04.01/SR40 04.02.04.01/SR41 
 
#D 3.3.7:
04.02.03.01/SR21 04.02.03.01/SR22 04.02.03.01/SR28 
04.02.03.02/SR38 04.02.04.01/SR14 04.02.04.01/SR15 
04.02.04.01/SR20 04.02.04.02/SR11 04.03.01/SR06 04.03.01/SR07 
04.03.01/SR10 04.03.01/SR11 
 
#D 3.3.8:
04.02.03.01/SR21 04.02.03.01/SR22 04.02.03.01/SR28 
04.02.03.02/SR39 04.02.04.01/SR14 04.02.04.01/SR15 
04.02.04.01/SR20 04.02.04.02/SR12 04.03.01/SR06 04.03.01/SR07 
04.03.01/SR10 04.03.01/SR11 
 
#D 3.3.9:
04.02.03.01/SR37 04.02.03.02/SR57 04.02.04.01/SR29 
04.02.04.02/SR24 04.03.01/SR06 04.03.01/SR07 04.03.01/SR10 
04.03.01/SR11 
 
#D 3.3.10:
04.02.03.01/SR43 04.02.03.02/SR61 04.02.04.01/SR34 
04.02.04.02/SR27 04.03.01/SR06 04.03.01/SR07 04.03.01/SR10 
04.03.01/SR11 
 
#D 3.3.11:
04.02.03.01/SR48 04.02.03.01/SR49 04.02.03.02/SR64 
04.02.04.01/SR38 04.02.04.01/SR39 04.02.04.02/SR29 04.03.01/SR06 
04.03.01/SR07 04.03.01/SR10 04.03.01/SR11 
 
#D 3.3.12:
02.03.03/SR15 04.02.03.01/SR03 04.02.03.01/SR11 04.02.03.01/SR58 
04.02.03.01/SR61 04.02.03.01/SR62 04.02.03.01/SR63 
 
#D 3.3.13:
02.03.03/SR15 04.02.03.01/SR11 04.02.03.01/SR80 04.02.03.01/SR82 
04.02.03.01/SR83 
 
#D 3.3.14:
02.03.03/SR15 04.02.03.01/SR06 
 
#D 3.3.15:
02.03.03/SR15 
 


                                J-8

                  DATA STRUCTURE CROSS-REFERENCE


#D 3.3.16:
02.03.03/SR15 04.02.03.01/SR11 04.02.03.01/SR66 04.02.03.01/SR70 
04.02.03.01/SR71 
 
#D 3.3.17:
02.03.03/SR15 04.02.03.01/SR11 04.02.03.01/SR74 04.02.03.01/SR77 
04.02.03.01/SR78 
 
#D 3.3.18:
02.03.03/SR15 04.02.03.01/SR11 04.02.03.01/SR74 04.02.03.01/SR77 
04.02.03.01/SR78 
 
#D 3.4.1:
04.02.04.01/SR05 04.02.04.01/SR48 04.02.04.01/SR51 
04.02.04.01/SR52 04.02.04.01/SR53 04.02.04.01/SR54 
 
#D 3.4.2:
04.02.04.01/SR05 04.02.04.01/SR71 04.02.04.01/SR73 
04.02.04.01/SR74 
 
#D 3.4.5:
04.02.04.01/SR05 04.02.04.01/SR57 04.02.04.01/SR61 
04.02.04.01/SR62 
 
#D 3.4.6:
04.02.04.01/SR05 04.02.04.01/SR65 04.02.04.01/SR68 
04.02.04.01/SR69 
 
#D 3.4.7:
04.02.04.01/SR05 04.02.04.01/SR65 04.02.04.01/SR68 
04.02.04.01/SR69 
 
#D 3.4.8:
04.02.04.01/SR05 04.02.04.01/SR76 04.02.04.01/SR78 
04.02.04.01/SR79 04.02.04.01/SR83 04.02.04.01/SR84 
 
#D 3.5:
04.03.01/SR08 04.03.01/SR09 
 
#D 3.5.1:
04.02.05.02/SR03 04.02.05.02/SR04 04.02.05.02/SR06 
04.02.05.02/SR07 04.02.05.02/SR08 04.02.05.02/SR09 
04.02.05.02/SR10 04.02.05.02/SR35 04.02.05.02/SR39 
04.02.05.02/SR51 
 
#D 3.5.2:
04.02.05.01/SR03 04.02.05.01/SR04 04.02.05.01/SR07 
04.02.05.01/SR08 04.02.05.01/SR09 04.02.05.01/SR10 
04.02.05.01/SR11 04.02.05.01/SR12 04.02.05.01/SR13 
04.02.05.01/SR14 04.02.05.01/SR15 04.02.05.01/SR16 
04.02.05.01/SR17 
 
#D 3.5.3:
04.02.05.01/SR03 04.02.05.01/SR04 04.02.05.01/SR14 


                                J-9

                  DATA STRUCTURE CROSS-REFERENCE


04.02.05.01/SR15 04.02.05.01/SR19 04.02.05.01/SR20 
04.02.05.01/SR21 04.02.05.01/SR24 04.02.05.01/SR25 
 
#D 3.5.4:
04.02.05.01/SR03 04.02.05.01/SR04 04.02.05.01/SR10 
04.02.05.01/SR13 04.02.05.01/SR14 04.02.05.01/SR27 
04.02.05.01/SR28 04.02.05.01/SR29 04.02.05.01/SR30 
04.02.05.01/SR31 
 
#D 3.5.5:
04.02.05.01/SR08 04.02.05.01/SR09 04.02.05.02/SR35 04.03.01/SR06 
04.03.01/SR07 04.03.01/SR10 04.03.01/SR11 
 
#D 3.5.6:
04.02.05.01/SR14 04.02.05.01/SR15 04.02.05.01/SR20 
04.02.05.01/SR21 04.02.05.02/SR39 04.03.01/SR06 04.03.01/SR07 
04.03.01/SR10 04.03.01/SR11 
 
#D 3.5.7:
04.02.05.01/SR10 04.02.05.01/SR13 04.02.05.01/SR14 
04.02.05.01/SR28 04.02.05.01/SR29 04.02.05.02/SR51 04.03.01/SR06 
04.03.01/SR07 04.03.01/SR10 04.03.01/SR11 
 
#D 3.6:
04.03.01/SR08 04.03.01/SR09 
 
#D 3.6.1:
04.02.05.03/SR03 04.02.05.03/SR05 04.02.05.03/SR06 
04.02.05.03/SR07 04.02.05.03/SR08 04.02.05.03/SR09 
04.02.05.03/SR30 04.02.05.03/SR38 04.02.05.03/SR46 
04.02.05.03/SR50 
 
#D 3.6.2:
04.02.05.01/SR04 04.02.05.01/SR34 04.02.05.01/SR35 
04.02.05.01/SR36 04.02.05.01/SR38 04.02.05.01/SR39 
 
#D 3.6.3:
04.02.05.01/SR04 04.02.05.01/SR41 04.02.05.01/SR42 
04.02.05.01/SR43 04.02.05.01/SR47 04.02.05.01/SR48 
 
#D 3.6.4:
04.02.05.01/SR04 04.02.05.01/SR50 04.02.05.01/SR51 
04.02.05.01/SR52 04.02.05.01/SR53 04.02.05.01/SR54 
 
#D 3.6.5:
04.02.05.01/SR04 04.02.05.01/SR56 04.02.05.01/SR57 
04.02.05.01/SR58 04.02.05.01/SR59 04.02.05.01/SR60 
 
#D 3.6.6:
04.02.05.01/SR35 04.02.05.03/SR30 04.03.01/SR06 04.03.01/SR07 
04.03.01/SR10 04.03.01/SR11 
 
#D 3.6.7:
04.02.05.01/SR42 04.02.05.01/SR43 04.02.05.03/SR38 04.03.01/SR06 


                               J-10

                  DATA STRUCTURE CROSS-REFERENCE


04.03.01/SR07 04.03.01/SR10 04.03.01/SR11 
 
#D 3.6.8:
04.02.05.01/SR51 04.02.05.01/SR52 04.02.05.03/SR46 04.03.01/SR06 
04.03.01/SR07 04.03.01/SR10 04.03.01/SR11 
 
#D 3.6.9:
04.02.05.01/SR57 04.02.05.01/SR58 04.02.05.03/SR50 04.03.01/SR06 
04.03.01/SR07 04.03.01/SR10 04.03.01/SR11 
 
#D 3.7:
04.02.05.01/SR79 
 
#D 3.7.1:
04.02.05.01/SR03 04.02.05.01/SR04 04.02.05.01/SR62 
04.02.05.01/SR63 04.02.05.01/SR64 04.02.05.01/SR65 
04.02.05.01/SR71 04.02.05.01/SR73 04.02.05.01/SR74 
04.02.05.01/SR76 04.02.05.01/SR77 
 
#D 3.7.2:
04.02.05.01/SR03 04.02.05.01/SR04 04.02.05.01/SR68 
04.02.05.01/SR69 04.02.05.01/SR70 04.02.05.01/SR71 
04.02.05.01/SR72 04.02.05.01/SR73 04.02.05.01/SR74 
04.02.05.01/SR76 04.02.05.01/SR77 04.02.05.01/SR80 
04.02.05.01/SR81 
 
#D 3.7.3:
04.02.05.01/SR03 04.02.05.01/SR04 04.02.05.01/SR68 
04.02.05.01/SR69 04.02.05.01/SR70 04.02.05.01/SR71 
04.02.05.01/SR73 04.02.05.01/SR74 04.02.05.01/SR76 
04.02.05.01/SR77 04.02.05.01/SR82 04.02.05.01/SR83 
 
#D 3.9:
04.01/SR01 
 
#D 3.11:
02.03.03/SR06 02.03.03/SR18 02.03.03/SR19 02.03.03/SR20 
04.03.04.01/SR11 04.03.04.01/SR12 04.03.04.01/SR13 
04.03.04.01/SR14 04.03.04.01/SR15 04.03.04.01/SR16 
04.03.04.02/SR04 04.03.04.02/SR08 04.03.04.02/SR09 
 
#D 3.12:
04.02.05.01/SR79 
 
#D 3.12.1:
02.03.03/SR10 04.01/SR01 06.01.02/SR15 06.01.02/SR16 
06.01.02/SR17 06.01.02/SR18 06.01.02/SR19 06.01.02/SR20 
06.01.02/SR21 06.01.02/SR42 06.01.02/SR57 
 
#D 3.12.2:
02.03.03/SR10 04.01/SR01 06.01.02/SR08 06.01.02/SR16 
06.01.02/SR17 06.01.02/SR18 06.01.02/SR19 06.01.02/SR20 
06.01.02/SR22 06.01.02/SR42 06.01.02/SR57 
 


                               J-11

                  DATA STRUCTURE CROSS-REFERENCE


#D 3.12.3:
02.03.03/SR10 06.01.02/SR43 06.01.02/SR44 06.01.02/SR45 
06.01.02/SR46 06.01.02/SR47 06.01.02/SR48 06.01.02/SR50 
06.01.02/SR51 06.01.02/SR56 06.01.02/SR57 06.01.02/SR59 
06.01.02/SR60 06.01.02/SR61 06.01.02/SR62 06.01.02/SR63 
06.01.02/SR64 
 
#D 3.12.4:
06.01.02/SR53 06.01.02/SR54 06.01.02/SR55 06.01.02/SR58 
06.01.02/SR59 06.01.02/SR60 06.01.02/SR61 06.01.02/SR62 
06.01.02/SR63 06.01.02/SR64 
 
#D 4.1:
05.01.01/SR01 05.01.01/SR04 05.01.01/SR05 05.01.01/SR06 
05.01.01/SR07 05.01.01/SR11 05.01.01/SR12 09.01/SR11 
09.02.02/SR03 
 
#D 4.1.1:
09.01.02.01/SR03 09.01.02.02/SR03 09.02.02/SR03 
 
#D 4.2:
02.01.02.01/SR05 02.01.02.02/SR01 02.01.02.02/SR02 
02.01.02.02/SR05 02.01.02.02/SR06 02.01.02.03/SR02 
02.01.03.01/SR01 02.01.03.01/SR03 02.01.03.03/SR01 
02.01.03.03/SR03 02.02.01/SR01 02.02.01/SR04 02.02.01/SR05 
02.02.01/SR06 02.02.01/SR09 02.03.01/SR01 02.03.01/SR02 
02.03.01/SR03 09.01/SR11 
 
#D 4.3:
02.01.02.01/SR06 02.01.02.01/SR07 02.01.02.02/SR11 
02.01.02.02/SR12 02.01.03.01/SR04 02.01.03.01/SR05 
02.01.03.01/SR06 02.01.03.03/SR04 02.01.03.03/SR05 
02.01.03.03/SR06 02.02.01/SR02 02.02.01/SR03 02.02.01/SR08 
02.02.03/SR02 02.02.03/SR03 02.02.03/SR04 02.02.03/SR06 
02.02.03/SR07 02.02.03/SR08 02.02.03/SR09 02.02.03/SR10 
02.02.04/SR01 02.02.04/SR02 02.02.04/SR06 02.02.04/SR07 
02.02.04/SR11 02.02.05/SR01 02.02.05/SR02 02.02.05/SR03 
02.03.01/SR01 02.03.01/SR02 02.03.01/SR03 03.03/SR18 
09.01.05.01/SR03 09.01.05.01/SR04 09.01.05.02/SR03 
09.01.05.02/SR04 
 
#D 4.4:
02.02.03/SR01 02.02.03/SR02 02.02.03/SR03 02.02.03/SR04 
02.02.03/SR05 02.02.03/SR06 02.02.03/SR11 
 
#D 4.5:
02.01.01/SR01 02.01.01/SR02 02.01.01/SR03 02.01.01/SR04 
02.01.01/SR05 02.01.01/SR06 02.01.01/SR07 02.01.01/SR08 
02.01.01/SR10 02.01.02.01/SR01 02.01.02.01/SR03 02.01.02.01/SR05 
02.01.02.02/SR01 02.01.02.02/SR02 02.01.02.02/SR03 
02.01.02.02/SR04 02.01.02.02/SR05 02.01.02.02/SR06 
02.01.02.02/SR07 02.01.02.02/SR08 02.01.02.03/SR01 
02.01.02.03/SR02 02.02.01/SR07 03.04/SR02 03.04/SR03 03.04/SR04 
09.01.05.01/SR01 09.01.05.02/SR01 09.02.05/SR03 09.02.05/SR04 


                               J-12

                  DATA STRUCTURE CROSS-REFERENCE


09.02.05/SR05 
 
#D 4.5.1:
02.02.01/SR05 02.02.01/SR06 09.01.05.01/SR01 09.01.05.02/SR01 
09.02.05/SR01 
 
#D 4.6:
03.01/SR04 03.01/SR06 03.01/SR07 03.01/SR09 03.01/SR11 09.01/SR11 
 
#D 4.6.1:
09.01.09.01/SR05 09.01.09.02/SR05 09.02.09/SR01 
 
#D 4.6.2:
09.01.09.01/SR03 09.01.09.02/SR03 09.02.09/SR01 
 
#D 4.7:
03.02/SR01 03.02/SR02 03.02/SR03 03.03/SR06 03.03/SR07 03.03/SR08 
09.01.09.01/SR06 09.01.09.02/SR06 
 
#D 4.8:
03.02/SR01 03.02/SR02 03.02/SR03 03.03/SR14 03.03/SR15 03.03/SR16 
03.03/SR17 09.01.09.01/SR06 09.01.09.02/SR06 
 
#D 4.9.5.1:
09.01.03.01/SR13 09.01.03.02/SR13 
 
#D 4.9.6.1:
09.01.03.01/SR13 09.01.03.02/SR13 
 
#D 5.1:
05.01.01/SR06 05.01.01/SR12 09.01.02.01/SR03 09.01.02.02/SR03 
 
#D 5.2:
05.01.02/SR08 
 
#D 5.3:
05.01.01/SR08 05.01.02/SR02 05.01.02/SR08 
 
#D 5.4:
05.02/SR10 
 
#D 5.4.1:
06.02.02/SR08 09.01.04.01/SR01 09.01.04.02/SR01 
 
#D 5.4.2:
04.01/SR01 06.02.02/SR09 06.02.02/SR10 06.02.02/SR18 
06.02.02/SR19 06.02.02/SR20 06.02.02/SR21 06.02.02/SR22 
 
#D 5.4.2.1:
06.02.02/SR08 06.02.02/SR18 06.02.02/SR19 06.02.02/SR20 
06.02.02/SR21 06.02.02/SR22 09.01.03.01/SR02 09.01.03.01/SR13 
09.01.03.01/SR14 09.01.03.02/SR02 09.01.03.02/SR13 
09.01.03.02/SR14 09.02.03/SR08 
 


                               J-13

                  DATA STRUCTURE CROSS-REFERENCE


#D 5.4.2.2:
06.02.02/SR11 06.02.02/SR24 06.02.02/SR27 06.02.02/SR28 
06.02.02/SR29 
 
#D 5.4.2.3:
04.02.05.01/SR79 06.02.02/SR17 06.02.02/SR25 06.02.02/SR26 
 
#D 5.4.2.3.1:
06.02.01/SR01 06.02.01/SR02 09.02.04/SR05 09.02.04/SR06 
09.02.04/SR07 
 
#D 5.4.2.3.2:
06.02.01/SR01 06.02.01/SR02 09.02.04/SR01 09.02.04/SR02 
09.02.04/SR03 09.02.04/SR04 09.02.04/SR08 09.02.04/SR09 
09.02.04/SR10 
 
#D 5.4.2.3.3:
09.01.04.01/SR04 09.01.04.01/SR05 09.01.04.02/SR04 
09.01.04.02/SR05 
 
#D 5.4.2.4:
06.02.02/SR17 06.02.02/SR25 06.02.02/SR26 
 
#D 5.4.2.4.1:
06.02.01/SR01 06.02.01/SR02 06.02.02/SR14 06.02.02/SR15 
06.02.02/SR16 06.02.02/SR23 09.02.04/SR05 09.02.04/SR06 
09.02.04/SR07 
 
#D 5.4.2.4.2:
06.02.01/SR01 06.02.01/SR02 06.02.02/SR14 06.02.02/SR15 
06.02.02/SR16 06.02.02/SR23 09.02.04/SR01 09.02.04/SR02 
09.02.04/SR03 09.02.04/SR04 09.02.04/SR08 09.02.04/SR09 
09.02.04/SR10 
 
#D 5.4.2.4.3:
06.02.02/SR14 06.02.02/SR15 06.02.02/SR16 06.02.02/SR23 
09.01.04.01/SR04 09.01.04.01/SR05 09.01.04.02/SR04 
09.01.04.02/SR05 
 
#D 5.4.2.4.4:
06.02.02/SR14 06.02.02/SR15 06.02.02/SR23 
 
#D 5.4.2.4.5:
06.02.02/SR14 06.02.02/SR15 06.02.02/SR16 06.02.02/SR23 
 
#D 5.4.2.4.6:
06.02.02/SR14 06.02.02/SR15 06.02.02/SR16 06.02.02/SR23 
 
#D 5.5:
04.03.03/SR05 
 
#D 5.5.1:
04.03.03/SR06 04.03.03/SR07 04.03.03/SR12 04.03.03/SR15 
 


                               J-14

                  DATA STRUCTURE CROSS-REFERENCE


#D 5.5.2:
04.03.03/SR06 04.03.03/SR07 04.03.03/SR13 
 
#D 5.5.3:
04.03.03/SR04 04.03.03/SR14 
 
#D 5.6:
04.01/SR01 05.02/SR10 06.03/SR05 06.03/SR16 06.03/SR17 
 
#D 5.6.1:
06.03/SR15 06.03/SR18 06.03/SR19 06.03/SR20 
 
#D 5.6.2:
06.03/SR01 06.03/SR06 06.03/SR07 06.03/SR08 06.03/SR12 06.03/SR13 
06.03/SR14 09.01.04.01/SR02 09.01.04.01/SR06 09.01.04.02/SR02 
09.01.04.02/SR06 
 
#D 5.6.3:
04.02.05.01/SR79 06.03/SR01 06.03/SR08 06.03/SR12 06.03/SR13 
09.01.04.01/SR02 09.01.04.01/SR06 09.01.04.02/SR02 
09.01.04.02/SR06 
 
#D 5.6.4:
06.03/SR01 06.03/SR09 06.03/SR10 06.03/SR11 06.03/SR12 06.03/SR13 
06.03/SR14 09.01.04.01/SR03 09.01.04.01/SR07 09.01.04.02/SR03 
09.01.04.02/SR07 
 
#D 5.6.5:
04.02.05.01/SR79 06.03/SR01 06.03/SR11 06.03/SR12 06.03/SR13 
09.01.04.01/SR03 09.01.04.01/SR07 09.01.04.02/SR03 
09.01.04.02/SR07 
 
#D 5.7:
02.01.02.01/SR04 02.01.02.02/SR10 02.01.03.01/SR01 
02.01.03.01/SR03 02.01.03.02/SR05 02.01.03.02/SR06 
02.01.03.03/SR01 02.01.03.03/SR03 05.02/SR10 05.03/SR07 
05.03/SR09 05.03/SR10 05.03/SR11 05.03/SR14 
 
#D 5.7.1:
05.03/SR02 05.03/SR06 05.03/SR15 
 
#D 5.7.2:
05.03/SR03 05.03/SR04 05.03/SR06 05.03/SR15 
 
#D 5.8.1:
04.03.03/SR06 04.03.03/SR07 05.02/SR01 05.02/SR03 05.02/SR04 
05.02/SR08 05.02/SR22 05.02/SR23 05.02/SR24 05.02/SR25 05.02/SR26 
05.02/SR27 05.02/SR28 05.02/SR29 05.02/SR31 05.02/SR32 
 
#D 5.8.2:
04.03.03/SR06 05.02/SR02 05.02/SR03 05.02/SR04 05.02/SR08 
05.02/SR23 05.02/SR24 05.02/SR25 05.02/SR26 05.02/SR27 05.02/SR28 
05.02/SR29 05.02/SR31 05.02/SR32 
 


                               J-15

                  DATA STRUCTURE CROSS-REFERENCE


#D 5.8.3:
04.03.03/SR06 04.03.03/SR07 05.02/SR04 05.02/SR09 05.02/SR11 
05.02/SR12 
 
#D 5.8.4:
05.02/SR04 05.02/SR09 05.02/SR11 05.02/SR12 05.02/SR13 05.02/SR14 
05.02/SR15 05.02/SR16 05.02/SR17 05.02/SR18 05.02/SR22 05.02/SR23 
05.02/SR24 05.02/SR25 05.02/SR26 05.02/SR27 05.02/SR28 05.02/SR29 
05.02/SR31 05.02/SR32 06.02.02/SR27 06.02.02/SR28 06.03/SR18 
06.03/SR19 
 
#D 5.9:
04.02.01.02/SR18 
 
#D 5.9.1:
04.02.01.02/SR06 04.02.01.02/SR07 04.02.01.02/SR10 
04.02.01.02/SR12 04.02.01.02/SR13 
 
#D 5.9.2:
04.02.01.02/SR06 04.02.01.02/SR07 04.02.01.02/SR11 
04.02.01.02/SR14 04.02.01.02/SR15 04.02.01.02/SR16 
04.02.01.02/SR24 04.02.01.02/SR25 09.02.03/SR02 
 
#D 5.9.2.1:
04.02.01.02/SR10 04.02.01.02/SR12 04.02.01.02/SR13 
04.02.01.02/SR35 04.02.01.02/SR43 04.02.01.02/SR44 
04.02.01.02/SR45 04.02.01.02/SR47 04.02.01.02/SR48 
04.02.01.02/SR49 09.01.03.01/SR01 09.01.03.02/SR01 09.02.03/SR01 
 
#D 5.9.2.2:
04.02.01.02/SR33 04.02.01.02/SR34 04.02.01.02/SR35 
 
#D 5.9.2.3:
04.02.01.02/SR41 04.02.01.02/SR42 04.02.01.02/SR43 
04.02.01.02/SR44 04.02.01.02/SR45 
 
#D 5.9.2.4:
04.02.01.02/SR46 04.02.01.02/SR47 04.02.01.02/SR48 
04.02.01.02/SR49 09.01.03.01/SR12 09.01.03.02/SR12 
 
#D 5.10:
04.02.02.02/SR18 
 
#D 5.10.1:
04.02.02.02/SR06 04.02.02.02/SR07 04.02.02.02/SR10 
04.02.02.02/SR12 04.02.02.02/SR13 
 
#D 5.10.2:
04.02.02.02/SR06 04.02.02.02/SR07 04.02.02.02/SR11 
04.02.02.02/SR14 04.02.02.02/SR15 04.02.02.02/SR16 
04.02.02.02/SR24 04.02.02.02/SR25 09.02.03/SR02 
 
#D 5.10.2.1:
04.02.02.02/SR10 04.02.02.02/SR12 04.02.02.02/SR13 


                               J-16

                  DATA STRUCTURE CROSS-REFERENCE


04.02.02.02/SR35 04.02.02.02/SR43 04.02.02.02/SR44 
04.02.02.02/SR45 04.02.02.02/SR48 04.02.02.02/SR49 
04.02.02.02/SR50 09.01.03.01/SR01 09.01.03.02/SR01 09.02.03/SR01 
 
#D 5.10.2.2:
04.02.02.02/SR33 04.02.02.02/SR34 04.02.02.02/SR35 
 
#D 5.10.2.3:
04.02.02.02/SR41 04.02.02.02/SR42 04.02.02.02/SR43 
04.02.02.02/SR44 04.02.02.02/SR45 
 
#D 5.10.2.4:
04.02.02.02/SR47 04.02.02.02/SR48 04.02.02.02/SR49 
04.02.02.02/SR50 09.01.03.01/SR12 09.01.03.02/SR12 
 
#D 5.11:
04.02.03.02/SR18 
 
#D 5.11.1:
04.02.03.02/SR06 04.02.03.02/SR07 04.02.03.02/SR10 
04.02.03.02/SR12 04.02.03.02/SR13 04.02.04.02/SR04 
04.02.04.02/SR05 
 
#D 5.11.2:
04.02.03.02/SR06 04.02.03.02/SR07 04.02.03.02/SR11 
04.02.03.02/SR14 04.02.03.02/SR15 04.02.03.02/SR16 
04.02.03.02/SR24 04.02.03.02/SR25 04.02.04.02/SR04 
04.02.04.02/SR05 04.02.04.02/SR09 09.02.03/SR02 
 
#D 5.11.2.1:
04.02.03.02/SR10 04.02.03.02/SR12 04.02.03.02/SR13 
04.02.03.02/SR38 04.02.03.02/SR39 04.02.03.02/SR57 
04.02.03.02/SR61 04.02.03.02/SR64 04.02.04.02/SR11 
04.02.04.02/SR12 04.02.04.02/SR24 04.02.04.02/SR27 
04.02.04.02/SR29 09.01.03.01/SR01 09.01.03.02/SR01 09.02.03/SR01 
 
#D 5.11.2.2:
04.02.03.02/SR35 04.02.03.02/SR36 04.02.03.02/SR38 
04.02.03.02/SR40 04.02.04.02/SR11 04.02.04.02/SR13 
 
#D 5.11.2.3:
04.02.03.02/SR32 04.02.03.02/SR33 04.02.03.02/SR34 
04.02.03.02/SR35 04.02.03.02/SR36 04.02.03.02/SR39 
04.02.03.02/SR47 04.02.04.02/SR10 04.02.04.02/SR12 
04.02.04.02/SR20 
 
#D 5.11.2.4:
04.02.03.02/SR56 04.02.03.02/SR57 04.02.03.02/SR59 
04.02.04.02/SR24 04.02.04.02/SR26 
 
#D 5.11.2.5:
04.02.03.02/SR60 04.02.03.02/SR61 04.02.04.02/SR27 
 
#D 5.11.2.6:


                               J-17

                  DATA STRUCTURE CROSS-REFERENCE


04.02.03.02/SR63 04.02.03.02/SR64 04.02.03.02/SR65 
04.02.03.02/SR66 04.02.04.02/SR29 04.02.04.02/SR30 
04.02.04.02/SR31 09.01.03.01/SR12 09.01.03.02/SR12 
 
#D 5.12:
04.02.05.02/SR19 
 
#D 5.12.1:
04.02.05.02/SR07 04.02.05.02/SR08 04.02.05.02/SR11 
04.02.05.02/SR13 04.02.05.02/SR14 
 
#D 5.12.2:
04.02.05.02/SR07 04.02.05.02/SR08 04.02.05.02/SR12 
04.02.05.02/SR15 04.02.05.02/SR16 04.02.05.02/SR17 
04.02.05.02/SR25 04.02.05.02/SR26 09.02.03/SR02 
 
#D 5.12.2.1:
04.02.05.02/SR11 04.02.05.02/SR13 04.02.05.02/SR14 
04.02.05.02/SR35 04.02.05.02/SR39 04.02.05.02/SR51 
09.01.03.01/SR01 09.01.03.01/SR11 09.01.03.02/SR01 
09.01.03.02/SR11 09.02.03/SR01 
 
#D 5.12.2.2:
04.02.05.02/SR31 04.02.05.02/SR35 
 
#D 5.12.2.3:
04.02.05.02/SR37 04.02.05.02/SR38 04.02.05.02/SR39 
04.02.05.02/SR40 04.02.05.02/SR41 
 
#D 5.12.2.4:
04.02.05.02/SR50 04.02.05.02/SR51 04.02.05.02/SR52 
04.02.05.02/SR53 09.01.03.01/SR12 09.01.03.02/SR12 
 
#D 5.13:
04.02.05.03/SR18 
 
#D 5.13.1:
04.02.05.03/SR06 04.02.05.03/SR07 04.02.05.03/SR10 
04.02.05.03/SR12 04.02.05.03/SR13 
 
#D 5.13.2:
04.02.05.03/SR06 04.02.05.03/SR07 04.02.05.03/SR11 
04.02.05.03/SR14 04.02.05.03/SR15 04.02.05.03/SR16 
04.02.05.03/SR24 04.02.05.03/SR25 09.02.03/SR02 
 
#D 5.13.2.1:
04.02.05.03/SR10 04.02.05.03/SR12 04.02.05.03/SR13 
04.02.05.03/SR30 04.02.05.03/SR31 04.02.05.03/SR38 
04.02.05.03/SR39 04.02.05.03/SR40 04.02.05.03/SR41 
04.02.05.03/SR46 04.02.05.03/SR47 04.02.05.03/SR48 
04.02.05.03/SR50 04.02.05.03/SR51 04.02.05.03/SR52 
09.01.03.01/SR01 09.01.03.02/SR01 09.02.03/SR01 
 
#D 5.13.2.2:


                               J-18

                  DATA STRUCTURE CROSS-REFERENCE


04.02.05.03/SR29 04.02.05.03/SR30 04.02.05.03/SR31 
 
#D 5.13.2.3:
04.02.05.03/SR36 04.02.05.03/SR37 04.02.05.03/SR38 
04.02.05.03/SR39 04.02.05.03/SR40 04.02.05.03/SR41 
 
#D 5.13.2.4:
04.02.05.03/SR44 04.02.05.03/SR45 04.02.05.03/SR46 
04.02.05.03/SR47 04.02.05.03/SR48 
 
#D 5.13.2.5:
04.02.05.03/SR49 04.02.05.03/SR50 04.02.05.03/SR51 
04.02.05.03/SR52 09.01.03.01/SR12 09.01.03.02/SR12 
 
#D 5.14:
04.02.05.04/SR10 
 
#D 5.14.1:
04.02.05.04/SR01 04.02.05.04/SR03 04.02.05.04/SR04 
 
#D 5.14.2:
04.02.05.01/SR21 04.02.05.04/SR02 04.02.05.04/SR07 
04.02.05.04/SR16 04.02.05.04/SR17 
 
#D 5.14.2.1:
04.02.05.01/SR20 04.02.05.02/SR40 04.02.05.02/SR41 
04.02.05.04/SR01 04.02.05.04/SR03 04.02.05.04/SR04 
04.02.05.04/SR07 09.01.03.01/SR11 09.01.03.02/SR11 09.02.03/SR06 
 
#D 5.14.2.2:
04.02.05.01/SR75 04.02.05.01/SR76 04.02.05.01/SR77 
04.02.05.01/SR79 04.02.05.04/SR05 04.02.05.04/SR06 
04.02.05.04/SR19 04.02.05.04/SR20 04.02.05.04/SR21 
09.01.03.01/SR15 09.01.03.02/SR15 
 
#D 5.15.1:
04.03.02.01/SR02 04.03.02.01/SR05 04.03.02.01/SR09 
04.03.02.01/SR10 04.03.02.02/SR17 04.03.02.02/SR20 
04.03.02.02/SR21 04.03.02.02/SR27 
 
#D 5.15.2:
04.03.02.01/SR01 04.03.02.01/SR03 04.03.02.01/SR04 
04.03.02.01/SR06 04.03.02.01/SR08 
 
#D 5.15.3:
04.02.01.02/SR48 04.02.01.02/SR49 04.02.02.02/SR49 
04.02.02.02/SR50 04.02.03.02/SR65 04.02.03.02/SR66 
04.02.04.02/SR30 04.02.04.02/SR31 04.02.05.02/SR52 
04.02.05.02/SR53 04.02.05.03/SR51 04.02.05.03/SR52 
04.02.05.04/SR20 04.02.05.04/SR21 04.03.02.02/SR13 
04.03.02.02/SR14 04.03.02.02/SR33 
 
#D 5.15.3.1:
04.02.01.01/SR21 04.02.01.01/SR22 04.02.02.01/SR22 


                               J-19

                  DATA STRUCTURE CROSS-REFERENCE


04.02.02.01/SR23 04.02.03.01/SR48 04.02.03.01/SR49 
04.02.04.01/SR38 04.02.04.01/SR39 04.02.05.01/SR28 
04.02.05.01/SR29 04.02.05.01/SR57 04.02.05.01/SR58 
04.03.02.01/SR01 04.03.02.01/SR02 04.03.02.01/SR03 
04.03.02.01/SR04 04.03.02.01/SR05 04.03.02.01/SR06 
04.03.02.02/SR30 04.03.02.02/SR31 04.03.02.02/SR32 
09.01.03.01/SR12 09.01.03.01/SR16 09.01.03.02/SR12 
09.01.03.02/SR16 09.02.03/SR07 
 
#D 5.15.3.2:
04.02.01.01/SR21 04.02.01.01/SR22 04.02.02.01/SR22 
04.02.02.01/SR23 04.02.03.01/SR48 04.02.03.01/SR49 
04.02.04.01/SR38 04.02.04.01/SR39 04.02.05.01/SR28 
04.02.05.01/SR29 04.02.05.01/SR57 04.02.05.01/SR58 
04.03.02.01/SR02 04.03.02.01/SR04 04.03.02.01/SR05 
04.03.02.01/SR06 04.03.02.02/SR21 04.03.02.02/SR26 
04.03.02.02/SR27 04.03.02.02/SR30 04.03.02.02/SR31 
04.03.02.02/SR32 09.01.03.01/SR17 09.01.03.02/SR17 
 
#D 5.16:
04.03.04.02/SR01 04.03.04.02/SR02 04.03.04.02/SR03 
04.03.04.02/SR04 04.03.04.02/SR10 04.03.04.02/SR11 
04.03.04.02/SR12 04.03.04.02/SR13 
 
#D 5.17:
04.03.04.02/SR05 04.03.04.02/SR06 04.03.04.02/SR07 
04.03.04.02/SR08 04.03.04.02/SR09 04.03.04.02/SR10 
04.03.04.02/SR11 04.03.04.02/SR12 04.03.04.02/SR13 
 
#D 5.18.1.2:
05.02/SR30 05.02/SR31 05.02/SR32 
 
#D 5.18.2.2:
05.02/SR30 05.02/SR31 05.02/SR32 
 
#D 5.18.3.2:
05.02/SR30 05.02/SR31 05.02/SR32 
 
#D 5.18.4.2:
05.02/SR30 05.02/SR31 05.02/SR32 
 
#D 5.18.5.2:
05.02/SR30 05.02/SR31 05.02/SR32 
 
#D 5.18.6.2:
05.02/SR30 05.02/SR31 05.02/SR32 
 
#D 6:
05.01.02/SR01 
 
#D 6.1:
05.01.02/SR02 05.01.02/SR06 09.01.02.01/SR06 09.01.02.01/SR07 
09.01.02.01/SR08 09.01.02.01/SR09 09.01.02.01/SR10 
09.01.02.01/SR11 09.01.02.02/SR06 09.01.02.02/SR07 


                               J-20

                  DATA STRUCTURE CROSS-REFERENCE


09.01.02.02/SR08 09.01.02.02/SR09 09.01.02.02/SR10 
09.01.02.02/SR11 09.02.02/SR09 
 
#D 6.2:
05.01.02/SR02 05.01.02/SR03 05.01.02/SR04 05.01.02/SR10 
09.01.02.01/SR06 09.01.02.01/SR07 09.01.02.01/SR08 
09.01.02.01/SR09 09.01.02.01/SR10 09.01.02.01/SR11 
09.01.02.02/SR06 09.01.02.02/SR07 09.01.02.02/SR08 
09.01.02.02/SR09 09.01.02.02/SR10 09.01.02.02/SR11 09.02.02/SR04 
09.02.02/SR05 09.02.02/SR06 09.02.02/SR07 09.02.02/SR08 
09.02.02/SR09 
 
#D 6.3:
06.03/SR04 
 
#D 6.4:
06.03/SR02 06.03/SR03 09.01.04.01/SR07 09.01.04.02/SR07 
 
#D 6.4.1:
04.01/SR02 
 
#D 6.5:
04.03.03/SR08 
 
#D 6.5.1:
04.03.03/SR09 
 
#D 6.5.2:
04.03.03/SR09 
 
#D 6.5.3:
04.03.03/SR10 
 
#D 6.5.4:
04.03.03/SR10 04.03.03/SR11 
 
#D 6.5.4.1:
09.01.03.01/SR10 09.01.03.02/SR10 
 
#D 6.6.1:
06.02.02/SR04 06.02.02/SR05 
 
#D 6.6.2:
06.02.02/SR06 06.02.02/SR09 09.02.03/SR08 
 
#D 6.6.2.1:
06.02.02/SR07 
 
#D 6.6.2.2:
06.02.02/SR07 
 
#D 6.6.2.3:
06.02.02/SR07 
 


                               J-21

                  DATA STRUCTURE CROSS-REFERENCE


#D 6.6.2.4:
06.02.02/SR07 
 
#D 6.6.2.5:
06.02.02/SR07 
 
#D 6.6.2.6:
06.02.02/SR07 
 
#D 6.7:
05.01.02/SR09 05.01.02/SR10 
 
#D 6.8:
05.02/SR19 05.02/SR20 05.02/SR21 05.02/SR24 05.02/SR25 05.02/SR26 
05.02/SR27 05.02/SR28 05.02/SR29 05.02/SR31 05.02/SR32 
 
#D 6.8.1:
05.02/SR06 
 
#D 6.8.2:
05.02/SR06 
 
#D 6.8.3:
05.02/SR06 
 
#D 6.8.4:
05.02/SR06 
 
#D 6.8.5:
05.02/SR06 
 
#D 6.8.6:
05.02/SR06 
 
#D 6.8.7:
05.02/SR06 
 
#D 6.8.8:
05.02/SR06 
 
#D 6.8.9:
05.02/SR06 
 
#D 6.8.10:
05.02/SR06 
 
#D 6.8.11:
05.02/SR06 
 
#D 6.8.12:
04.03.03/SR06 04.03.03/SR07 05.02/SR06 
 
#D 6.9.1:
05.02/SR01 05.02/SR05 05.02/SR08 


                               J-22

                  DATA STRUCTURE CROSS-REFERENCE


 
#D 6.9.2:
05.02/SR02 05.02/SR05 05.02/SR08 
 
#D 6.10.1.1:
04.02.01.01/SR06 04.02.01.01/SR07 04.02.01.01/SR08 
04.02.01.01/SR09 04.02.01.01/SR10 04.02.01.02/SR29 
04.02.01.02/SR31 04.02.01.02/SR32 04.02.01.02/SR33 
04.02.01.02/SR36 04.02.01.02/SR37 04.02.01.02/SR38 
 
#D 6.10.1.2:
04.02.01.01/SR06 04.02.01.01/SR07 04.02.01.01/SR08 
04.02.01.01/SR09 04.02.01.01/SR10 04.02.01.02/SR26 
04.02.01.02/SR29 04.02.01.02/SR30 04.02.01.02/SR31 
04.02.01.02/SR32 04.02.01.02/SR33 04.02.01.02/SR34 
04.02.01.02/SR36 04.02.01.02/SR37 04.02.01.02/SR38 
 
#D 6.10.1.2.1:
09.01.03.01/SR04 09.01.03.02/SR04 
 
#D 6.10.1.3:
04.02.01.01/SR15 04.02.01.01/SR16 04.02.01.02/SR39 
04.02.01.02/SR41 04.02.01.02/SR44 04.02.01.02/SR45 
 
#D 6.10.1.4:
04.02.01.01/SR15 04.02.01.01/SR16 04.02.01.02/SR27 
04.02.01.02/SR39 04.02.01.02/SR40 04.02.01.02/SR41 
04.02.01.02/SR44 04.02.01.02/SR45 
 
#D 6.10.1.5:
04.02.01.01/SR15 04.02.01.01/SR16 04.02.01.02/SR27 
04.02.01.02/SR39 04.02.01.02/SR40 04.02.01.02/SR41 
04.02.01.02/SR44 04.02.01.02/SR45 
 
#D 6.10.1.6:
04.02.01.01/SR15 04.02.01.01/SR16 04.02.01.02/SR27 
04.02.01.02/SR39 04.02.01.02/SR40 04.02.01.02/SR41 
04.02.01.02/SR44 04.02.01.02/SR45 
 
#D 6.10.1.7:
04.02.01.02/SR19 04.02.01.02/SR21 
 
#D 6.10.2:
04.02.01.02/SR20 04.02.01.02/SR21 04.02.01.02/SR22 
04.02.01.02/SR23 04.02.01.02/SR24 04.02.01.02/SR25 09.02.03/SR01 
09.02.03/SR03 
 
#D 6.10.2.1:
04.02.01.02/SR26 
 
#D 6.10.2.2:
04.02.01.02/SR27 
 
#D 6.10.2.3:


                               J-23

                  DATA STRUCTURE CROSS-REFERENCE


04.02.01.02/SR28 
 
#D 6.11.1.1:
04.02.02.01/SR06 04.02.02.01/SR07 04.02.02.01/SR08 
04.02.02.01/SR09 04.02.02.01/SR10 04.02.02.02/SR29 
04.02.02.02/SR31 04.02.02.02/SR32 04.02.02.02/SR33 
04.02.02.02/SR36 04.02.02.02/SR37 04.02.02.02/SR38 
 
#D 6.11.1.2:
04.02.02.01/SR06 04.02.02.01/SR07 04.02.02.01/SR08 
04.02.02.01/SR09 04.02.02.01/SR10 04.02.02.02/SR26 
04.02.02.02/SR29 04.02.02.02/SR30 04.02.02.02/SR31 
04.02.02.02/SR32 04.02.02.02/SR33 04.02.02.02/SR34 
04.02.02.02/SR36 04.02.02.02/SR37 04.02.02.02/SR38 
 
#D 6.11.1.2.1:
09.01.03.01/SR05 09.01.03.02/SR05 
 
#D 6.11.1.3:
04.02.02.01/SR15 04.02.02.01/SR16 04.02.02.02/SR39 
04.02.02.02/SR41 04.02.02.02/SR44 04.02.02.02/SR45 
 
#D 6.11.1.4:
04.02.02.01/SR15 04.02.02.01/SR16 04.02.02.01/SR17 
04.02.02.02/SR27 04.02.02.02/SR39 04.02.02.02/SR40 
04.02.02.02/SR41 04.02.02.02/SR44 04.02.02.02/SR45 
04.02.02.02/SR46 
 
#D 6.11.1.5:
04.02.02.01/SR15 04.02.02.01/SR16 04.02.02.01/SR17 
04.02.02.02/SR27 04.02.02.02/SR39 04.02.02.02/SR40 
04.02.02.02/SR41 04.02.02.02/SR44 04.02.02.02/SR45 
04.02.02.02/SR46 
 
#D 6.11.1.6:
04.02.02.01/SR15 04.02.02.01/SR16 04.02.02.01/SR17 
04.02.02.02/SR27 04.02.02.02/SR39 04.02.02.02/SR40 
04.02.02.02/SR41 04.02.02.02/SR44 04.02.02.02/SR45 
04.02.02.02/SR46 
 
#D 6.11.1.7:
04.02.02.02/SR19 04.02.02.02/SR21 
 
#D 6.11.2:
04.02.02.02/SR20 04.02.02.02/SR21 04.02.02.02/SR22 
04.02.02.02/SR23 04.02.02.02/SR24 04.02.02.02/SR25 09.02.03/SR01 
09.02.03/SR03 
 
#D 6.11.2.1:
04.02.02.02/SR26 
 
#D 6.11.2.2:
04.02.02.02/SR27 
 


                               J-24

                  DATA STRUCTURE CROSS-REFERENCE


#D 6.11.2.3:
04.02.02.02/SR28 
 
#D 6.12.1.1:
04.02.03.01/SR19 04.02.03.01/SR21 04.02.03.01/SR22 
04.02.03.01/SR28 04.02.03.02/SR26 04.02.03.02/SR40 
04.02.03.02/SR47 04.02.03.03/SR01 04.02.04.01/SR12 
04.02.04.01/SR14 04.02.04.01/SR15 04.02.04.01/SR20 
04.02.04.02/SR13 04.02.04.02/SR20 
 
#D 6.12.1.2:
04.02.03.01/SR19 04.02.03.01/SR21 04.02.03.01/SR22 
04.02.03.01/SR28 04.02.03.02/SR26 04.02.03.02/SR30 
04.02.03.02/SR32 04.02.03.02/SR33 04.02.03.02/SR35 
04.02.03.02/SR40 04.02.03.02/SR47 04.02.03.03/SR01 
04.02.04.01/SR12 04.02.04.01/SR14 04.02.04.01/SR15 
04.02.04.01/SR20 04.02.04.02/SR13 04.02.04.02/SR20 
 
#D 6.12.1.2.1:
04.02.03.02/SR31 04.02.03.02/SR34 04.02.03.02/SR36 
04.02.03.02/SR37 04.02.03.03/SR09 04.02.03.03/SR15 
04.02.03.03/SR16 04.02.04.02/SR10 09.01.03.01/SR06 
09.01.03.02/SR06 09.02.03/SR04 
 
#D 6.12.1.3:
04.02.03.01/SR29 04.02.03.01/SR30 04.02.03.01/SR61 
 
#D 6.12.1.4:
04.02.03.01/SR29 04.02.03.01/SR30 04.02.03.01/SR61 
 
#D 6.12.1.5:
04.02.03.01/SR29 04.02.03.01/SR30 04.02.03.01/SR61 
 
#D 6.12.1.6:
04.02.03.01/SR29 04.02.03.01/SR30 04.02.03.01/SR37 
04.02.03.01/SR53 04.02.03.01/SR55 04.02.03.01/SR57 
04.02.03.02/SR27 04.02.03.02/SR48 04.02.03.02/SR49 
04.02.03.02/SR51 04.02.03.02/SR53 04.02.03.02/SR55 
04.02.03.02/SR59 04.02.04.01/SR21 04.02.04.01/SR29 
04.02.04.02/SR21 04.02.04.02/SR22 04.02.04.02/SR26 
 
#D 6.12.1.7:
04.02.03.01/SR29 04.02.03.01/SR30 04.02.03.01/SR37 
04.02.03.01/SR53 04.02.03.01/SR54 04.02.03.01/SR56 
04.02.03.02/SR27 04.02.03.02/SR48 04.02.03.02/SR49 
04.02.03.02/SR51 04.02.03.02/SR52 04.02.03.02/SR54 
04.02.03.02/SR59 04.02.04.01/SR21 04.02.04.01/SR29 
04.02.04.02/SR21 04.02.04.02/SR22 04.02.04.02/SR26 
 
#D 6.12.1.8:
04.02.03.01/SR29 04.02.03.01/SR30 04.02.03.01/SR37 
04.02.03.01/SR53 04.02.03.01/SR54 04.02.03.01/SR56 
04.02.03.02/SR27 04.02.03.02/SR48 04.02.03.02/SR49 
04.02.03.02/SR51 04.02.03.02/SR52 04.02.03.02/SR54 


                               J-25

                  DATA STRUCTURE CROSS-REFERENCE


04.02.03.02/SR59 04.02.04.01/SR21 04.02.04.01/SR29 
04.02.04.02/SR21 04.02.04.02/SR22 04.02.04.02/SR26 
 
#D 6.12.1.9:
04.02.03.02/SR19 04.02.03.02/SR21 
 
#D 6.12.2:
04.02.03.02/SR20 04.02.03.02/SR21 04.02.03.02/SR22 
04.02.03.02/SR23 04.02.03.02/SR24 04.02.03.02/SR25 
04.02.04.02/SR08 04.02.04.02/SR09 09.02.03/SR01 09.02.03/SR03 
 
#D 6.12.2.1:
04.02.03.02/SR26 
 
#D 6.12.2.2:
04.02.03.02/SR26 04.02.03.02/SR27 04.02.03.02/SR28 
04.02.03.02/SR34 04.02.04.02/SR10 
 
#D 6.12.2.3:
04.02.03.02/SR27 
 
#D 6.12.2.4:
04.02.03.02/SR28 
 
#D 6.12.2.5:
04.02.03.02/SR29 
 
#D 6.13.1.1:
04.02.04.01/SR21 04.02.04.01/SR43 04.02.04.01/SR45 
04.02.04.01/SR47 04.02.04.01/SR52 
 
#D 6.13.1.2:
04.02.04.01/SR21 04.02.04.01/SR43 04.02.04.01/SR44 
04.02.04.01/SR46 04.02.04.01/SR52 
 
#D 6.13.1.3:
04.02.04.01/SR21 04.02.04.01/SR43 04.02.04.01/SR44 
04.02.04.01/SR46 04.02.04.01/SR52 
 
#D 6.13.1.4:
04.02.04.01/SR77 04.02.04.01/SR78 04.02.04.01/SR79 
04.02.04.01/SR81 04.02.04.01/SR82 
 
#D 6.13.1.5:
04.02.04.01/SR77 04.02.04.01/SR78 04.02.04.01/SR79 
04.02.04.01/SR81 04.02.04.01/SR82 
 
#D 6.14.1.1:
04.02.05.01/SR06 04.02.05.01/SR08 04.02.05.01/SR09 
04.02.05.02/SR36 
 
#D 6.14.1.2:
04.02.05.01/SR06 04.02.05.01/SR08 04.02.05.01/SR09 
04.02.05.02/SR27 04.02.05.02/SR31 04.02.05.02/SR32 


                               J-26

                  DATA STRUCTURE CROSS-REFERENCE


04.02.05.02/SR34 04.02.05.02/SR36 04.02.05.02/SR42 
04.02.05.02/SR43 04.02.05.04/SR09 04.02.05.04/SR14 
 
#D 6.14.1.2.1:
04.02.05.02/SR33 09.01.03.01/SR08 09.01.03.02/SR08 09.02.03/SR05 
 
#D 6.14.1.3:
04.02.05.01/SR20 04.02.05.01/SR21 04.02.05.01/SR22 
04.02.05.01/SR23 04.02.05.02/SR42 04.02.05.02/SR43 
04.02.05.02/SR44 04.02.05.02/SR45 04.02.05.02/SR46 
 
#D 6.14.1.4:
04.02.05.01/SR20 04.02.05.01/SR21 04.02.05.01/SR22 
04.02.05.01/SR23 04.02.05.02/SR29 04.02.05.02/SR40 
04.02.05.02/SR41 04.02.05.02/SR44 04.02.05.02/SR45 
04.02.05.02/SR46 04.02.05.02/SR47 04.02.05.02/SR48 
04.02.05.02/SR49 
 
#D 6.14.1.5:
04.02.05.02/SR20 04.02.05.02/SR22 
 
#D 6.14.2:
04.02.05.02/SR21 04.02.05.02/SR22 04.02.05.02/SR23 
04.02.05.02/SR24 04.02.05.02/SR25 04.02.05.02/SR26 09.02.03/SR01 
09.02.03/SR03 
 
#D 6.14.2.1:
04.02.05.02/SR27 04.02.05.02/SR28 04.02.05.02/SR29 
04.02.05.02/SR31 
 
#D 6.14.2.2:
04.02.05.02/SR28 04.02.05.02/SR29 
 
#D 6.14.2.3:
04.02.05.02/SR30 
 
#D 6.15.1.1:
04.02.05.01/SR42 04.02.05.01/SR43 04.02.05.01/SR44 
04.02.05.01/SR45 04.02.05.01/SR46 04.02.05.03/SR32 
04.02.05.03/SR34 04.02.05.03/SR35 04.02.05.03/SR36 
04.02.05.03/SR39 04.02.05.03/SR40 04.02.05.03/SR41 
 
#D 6.15.1.2:
04.02.05.01/SR42 04.02.05.01/SR43 04.02.05.01/SR44 
04.02.05.01/SR45 04.02.05.01/SR46 04.02.05.03/SR26 
04.02.05.03/SR32 04.02.05.03/SR33 04.02.05.03/SR34 
04.02.05.03/SR35 04.02.05.03/SR36 04.02.05.03/SR37 
04.02.05.03/SR39 04.02.05.03/SR40 04.02.05.03/SR41 
 
#D 6.15.1.2.1:
09.01.03.01/SR07 09.01.03.02/SR07 
 
#D 6.15.1.3:
04.02.05.01/SR51 04.02.05.01/SR52 04.02.05.03/SR42 


                               J-27

                  DATA STRUCTURE CROSS-REFERENCE


04.02.05.03/SR44 04.02.05.03/SR47 04.02.05.03/SR48 
 
#D 6.15.1.4:
04.02.05.01/SR51 04.02.05.01/SR52 04.02.05.03/SR27 
04.02.05.03/SR42 04.02.05.03/SR43 04.02.05.03/SR44 
04.02.05.03/SR47 04.02.05.03/SR48 
 
#D 6.15.1.5:
04.02.05.01/SR51 04.02.05.01/SR52 04.02.05.03/SR27 
04.02.05.03/SR42 04.02.05.03/SR43 04.02.05.03/SR44 
04.02.05.03/SR47 04.02.05.03/SR48 
 
#D 6.15.1.6:
04.02.05.01/SR51 04.02.05.01/SR52 04.02.05.03/SR27 
04.02.05.03/SR42 04.02.05.03/SR43 04.02.05.03/SR44 
04.02.05.03/SR47 04.02.05.03/SR48 
 
#D 6.15.1.7:
04.02.05.03/SR19 04.02.05.03/SR21 
 
#D 6.15.2:
04.02.05.03/SR20 04.02.05.03/SR21 04.02.05.03/SR22 
04.02.05.03/SR23 04.02.05.03/SR24 04.02.05.03/SR25 09.02.03/SR01 
09.02.03/SR03 
 
#D 6.15.2.1:
04.02.05.03/SR29 
 
#D 6.15.2.2:
04.02.05.03/SR26 
 
#D 6.15.2.3:
04.02.05.03/SR27 
 
#D 6.15.2.4:
04.02.05.03/SR28 
 
#D 6.16.1.1:
04.02.05.02/SR28 04.02.05.02/SR34 04.02.05.04/SR11 
04.02.05.04/SR13 04.02.05.04/SR14 
 
#D 6.16.2:
04.02.05.04/SR12 04.02.05.04/SR13 04.02.05.04/SR15 
04.02.05.04/SR16 04.02.05.04/SR17 09.02.03/SR06 
 
#D 6.16.2.1:
04.02.05.04/SR18 
 
#D 6.17.1.1:
04.03.02.02/SR16 
 
#D 6.17.1.2:
04.03.02.02/SR16 04.03.02.02/SR17 04.03.02.02/SR18 
04.03.02.02/SR19 04.03.02.02/SR22 04.03.02.02/SR23 


                               J-28

                  DATA STRUCTURE CROSS-REFERENCE


04.03.02.02/SR24 04.03.02.02/SR25 04.03.02.02/SR28 
04.03.02.02/SR29 
 
#D 6.17.1.2.1:
09.01.03.01/SR09 09.01.03.02/SR09 
 
#D 6.17.1.3:
04.03.02.02/SR09 04.03.02.02/SR15 04.03.02.02/SR16 
04.03.02.02/SR18 04.03.02.02/SR20 
 
#D 6.17.2.1:
04.03.02.02/SR07 04.03.02.02/SR15 04.03.02.02/SR33 
 
#D 6.17.2.2:
04.03.02.02/SR01 04.03.02.02/SR02 04.03.02.02/SR03 
04.03.02.02/SR15 04.03.02.02/SR33 
 
#D 6.17.2.3:
04.03.02.02/SR04 04.03.02.02/SR05 04.03.02.02/SR06 
04.03.02.02/SR33 
 
#D 6.17.2.4:
04.02.01.02/SR28 04.02.02.02/SR28 04.02.03.02/SR29 
04.02.05.02/SR30 04.02.05.03/SR28 04.02.05.04/SR18 
04.03.02.02/SR08 
 
#D 6.17.3:
04.03.02.02/SR10 04.03.02.02/SR11 04.03.02.02/SR13 
04.03.02.02/SR14 09.02.03/SR07 
 
#D 6.17.3.1:
04.03.02.02/SR09 04.03.02.02/SR12 04.03.02.02/SR15 
 
#D 6.18.1:
04.01.08/SR04 
 
#D 6.18.2:
04.01.08/SR04 
 
#D 6.18.2.3:
04.01.08/SR05 
 
#D 6.18.3:
04.01.08/SR09 
 
#D 6.18.4:
04.01.08/SR09 
 
#D 6.18.4.3:
04.01.08/SR10 
 
#D 6.19.1:
02.02.02/SR13 
 


                               J-29

                  DATA STRUCTURE CROSS-REFERENCE


#D 6.19.2:
02.02.02/SR11 02.02.02/SR13 
 
#D 6.20:
05.03/SR16 05.03/SR17 05.03/SR18 05.03/SR19 
 
#D 6.21.1:
04.02.01.02/SR17 04.02.01.02/SR18 09.01.03.01/SR03 
09.01.03.02/SR03 
 
#D 6.21.2:
04.02.02.02/SR17 04.02.02.02/SR18 09.01.03.01/SR03 
09.01.03.02/SR03 
 
#D 6.21.3:
04.02.03.02/SR17 04.02.03.02/SR18 09.01.03.01/SR03 
09.01.03.02/SR03 
 
#D 6.21.4:
04.02.05.02/SR18 04.02.05.02/SR19 09.01.03.01/SR03 
09.01.03.02/SR03 
 
#D 6.21.5:
04.02.05.03/SR17 04.02.05.03/SR18 09.01.03.01/SR03 
09.01.03.02/SR03 
 
#D 6.21.6:
04.02.05.04/SR08 04.02.05.04/SR09 04.02.05.04/SR10 
09.01.03.01/SR03 09.01.03.02/SR03 
 
#D 6.21.7:
04.03.02.01/SR07 04.03.02.01/SR08 09.01.03.01/SR03 
09.01.03.02/SR03 
 
#D 6.21.8:
06.02.02/SR12 06.02.02/SR13 09.01.04.01/SR01 09.01.04.02/SR01 
 
#D 6.22:
05.02/SR19 05.02/SR20 05.02/SR21 05.02/SR24 05.02/SR25 05.02/SR26 
05.02/SR27 05.02/SR28 05.02/SR29 05.02/SR31 05.02/SR32 
 
#D 6.22.1:
05.02/SR07 
 
#D 6.22.2:
05.02/SR07 
 
#D 6.22.3:
05.02/SR07 
 
#D 6.22.4:
05.02/SR07 
 
#D 6.22.5:


                               J-30

                  DATA STRUCTURE CROSS-REFERENCE


05.02/SR07 
 
#D 7:
02.01.01/SR08 02.01.02.02/SR01 02.01.02.02/SR02 02.01.02.02/SR03 
02.01.02.02/SR04 02.01.02.02/SR05 02.01.02.02/SR06 
02.01.02.02/SR07 02.01.02.02/SR08 02.01.02.02/SR09 
02.01.03.01/SR01 02.01.03.01/SR02 02.01.03.01/SR03 
02.01.03.03/SR01 02.01.03.03/SR02 02.01.03.03/SR03 02.03.03/SR02 
02.03.03/SR03 02.03.03/SR04 02.03.03/SR05 02.03.03/SR06 
 
#D 7.1:
02.01/SR02 02.01.01/SR01 02.01.01/SR02 02.01.01/SR03 
02.01.01/SR04 02.01.01/SR05 02.01.01/SR06 02.01.01/SR07 
02.01.01/SR09 02.01.01/SR10 02.01.02.01/SR01 02.01.02.01/SR03 
02.01.02.01/SR05 02.01.02.03/SR01 02.01.02.03/SR02 
02.01.03.01/SR01 02.01.03.01/SR02 02.01.03.01/SR03 
02.01.03.02/SR01 02.01.03.02/SR02 02.01.03.02/SR03 
02.01.03.02/SR04 02.01.03.03/SR01 02.01.03.03/SR02 
02.01.03.03/SR03 02.01.03.03/SR07 02.01.03.03/SR08 02.02.01/SR07 
02.02.04/SR08 02.02.04/SR09 02.02.04/SR10 02.02.04/SR11 
02.02.05/SR01 02.02.05/SR02 02.02.05/SR04 02.03.01/SR04 
02.03.01/SR05 02.03.01/SR06 02.03.02/SR01 02.03.02/SR02 
02.03.02/SR07 02.03.03/SR07 02.03.03/SR08 03.03/SR02 03.03/SR03 
03.03/SR04 03.03/SR05 03.03/SR06 03.03/SR07 03.03/SR08 03.03/SR12 
03.03/SR13 03.03/SR14 03.03/SR15 03.03/SR16 03.03/SR17 03.03/SR18 
03.03/SR19 03.04/SR02 03.04/SR03 03.04/SR04 09.01.05.01/SR03 
09.01.05.01/SR04 09.01.05.01/SR06 09.01.05.02/SR03 
09.01.05.02/SR04 09.01.05.02/SR06 
 
#D 7.2:
02.01.03.01/SR01 02.01.03.01/SR03 02.01.03.02/SR05 
02.01.03.02/SR06 02.01.03.03/SR01 02.01.03.03/SR03 05.03/SR07 
05.03/SR10 05.03/SR11 05.03/SR13 09.01.05.01/SR06 
09.01.05.02/SR06 
 
#D 7.2.1:
05.03/SR01 05.03/SR05 05.03/SR08 05.03/SR12 
 
#D 7.3:
02.01.02.01/SR06 02.01.02.01/SR07 02.01.02.02/SR11 
02.01.02.02/SR12 02.02.01/SR07 02.02.03/SR02 02.02.03/SR03 
02.02.03/SR06 02.02.04/SR01 02.02.04/SR02 02.02.04/SR03 
02.02.04/SR04 02.02.04/SR05 02.02.04/SR07 02.02.04/SR08 
02.02.04/SR11 02.02.05/SR01 02.02.05/SR02 02.02.05/SR03 
02.02.05/SR04 02.03.01/SR01 02.03.01/SR02 02.03.01/SR03 
02.03.01/SR04 02.03.01/SR05 02.03.01/SR06 02.03.02/SR01 
02.03.02/SR02 02.03.02/SR03 02.03.02/SR04 02.03.02/SR05 
02.03.02/SR06 02.03.02/SR07 02.03.02/SR08 02.03.02/SR09 
02.03.03/SR07 09.01.05.01/SR03 09.01.05.01/SR04 09.01.05.02/SR03 
09.01.05.02/SR04 09.02.05/SR02 
 
#D 7.3.1:
02.03.03/SR10 06.01.02/SR17 06.01.02/SR57 06.01.02/SR58 
 


                               J-31

                  DATA STRUCTURE CROSS-REFERENCE


#D 7.3.1.1:
02.03.03/SR12 04.01.01/SR01 04.01.01/SR02 04.01.01/SR03 
04.01.01/SR07 04.02.01.01/SR03 04.02.01.02/SR03 04.03.01/SR07 
04.03.04.01/SR15 
 
#D 7.3.1.2:
02.03.03/SR12 04.01.01/SR04 04.01.01/SR05 04.01.01/SR06 
04.01.01/SR07 04.02.01.01/SR03 04.02.01.02/SR03 04.03.01/SR07 
 
#D 7.3.1.3:
02.03.03/SR11 04.01.02/SR01 04.01.02/SR02 04.01.02/SR03 
04.01.02/SR07 04.02.02.01/SR03 04.02.02.02/SR03 04.03.01/SR07 
06.01.02/SR59 
 
#D 7.3.1.4:
02.03.03/SR11 04.01.02/SR04 04.01.02/SR05 04.01.02/SR06 
04.01.02/SR07 04.02.02.01/SR03 04.02.02.02/SR03 04.03.01/SR07 
06.01.02/SR59 
 
#D 7.3.1.5:
02.03.03/SR15 04.01.03/SR01 04.01.03/SR02 04.01.03/SR03 
04.01.03/SR09 04.01.03/SR11 04.02.03.01/SR01 04.02.03.01/SR02 
04.02.03.01/SR11 04.02.03.02/SR03 04.03.01/SR07 06.01.02/SR60 
 
#D 7.3.1.6:
02.03.03/SR15 04.01.03/SR04 04.01.03/SR05 04.01.03/SR06 
04.01.03/SR09 04.01.03/SR10 04.02.03.01/SR01 04.02.03.01/SR02 
04.02.03.01/SR11 04.02.03.02/SR03 04.03.01/SR07 06.01.02/SR60 
 
#D 7.3.1.7:
02.03.03/SR16 04.01.04/SR01 04.01.04/SR02 04.01.04/SR03 
04.01.04/SR07 04.01.04/SR09 04.02.04.01/SR01 04.02.04.01/SR02 
04.02.04.01/SR05 04.02.04.02/SR01 04.03.01/SR07 06.01.02/SR61 
06.01.02/SR62 
 
#D 7.3.1.8:
02.03.03/SR16 04.01.04/SR04 04.01.04/SR05 04.01.04/SR06 
04.01.04/SR07 04.01.04/SR08 04.01.04/SR09 04.02.04.01/SR01 
04.02.04.01/SR02 04.02.04.01/SR05 04.02.04.02/SR01 04.03.01/SR07 
06.01.02/SR61 06.01.02/SR62 
 
#D 7.3.1.9:
02.03.03/SR13 04.01.05/SR01 04.01.05/SR02 04.01.05/SR03 
04.01.05/SR07 04.01.05/SR08 04.02.05.01/SR03 04.02.05.02/SR03 
04.03.01/SR07 06.01.02/SR63 
 
#D 7.3.1.10:
02.03.03/SR13 04.01.05/SR04 04.01.05/SR05 04.01.05/SR06 
04.01.05/SR07 04.01.05/SR08 04.02.05.01/SR03 04.02.05.02/SR03 
04.03.01/SR07 06.01.02/SR63 
 
#D 7.3.1.11:
02.03.03/SR14 04.01.06/SR01 04.01.06/SR02 04.01.06/SR03 
04.01.06/SR07 04.01.06/SR08 04.02.05.01/SR04 04.02.05.02/SR04 


                               J-32

                  DATA STRUCTURE CROSS-REFERENCE


04.02.05.03/SR03 04.03.01/SR07 06.01.02/SR63 06.01.02/SR64 
 
#D 7.3.1.12:
02.03.03/SR14 04.01.06/SR04 04.01.06/SR05 04.01.06/SR06 
04.01.06/SR07 04.01.06/SR08 04.02.05.01/SR04 04.02.05.02/SR04 
04.02.05.03/SR03 04.03.01/SR07 06.01.02/SR63 06.01.02/SR64 
 
#D 7.3.1.13:
02.03.03/SR17 04.01.07/SR01 04.01.07/SR02 04.01.07/SR03 
04.01.07/SR04 04.01.07/SR05 04.01.07/SR11 04.01.07/SR12 
04.01.07/SR13 04.01.07/SR14 09.01.03.01/SR16 09.01.03.02/SR16 
 
#D 7.3.1.14:
02.03.03/SR17 04.01.07/SR06 04.01.07/SR07 04.01.07/SR08 
04.01.07/SR09 04.01.07/SR10 04.01.07/SR11 04.01.07/SR12 
04.01.07/SR13 04.01.07/SR14 09.01.03.01/SR16 09.01.03.02/SR16 
 
#D 7.3.1.15:
04.01.08/SR01 04.01.08/SR02 04.01.08/SR03 
 
#D 7.3.1.16:
04.01.08/SR06 04.01.08/SR07 04.01.08/SR08 
 
#D 7.3.2.1.1:
04.02.01.02/SR01 04.02.01.02/SR02 04.02.01.02/SR04 
04.02.01.02/SR05 
 
#D 7.3.2.1.2:
04.02.02.02/SR01 04.02.02.02/SR02 04.02.02.02/SR04 
04.02.02.02/SR05 
 
#D 7.3.2.1.3:
04.02.03.02/SR01 04.02.03.02/SR02 04.02.03.02/SR04 
04.02.03.02/SR05 04.02.04.02/SR02 04.02.04.02/SR03 
 
#D 7.3.2.1.4:
04.02.05.02/SR01 04.02.05.02/SR02 04.02.05.02/SR05 
04.02.05.02/SR06 
 
#D 7.3.2.1.5:
04.02.05.03/SR01 04.02.05.03/SR02 04.02.05.03/SR04 
04.02.05.03/SR05 
 
#D 7.3.2.2.1:
04.02.01.01/SR01 04.02.01.01/SR02 04.02.01.01/SR04 
04.02.01.01/SR05 
 
#D 7.3.2.2.2:
04.02.01.01/SR01 04.02.01.01/SR02 04.02.01.01/SR13 
04.02.01.01/SR14 
 
#D 7.3.2.2.3:
04.02.01.01/SR01 04.02.01.01/SR02 04.02.01.01/SR19 
04.02.01.01/SR20 


                               J-33

                  DATA STRUCTURE CROSS-REFERENCE


 
#D 7.3.2.3.1:
04.02.02.01/SR01 04.02.02.01/SR02 04.02.02.01/SR04 
04.02.02.01/SR05 
 
#D 7.3.2.3.2:
04.02.02.01/SR01 04.02.02.01/SR02 04.02.02.01/SR13 
04.02.02.01/SR14 
 
#D 7.3.2.3.3:
04.02.02.01/SR01 04.02.02.01/SR02 04.02.02.01/SR20 
04.02.02.01/SR21 
 
#D 7.3.2.4.1:
04.02.03.01/SR09 04.02.03.01/SR10 04.02.03.01/SR12 
04.02.03.01/SR13 04.02.04.01/SR06 
 
#D 7.3.2.4.2:
04.02.03.01/SR09 04.02.03.01/SR10 04.02.03.01/SR25 
04.02.03.01/SR26 04.02.03.01/SR27 04.02.04.01/SR18 
04.02.04.01/SR19 
 
#D 7.3.2.4.3:
04.02.03.01/SR09 04.02.03.01/SR10 04.02.03.01/SR34 
04.02.03.01/SR35 04.02.04.01/SR26 
 
#D 7.3.2.4.4:
04.02.03.01/SR09 04.02.03.01/SR10 04.02.03.01/SR40 
04.02.03.01/SR41 04.02.04.01/SR32 
 
#D 7.3.2.4.5:
04.02.03.01/SR09 04.02.03.01/SR10 04.02.03.01/SR46 
04.02.03.01/SR47 04.02.04.01/SR37 
 
#D 7.3.2.4.6:
02.03.03/SR15 04.02.03.01/SR09 04.02.03.01/SR10 04.02.03.01/SR52 
04.02.03.01/SR58 
 
#D 7.3.2.4.7:
02.03.03/SR15 04.02.03.01/SR09 04.02.03.01/SR10 04.02.03.01/SR79 
04.02.03.01/SR80 
 
#D 7.3.2.4.8:
02.03.03/SR15 04.02.03.01/SR09 04.02.03.01/SR10 04.02.03.01/SR64 
04.02.03.01/SR65 04.02.03.01/SR66 
 
#D 7.3.2.4.9:
02.03.03/SR15 04.02.03.01/SR09 04.02.03.01/SR10 04.02.03.01/SR72 
04.02.03.01/SR73 04.02.03.01/SR74 
 
#D 7.3.2.5.1:
04.02.04.01/SR03 04.02.04.01/SR04 04.02.04.01/SR42 
04.02.04.01/SR48 
 


                               J-34

                  DATA STRUCTURE CROSS-REFERENCE


#D 7.3.2.5.2:
04.02.04.01/SR03 04.02.04.01/SR04 04.02.04.01/SR70 
04.02.04.01/SR71 
 
#D 7.3.2.5.3:
04.02.04.01/SR03 04.02.04.01/SR04 04.02.04.01/SR55 
04.02.04.01/SR56 04.02.04.01/SR57 
 
#D 7.3.2.5.4:
04.02.04.01/SR03 04.02.04.01/SR04 04.02.04.01/SR63 
04.02.04.01/SR64 04.02.04.01/SR65 
 
#D 7.3.2.5.5:
04.02.04.01/SR03 04.02.04.01/SR04 04.02.04.01/SR75 
04.02.04.01/SR76 
 
#D 7.3.2.6.1:
04.02.05.01/SR01 04.02.05.01/SR02 04.02.05.01/SR05 
04.02.05.01/SR07 
 
#D 7.3.2.6.2:
04.02.05.01/SR01 04.02.05.01/SR02 04.02.05.01/SR18 
04.02.05.01/SR19 
 
#D 7.3.2.6.3:
04.02.05.01/SR01 04.02.05.01/SR02 04.02.05.01/SR26 
04.02.05.01/SR27 
 
#D 7.3.2.6.4:
04.02.05.01/SR01 04.02.05.01/SR02 04.02.05.01/SR32 
04.02.05.01/SR33 04.02.05.01/SR34 
 
#D 7.3.2.6.5:
04.02.05.01/SR01 04.02.05.01/SR02 04.02.05.01/SR40 
04.02.05.01/SR41 
 
#D 7.3.2.6.6:
04.02.05.01/SR01 04.02.05.01/SR02 04.02.05.01/SR49 
04.02.05.01/SR50 
 
#D 7.3.2.6.7:
04.02.05.01/SR01 04.02.05.01/SR02 04.02.05.01/SR55 
04.02.05.01/SR56 
 
#D 7.3.2.6.8:
04.02.05.01/SR01 04.02.05.01/SR02 04.02.05.01/SR61 
04.02.05.01/SR62 04.02.05.01/SR63 
 
#D 7.3.2.6.9:
04.02.05.01/SR01 04.02.05.01/SR02 04.02.05.01/SR66 
04.02.05.01/SR68 04.02.05.01/SR70 
 
#D 7.3.2.6.10:
04.02.05.01/SR01 04.02.05.01/SR02 04.02.05.01/SR67 


                               J-35

                  DATA STRUCTURE CROSS-REFERENCE


04.02.05.01/SR69 
 
#D 7.3.2.7.1:
02.03.03/SR06 02.03.03/SR18 02.03.03/SR19 02.03.03/SR20 
04.03.04.01/SR01 04.03.04.01/SR02 04.03.04.01/SR03 
04.03.04.01/SR09 04.03.04.01/SR10 04.03.04.01/SR12 
04.03.04.01/SR16 
 
#D 7.3.2.7.2:
02.03.03/SR06 02.03.03/SR18 02.03.03/SR19 02.03.03/SR20 
04.03.04.01/SR04 04.03.04.01/SR05 04.03.04.01/SR06 
04.03.04.01/SR09 04.03.04.01/SR10 04.03.04.01/SR13 
04.03.04.01/SR16 
 
#D 7.3.2.8:
04.03.01/SR01 04.03.01/SR02 04.03.01/SR03 04.03.01/SR04 
04.03.01/SR05 04.03.01/SR06 
 
#D 7.3.2.9:
04.03.03/SR01 04.03.03/SR02 04.03.03/SR03 
 
#D 7.3.2.10:
06.02.02/SR01 06.02.02/SR02 06.02.02/SR03 
 
#D 7.3.3.1:
02.03.03/SR10 06.01.01/SR01 06.01.01/SR02 06.01.02/SR01 
06.01.02/SR02 06.01.02/SR03 06.01.02/SR07 06.01.02/SR08 
06.01.02/SR18 
 
#D 7.3.3.2:
02.03.03/SR10 06.01.01/SR01 06.01.01/SR02 06.01.02/SR04 
06.01.02/SR05 06.01.02/SR06 06.01.02/SR07 06.01.02/SR18 
 
#D 7.3.3.3:
02.03.03/SR10 06.01.01/SR01 06.01.01/SR02 06.01.02/SR09 
06.01.02/SR10 06.01.02/SR11 06.01.02/SR15 06.01.02/SR18 
 
#D 7.3.3.4:
02.03.03/SR10 06.01.01/SR01 06.01.01/SR02 06.01.02/SR12 
06.01.02/SR13 06.01.02/SR14 06.01.02/SR18 
 
#D 7.3.3.5:
02.03.03/SR10 06.01.02/SR23 06.01.02/SR24 06.01.02/SR25 
06.01.02/SR38 06.01.02/SR39 06.01.02/SR40 06.01.02/SR41 
06.01.02/SR42 06.01.02/SR43 06.01.02/SR44 06.01.02/SR45 
06.01.02/SR46 06.01.02/SR47 06.01.02/SR48 06.01.02/SR49 
 
#D 7.3.3.6:
02.03.03/SR10 06.01.02/SR26 06.01.02/SR27 06.01.02/SR28 
06.01.02/SR38 06.01.02/SR39 06.01.02/SR49 
 
#D 7.3.3.7:
06.01.02/SR29 06.01.02/SR30 06.01.02/SR31 06.01.02/SR52 
06.01.02/SR53 


                               J-36

                  DATA STRUCTURE CROSS-REFERENCE


 
#D 7.3.3.8:
02.03.03/SR10 06.01.02/SR32 06.01.02/SR33 06.01.02/SR34 
06.01.02/SR56 
 
#D 7.3.4:
02.01/SR01 02.01/SR03 02.01/SR04 02.01/SR05 02.01/SR06 02.01/SR07 
02.01/SR08 02.01/SR09 02.01/SR10 02.01/SR11 02.01/SR12 02.01/SR13 
02.01/SR14 02.01.02.01/SR02 02.01.02.01/SR06 02.01.02.01/SR07 
02.01.02.02/SR01 02.01.02.02/SR02 02.01.02.02/SR03 
02.01.02.02/SR04 02.01.02.02/SR05 02.01.02.02/SR06 
02.01.02.02/SR07 02.01.02.02/SR08 02.01.02.02/SR11 
02.01.02.02/SR12 02.01.03.01/SR01 02.01.03.02/SR01 
02.01.03.02/SR02 02.01.03.02/SR03 02.01.03.02/SR04 
02.01.03.03/SR01 02.01.03.03/SR07 02.01.03.03/SR08 02.02.04/SR10 
02.03.03/SR08 03.03/SR02 03.03/SR19 03.04/SR03 
 
#D 7.3.5:
02.02.02/SR01 02.02.02/SR02 02.02.02/SR03 02.02.03/SR09 
02.02.04/SR05 02.02.04/SR06 09.01.05.01/SR03 09.01.05.01/SR04 
09.01.05.02/SR03 09.01.05.02/SR04 
 
#D 7.3.6:
02.02.02/SR04 02.02.02/SR05 02.02.02/SR06 
 
#D 7.3.7:
02.02.02/SR07 02.02.02/SR08 02.02.02/SR09 02.02.02/SR10 
 
#D 8:
09.01/SR04 
 
#D 8.1:
09.01/SR04 09.01.01.01/SR01 09.01.01.01/SR02 09.01.01.01/SR03 
09.01.01.01/SR04 09.01.01.01/SR05 09.01.01.01/SR06 
09.01.01.01/SR07 09.01.01.02/SR01 09.01.01.02/SR02 
09.01.01.02/SR03 09.01.01.02/SR04 09.01.01.02/SR05 
09.01.01.02/SR06 09.01.01.02/SR07 09.01.02.01/SR01 
09.01.02.01/SR02 09.01.02.01/SR03 09.01.02.01/SR04 
09.01.02.01/SR05 09.01.02.01/SR06 09.01.02.01/SR07 
09.01.02.01/SR08 09.01.02.01/SR09 09.01.02.01/SR10 
09.01.02.01/SR11 09.01.02.01/SR12 09.01.02.02/SR01 
09.01.02.02/SR02 09.01.02.02/SR03 09.01.02.02/SR04 
09.01.02.02/SR05 09.01.02.02/SR06 09.01.02.02/SR07 
09.01.02.02/SR08 09.01.02.02/SR09 09.01.02.02/SR10 
09.01.02.02/SR11 09.01.02.02/SR12 09.01.03.01/SR01 
09.01.03.01/SR02 09.01.03.01/SR03 09.01.03.01/SR04 
09.01.03.01/SR05 09.01.03.01/SR06 09.01.03.01/SR07 
09.01.03.01/SR08 09.01.03.01/SR09 09.01.03.01/SR10 
09.01.03.01/SR11 09.01.03.01/SR12 09.01.03.01/SR13 
09.01.03.01/SR14 09.01.03.01/SR15 09.01.03.01/SR16 
09.01.03.01/SR17 09.01.03.02/SR01 09.01.03.02/SR02 
09.01.03.02/SR03 09.01.03.02/SR04 09.01.03.02/SR05 
09.01.03.02/SR06 09.01.03.02/SR07 09.01.03.02/SR08 
09.01.03.02/SR09 09.01.03.02/SR10 09.01.03.02/SR11 


                               J-37

                  DATA STRUCTURE CROSS-REFERENCE


09.01.03.02/SR12 09.01.03.02/SR13 09.01.03.02/SR14 
09.01.03.02/SR15 09.01.03.02/SR16 09.01.03.02/SR17 
09.01.04.01/SR01 09.01.04.01/SR02 09.01.04.01/SR03 
09.01.04.01/SR04 09.01.04.01/SR05 09.01.04.01/SR06 
09.01.04.01/SR07 09.01.04.02/SR01 09.01.04.02/SR02 
09.01.04.02/SR03 09.01.04.02/SR04 09.01.04.02/SR05 
09.01.04.02/SR06 09.01.04.02/SR07 09.01.05.01/SR01 
09.01.05.01/SR02 09.01.05.01/SR03 09.01.05.01/SR04 
09.01.05.01/SR05 09.01.05.01/SR06 09.01.05.02/SR01 
09.01.05.02/SR02 09.01.05.02/SR03 09.01.05.02/SR04 
09.01.05.02/SR05 09.01.05.02/SR06 09.01.09.01/SR01 
09.01.09.01/SR02 09.01.09.01/SR03 09.01.09.01/SR04 
09.01.09.01/SR05 09.01.09.01/SR06 09.01.09.01/SR07 
09.01.09.01/SR08 09.01.09.01/SR09 09.01.09.02/SR01 
09.01.09.02/SR02 09.01.09.02/SR03 09.01.09.02/SR04 
09.01.09.02/SR05 09.01.09.02/SR06 09.01.09.02/SR07 
09.01.09.02/SR08 09.01.09.02/SR09 
 
#D 8.2:
09.01/SR01 09.01/SR02 09.01/SR03 09.01/SR04 09.01/SR07 09.01/SR10 
 
#D 8.3:
09.01/SR04 09.01/SR09 
 
#D 9.1:
03.01/SR07 09.01.05.01/SR01 09.01.05.01/SR02 09.01.05.01/SR05 
09.01.05.02/SR01 09.01.05.02/SR02 09.01.05.02/SR05 
09.01.09.01/SR01 09.01.09.01/SR02 09.01.09.01/SR03 
09.01.09.01/SR04 09.01.09.01/SR05 09.01.09.01/SR06 
09.01.09.01/SR07 09.01.09.01/SR08 09.01.09.01/SR09 
09.01.09.02/SR01 09.01.09.02/SR02 09.01.09.02/SR03 
09.01.09.02/SR04 09.01.09.02/SR05 09.01.09.02/SR06 
09.01.09.02/SR07 09.01.09.02/SR08 09.01.09.02/SR09 
 
#D 9.1.1:
03.03/SR04 03.03/SR05 03.03/SR06 03.03/SR07 03.03/SR08 03.03/SR10 
03.03/SR11 03.03/SR12 03.03/SR13 03.03/SR14 03.03/SR15 03.03/SR16 
03.03/SR17 03.04/SR01 03.04/SR02 03.04/SR03 03.04/SR04 03.04/SR05 
03.04/SR06 03.04/SR07 03.04/SR08 03.04/SR09 03.04/SR10 03.04/SR11 
03.04/SR12 03.04/SR13 03.04/SR14 03.04/SR15 03.04/SR16 03.04/SR17 
03.05/SR01 03.05/SR02 03.05/SR03 03.05/SR04 03.05/SR05 
09.01.05.01/SR02 09.01.05.01/SR05 09.01.05.02/SR02 
09.01.05.02/SR05 09.01.09.01/SR08 09.01.09.01/SR09 
09.01.09.02/SR08 09.01.09.02/SR09 
 
#D 9.1.2:
09.01.05.01/SR02 09.01.05.01/SR05 09.01.05.02/SR02 
09.01.05.02/SR05 
 
#D 9.1.2.4:
03.03/SR10 03.04/SR04 03.04/SR05 03.04/SR06 03.04/SR07 03.04/SR08 
03.04/SR09 03.04/SR10 03.04/SR11 03.04/SR12 03.04/SR13 03.04/SR14 
03.04/SR15 03.04/SR16 03.04/SR17 03.05/SR02 
  


                               J-38












                            APPENDIX K

              STANDARD SPECIFICATIONS CROSS-REFERENCE




#S 4.1.1/15/1:
04.02.01.01/SR10 04.02.01.02/SR38 04.02.02.01/SR10 
04.02.02.02/SR38 04.02.03.01/SR21 04.02.03.02/SR40 
04.02.04.01/SR14 04.02.04.01/SR82 04.02.04.02/SR13 
04.02.05.01/SR11 04.02.05.01/SR23 04.02.05.01/SR46 
04.02.05.02/SR49 04.02.05.03/SR41 04.03.02.02/SR29 
 
#S 4.1.2/15/2:
04.02.01.01/SR09 04.02.01.02/SR37 04.02.02.01/SR09 
04.02.02.02/SR37 04.02.03.01/SR21 04.02.03.02/SR40 
04.02.04.01/SR14 04.02.04.01/SR81 04.02.04.02/SR13 
04.02.05.01/SR22 04.02.05.01/SR45 04.02.05.03/SR40 
 
#S 4.4.1/22/1:
02.01.01/SR09 
 
#S 4.4.1/22/3:
04.01.01/SR01 04.01.01/SR04 04.01.02/SR01 04.01.02/SR04 
04.01.03/SR01 04.01.03/SR04 04.01.04/SR01 04.01.04/SR04 
04.01.05/SR01 04.01.05/SR04 04.01.06/SR01 04.01.06/SR04 
04.01.07/SR01 04.01.07/SR06 04.01.08/SR01 04.01.08/SR06 
 
#S 4.4.1/23/1:
04.02.01.01/SR04 04.02.01.01/SR13 04.02.01.01/SR19 
04.02.01.02/SR04 04.02.01.02/SR05 04.02.02.01/SR04 
04.02.02.01/SR13 04.02.02.01/SR20 04.02.02.02/SR04 
04.02.02.02/SR05 04.02.03.01/SR12 04.02.03.01/SR25 
04.02.03.01/SR34 04.02.03.01/SR40 04.02.03.01/SR46 
04.02.03.01/SR52 04.02.03.01/SR64 04.02.03.01/SR72 
04.02.03.01/SR79 04.02.03.02/SR04 04.02.03.02/SR05 
04.02.04.01/SR42 04.02.04.01/SR55 04.02.04.01/SR63 
04.02.04.01/SR70 04.02.04.01/SR75 04.02.04.02/SR02 
04.02.04.02/SR03 04.02.05.01/SR05 04.02.05.01/SR18 
04.02.05.01/SR26 04.02.05.01/SR32 04.02.05.01/SR40 
04.02.05.01/SR49 04.02.05.01/SR55 04.02.05.01/SR61 
04.02.05.01/SR66 04.02.05.01/SR67 04.02.05.02/SR05 
04.02.05.02/SR06 04.02.05.03/SR04 04.02.05.03/SR05 04.03.03/SR01 
04.03.04.01/SR01 04.03.04.01/SR04 


                                K-1

              STANDARD SPECIFICATIONS CROSS-REFERENCE


 
#S 4.4.2/24/3:
02.01/SR01 
 
#S 4.4.2/25/2:
02.01.01/SR01 02.01.01/SR02 02.01.01/SR03 02.01.01/SR04 
02.01.01/SR05 02.01.01/SR06 02.01.01/SR07 02.01.01/SR08 
02.01.01/SR10 03.03/SR19 
 
#S 4.4.2/25/3:
02.01.02.01/SR03 
 
#S 4.4.3/25/4:
05.02/SR10 05.03/SR01 05.03/SR02 
 
#S 4.4.3/25/5:
02.01.01/SR04 05.03/SR05 05.03/SR06 05.03/SR07 05.03/SR08 
05.03/SR09 
 
#S 4.4.3/25/8:
05.03/SR03 05.03/SR04 05.03/SR15 
 
#S 4.4.3/26/2:
04.02.01.01/SR11 04.02.01.01/SR17 04.02.01.01/SR23 
04.02.01.02/SR08 04.02.02.01/SR11 04.02.02.01/SR18 
04.02.02.01/SR24 04.02.02.02/SR08 04.02.03.01/SR23 
04.02.03.01/SR32 04.02.03.01/SR38 04.02.03.01/SR44 
04.02.03.01/SR50 04.02.03.01/SR62 04.02.03.01/SR70 
04.02.03.01/SR77 04.02.03.01/SR82 04.02.03.02/SR08 
04.02.04.01/SR16 04.02.04.01/SR24 04.02.04.01/SR30 
04.02.04.01/SR35 04.02.04.01/SR40 04.02.04.01/SR53 
04.02.04.01/SR61 04.02.04.01/SR68 04.02.04.01/SR73 
04.02.04.01/SR83 04.02.04.02/SR06 04.02.05.01/SR16 
04.02.05.01/SR24 04.02.05.01/SR30 04.02.05.01/SR38 
04.02.05.01/SR47 04.02.05.01/SR53 04.02.05.01/SR59 
04.02.05.01/SR64 04.02.05.01/SR80 04.02.05.01/SR82 
04.02.05.02/SR09 04.02.05.03/SR08 04.03.01/SR10 06.01.02/SR19 
06.01.02/SR50 06.01.02/SR54 
 
#S 4.4.3/28/1:
04.02.01.01/SR11 04.02.01.01/SR12 04.02.01.01/SR17 
04.02.01.01/SR18 04.02.01.01/SR23 04.02.01.01/SR24 
04.02.01.02/SR08 04.02.01.02/SR09 04.02.02.01/SR11 
04.02.02.01/SR12 04.02.02.01/SR18 04.02.02.01/SR19 
04.02.02.01/SR24 04.02.02.01/SR25 04.02.02.02/SR08 
04.02.02.02/SR09 04.02.03.01/SR23 04.02.03.01/SR24 
04.02.03.01/SR32 04.02.03.01/SR33 04.02.03.01/SR38 
04.02.03.01/SR39 04.02.03.01/SR44 04.02.03.01/SR45 
04.02.03.01/SR50 04.02.03.01/SR51 04.02.03.01/SR62 
04.02.03.01/SR63 04.02.03.01/SR70 04.02.03.01/SR71 
04.02.03.01/SR77 04.02.03.01/SR78 04.02.03.01/SR82 
04.02.03.01/SR83 04.02.03.02/SR08 04.02.03.02/SR09 
04.02.04.01/SR16 04.02.04.01/SR17 04.02.04.01/SR24 
04.02.04.01/SR25 04.02.04.01/SR30 04.02.04.01/SR31 


                                K-2

              STANDARD SPECIFICATIONS CROSS-REFERENCE


04.02.04.01/SR35 04.02.04.01/SR36 04.02.04.01/SR40 
04.02.04.01/SR41 04.02.04.01/SR53 04.02.04.01/SR54 
04.02.04.01/SR61 04.02.04.01/SR62 04.02.04.01/SR68 
04.02.04.01/SR69 04.02.04.01/SR73 04.02.04.01/SR74 
04.02.04.01/SR83 04.02.04.01/SR84 04.02.04.02/SR06 
04.02.04.02/SR07 04.02.05.01/SR16 04.02.05.01/SR17 
04.02.05.01/SR24 04.02.05.01/SR25 04.02.05.01/SR30 
04.02.05.01/SR31 04.02.05.01/SR38 04.02.05.01/SR39 
04.02.05.01/SR47 04.02.05.01/SR48 04.02.05.01/SR53 
04.02.05.01/SR54 04.02.05.01/SR59 04.02.05.01/SR60 
04.02.05.01/SR64 04.02.05.01/SR65 04.02.05.01/SR80 
04.02.05.01/SR81 04.02.05.01/SR82 04.02.05.01/SR83 
04.02.05.02/SR09 04.02.05.02/SR10 04.02.05.03/SR08 
04.02.05.03/SR09 04.03.01/SR10 04.03.01/SR11 04.03.04.01/SR14 
06.01.02/SR19 06.01.02/SR20 06.01.02/SR50 06.01.02/SR51 
06.01.02/SR54 06.01.02/SR55 
 
#S 4.4.4/28/4:
02.03.02/SR04 02.03.02/SR05 
 
#S 4.4.4/28/5:
02.01.01/SR01 02.02.01/SR01 02.02.01/SR02 02.02.01/SR04 
02.02.01/SR05 02.02.01/SR06 
 
#S 4.4.4/28/6:
02.02.01/SR03 02.02.01/SR08 
 
#S 4.4.4/28/7:
02.02.02/SR01 02.02.03/SR07 02.02.03/SR08 02.02.03/SR09 
02.02.03/SR10 
 
#S 4.4.4/29/1:
02.02.03/SR01 02.02.03/SR02 02.02.03/SR03 02.02.03/SR04 
 
#S 4.4.4/29/2:
02.02.05/SR01 02.02.05/SR02 02.02.05/SR03 02.02.05/SR04 
 
#S 4.4.4/29/3:
02.02.04/SR01 02.02.04/SR02 02.02.04/SR03 02.02.04/SR04 
02.02.04/SR05 02.02.04/SR06 02.02.04/SR07 
 
#S 4.4.4/29/4:
02.01.01/SR02 02.02.04/SR08 02.02.04/SR09 02.02.04/SR10 
02.02.04/SR11 
 
#S 4.4.4/29/5:
02.02.02/SR02 02.02.02/SR03 02.02.02/SR05 02.02.02/SR06 
02.02.02/SR09 02.02.02/SR10 02.03.01/SR01 02.03.01/SR02 
02.03.01/SR03 04.01.01/SR02 04.01.01/SR03 04.01.01/SR05 
04.01.01/SR06 04.01.02/SR02 04.01.02/SR03 04.01.02/SR05 
04.01.02/SR06 04.01.03/SR02 04.01.03/SR03 04.01.03/SR05 
04.01.03/SR06 04.01.04/SR02 04.01.04/SR03 04.01.04/SR05 
04.01.04/SR06 04.01.05/SR02 04.01.05/SR03 04.01.05/SR05 
04.01.05/SR06 04.01.06/SR02 04.01.06/SR03 04.01.06/SR05 


                                K-3

              STANDARD SPECIFICATIONS CROSS-REFERENCE


04.01.06/SR06 04.01.07/SR02 04.01.07/SR03 04.01.07/SR07 
04.01.07/SR08 04.01.08/SR02 04.01.08/SR03 04.01.08/SR07 
04.01.08/SR08 04.02.01.01/SR01 04.02.01.01/SR02 04.02.01.02/SR01 
04.02.01.02/SR02 04.02.02.01/SR01 04.02.02.01/SR02 
04.02.02.02/SR01 04.02.02.02/SR02 04.02.03.01/SR09 
04.02.03.01/SR10 04.02.03.02/SR01 04.02.03.02/SR02 
04.02.04.01/SR03 04.02.04.01/SR04 04.02.05.01/SR01 
04.02.05.01/SR02 04.02.05.02/SR01 04.02.05.02/SR02 
04.02.05.03/SR01 04.02.05.03/SR02 04.03.01/SR02 04.03.01/SR03 
04.03.03/SR02 04.03.03/SR03 04.03.04.01/SR02 04.03.04.01/SR03 
04.03.04.01/SR05 04.03.04.01/SR06 06.01.02/SR02 06.01.02/SR03 
06.01.02/SR05 06.01.02/SR06 06.01.02/SR10 06.01.02/SR11 
06.01.02/SR13 06.01.02/SR14 06.01.02/SR24 06.01.02/SR25 
06.01.02/SR27 06.01.02/SR28 06.01.02/SR30 06.01.02/SR31 
06.01.02/SR33 06.01.02/SR34 06.02.02/SR02 06.02.02/SR03 
 
#S 4.4.5/29/7:
02.01.02.01/SR01 02.01.02.01/SR02 02.01.02.01/SR06 
02.01.02.01/SR07 02.01.02.02/SR11 02.01.02.02/SR12 
02.01.02.03/SR01 02.01.02.03/SR02 
 
#S 4.4.5/29/8:
02.01.02.02/SR01 02.01.02.02/SR02 02.01.02.02/SR03 
02.01.02.02/SR04 02.01.02.02/SR05 02.01.02.02/SR06 
02.01.02.02/SR07 02.01.02.02/SR08 02.01.02.02/SR09 
02.01.02.02/SR11 02.01.02.02/SR12 
 
#S 4.4.5/29/9:
02.01.02.01/SR04 02.01.02.02/SR10 
 
#S 4.4.5/30/1:
02.01.01/SR05 02.01.01/SR07 02.01.03.01/SR01 02.01.03.01/SR02 
02.01.03.01/SR03 02.01.03.02/SR01 02.01.03.02/SR02 
02.01.03.02/SR03 02.01.03.02/SR04 02.01.03.02/SR05 
02.01.03.02/SR06 02.01.03.03/SR01 02.01.03.03/SR02 
02.01.03.03/SR03 02.01.03.03/SR07 02.01.03.03/SR08 
 
#S 4.4.5/30/2:
02.01/SR02 02.01.01/SR09 
 
#S 4.4.6/30/4:
02.03.01/SR04 02.03.01/SR05 02.03.01/SR06 
 
#S 4.4.6/30/5:
02.01/SR03 02.01/SR04 02.01/SR05 02.01/SR06 02.01/SR09 02.01/SR10 
02.01/SR11 02.01/SR12 02.01/SR13 02.01/SR14 
 
#S 4.4.6/30/6:
02.03.02/SR01 02.03.02/SR02 02.03.02/SR03 02.03.02/SR04 
02.03.02/SR05 02.03.02/SR06 02.03.02/SR07 02.03.02/SR08 
02.03.02/SR09 
 
#S 4.4.6/30/9:
02.03.03/SR02 02.03.03/SR03 02.03.03/SR04 02.03.03/SR06 


                                K-4

              STANDARD SPECIFICATIONS CROSS-REFERENCE


02.03.03/SR07 
 
#S 4.4.6/31/1:
02.03.03/SR06 02.03.03/SR09 
 
#S 4.4.6/31/2:
02.03.03/SR15 
 
#S 4.4.6/31/3:
02.03.03/SR16 
 
#S 4.4.6/31/4:
02.03.03/SR04 
 
#S 4.4.6/31/5:
02.03.03/SR04 02.03.03/SR08 
 
#S 4.4.6/31/6:
02.03.03/SR05 
 
#S 4.4.6/31/9:
02.03.03/SR20 
 
#S 4.4.6/31/11:
02.03.03/SR18 02.03.03/SR19 
 
#S 4.4.7/32/3:
03.03/SR01 03.03/SR02 03.03/SR03 03.03/SR09 03.03/SR10 03.03/SR11 
03.03/SR12 03.05/SR01 03.05/SR02 03.05/SR03 
 
#S 4.4.7/32/4:
03.01/SR01 03.01/SR07 03.03/SR04 03.05/SR04 03.05/SR05 
 
#S 4.4.7/32/5:
03.01/SR05 03.01/SR08 03.01/SR10 03.01/SR11 03.04/SR01 
 
#S 4.4.7/32/6:
03.04/SR05 03.04/SR06 03.04/SR07 03.04/SR08 03.04/SR12 03.04/SR13 
03.04/SR14 03.04/SR15 03.04/SR16 03.04/SR17 
 
#S 4.4.7/32/7:
03.02/SR02 03.02/SR03 03.03/SR06 03.03/SR07 03.03/SR08 
 
#S 4.4.7/33/1:
03.03/SR06 03.03/SR07 03.03/SR08 03.03/SR14 03.03/SR15 03.03/SR16 
03.03/SR17 
 
#S 4.4.7/33/2:
03.04/SR02 03.04/SR03 03.04/SR04 
 
#S 4.4.8/33/3:
02.02.02/SR07 
 
#S 4.4.9/33/4:


                                K-5

              STANDARD SPECIFICATIONS CROSS-REFERENCE


02.02.02/SR04 
 
#S 4.5.1/34/1:
02.03.03/SR11 02.03.03/SR12 02.03.03/SR13 02.03.03/SR14 
02.03.03/SR15 02.03.03/SR16 02.03.03/SR17 04.01/SR01 
04.01.01/SR01 04.01.01/SR04 04.01.01/SR07 04.01.02/SR01 
04.01.02/SR04 04.01.02/SR07 04.01.03/SR01 04.01.03/SR04 
04.01.03/SR09 04.01.03/SR10 04.01.03/SR11 04.01.04/SR01 
04.01.04/SR04 04.01.04/SR07 04.01.04/SR08 04.01.04/SR09 
04.01.05/SR01 04.01.05/SR04 04.01.05/SR07 04.01.06/SR01 
04.01.06/SR04 04.01.06/SR07 04.01.07/SR01 04.01.07/SR06 
04.01.08/SR01 04.01.08/SR06 04.02.05.01/SR10 04.02.05.01/SR13 
04.02.05.01/SR14 04.02.05.01/SR15 
 
#S 4.5.1/35/1:
02.03.03/SR15 04.02.03.01/SR02 04.02.04.01/SR01 
 
#S 4.5.1/35/2:
04.01.03/SR08 
 
#S 4.5.1/35/4:
02.03.03/SR13 02.03.03/SR14 
 
#S 4.5.1/35/6:
02.03.03/SR13 02.03.03/SR14 04.01.05/SR08 04.01.06/SR08 
 
#S 4.5.1/35/7:
02.03.03/SR13 02.03.03/SR14 06.01.02/SR64 
 
#S 4.5.1/36/1:
02.03.03/SR17 
 
#S 4.5.1/36/3:
04.01.07/SR04 04.01.07/SR05 04.01.07/SR11 
 
#S 4.5.1/36/6:
04.01.07/SR12 04.01.07/SR13 04.01.07/SR14 
 
#S 4.5.1/37/1:
02.03.03/SR17 
 
#S 4.5.1/37/2:
04.01.07/SR09 04.01.07/SR10 04.01.07/SR11 04.01.07/SR12 
04.01.07/SR13 04.01.07/SR14 
 
#S 4.5.1/38/1:
04.01.07/SR12 
 
#S 4.5.2/38/3:
04.02.01.01/SR03 04.02.01.01/SR04 04.02.01.01/SR05 
04.02.01.01/SR13 04.02.01.01/SR14 04.02.01.01/SR19 
04.02.01.01/SR20 04.02.01.02/SR03 04.02.01.02/SR04 
04.02.01.02/SR05 04.02.02.01/SR03 04.02.02.01/SR04 
04.02.02.01/SR05 04.02.02.01/SR13 04.02.02.01/SR14 


                                K-6

              STANDARD SPECIFICATIONS CROSS-REFERENCE


04.02.02.01/SR20 04.02.02.01/SR21 04.02.02.02/SR03 
04.02.02.02/SR04 04.02.02.02/SR05 04.02.03.01/SR11 
04.02.03.01/SR12 04.02.03.01/SR13 04.02.03.01/SR25 
04.02.03.01/SR27 04.02.03.01/SR34 04.02.03.01/SR35 
04.02.03.01/SR40 04.02.03.01/SR41 04.02.03.01/SR46 
04.02.03.01/SR47 04.02.03.01/SR52 04.02.03.01/SR58 
04.02.03.01/SR64 04.02.03.01/SR66 04.02.03.01/SR72 
04.02.03.01/SR74 04.02.03.01/SR79 04.02.03.01/SR80 
04.02.03.02/SR03 04.02.03.02/SR04 04.02.03.02/SR05 
04.02.04.01/SR05 04.02.04.01/SR06 04.02.04.01/SR19 
04.02.04.01/SR26 04.02.04.01/SR32 04.02.04.01/SR37 
04.02.04.01/SR42 04.02.04.01/SR48 04.02.04.01/SR55 
04.02.04.01/SR57 04.02.04.01/SR63 04.02.04.01/SR65 
04.02.04.01/SR70 04.02.04.01/SR71 04.02.04.01/SR75 
04.02.04.01/SR76 04.02.04.02/SR01 04.02.04.02/SR02 
04.02.04.02/SR03 04.02.05.01/SR03 04.02.05.01/SR04 
04.02.05.01/SR05 04.02.05.01/SR07 04.02.05.01/SR18 
04.02.05.01/SR19 04.02.05.01/SR26 04.02.05.01/SR27 
04.02.05.01/SR32 04.02.05.01/SR34 04.02.05.01/SR40 
04.02.05.01/SR41 04.02.05.01/SR49 04.02.05.01/SR50 
04.02.05.01/SR55 04.02.05.01/SR56 04.02.05.01/SR61 
04.02.05.01/SR62 04.02.05.01/SR66 04.02.05.01/SR67 
04.02.05.01/SR68 04.02.05.01/SR69 04.02.05.02/SR03 
04.02.05.02/SR04 04.02.05.02/SR05 04.02.05.02/SR06 
04.02.05.03/SR03 04.02.05.03/SR04 04.02.05.03/SR05 04.03.01/SR07 
04.03.04.01/SR15 
 
#S 4.5.2/38/7:
04.02.01.02/SR06 04.02.01.02/SR07 04.02.02.02/SR06 
04.02.02.02/SR07 04.02.03.02/SR06 04.02.03.02/SR07 
04.02.04.02/SR04 04.02.04.02/SR05 04.02.05.02/SR07 
04.02.05.02/SR08 04.02.05.03/SR06 04.02.05.03/SR07 04.03.01/SR09 
 
#S 4.5.2/39/2:
04.03.01/SR08 04.03.01/SR09 
 
#S 4.5.2/39/3:
04.03.02.02/SR15 
 
#S 4.5.2/39/5:
04.03.01/SR04 04.03.01/SR05 04.03.01/SR06 04.03.01/SR10 
 
#S 4.5.2/39/6:
04.03.01/SR01 
 
#S 4.5.2/39/7:
04.02.01.01/SR06 04.02.01.01/SR07 04.02.01.01/SR15 
04.02.01.01/SR16 04.02.01.01/SR21 04.02.01.01/SR22 
04.02.01.02/SR06 04.02.01.02/SR07 04.02.01.02/SR35 
04.02.01.02/SR43 04.02.01.02/SR44 04.02.01.02/SR45 
04.02.01.02/SR47 04.02.01.02/SR48 04.02.01.02/SR49 
04.02.02.01/SR06 04.02.02.01/SR07 04.02.02.01/SR15 
04.02.02.01/SR16 04.02.02.01/SR22 04.02.02.01/SR23 
04.02.02.02/SR06 04.02.02.02/SR07 04.02.02.02/SR35 


                                K-7

              STANDARD SPECIFICATIONS CROSS-REFERENCE


04.02.02.02/SR43 04.02.02.02/SR44 04.02.02.02/SR45 
04.02.02.02/SR48 04.02.02.02/SR49 04.02.02.02/SR50 
04.02.03.01/SR21 04.02.03.01/SR22 04.02.03.01/SR28 
04.02.03.01/SR37 04.02.03.01/SR43 04.02.03.01/SR48 
04.02.03.01/SR49 04.02.03.02/SR06 04.02.03.02/SR07 
04.02.03.02/SR38 04.02.03.02/SR39 04.02.03.02/SR40 
04.02.03.02/SR57 04.02.03.02/SR61 04.02.03.02/SR64 
04.02.03.02/SR65 04.02.03.02/SR66 04.02.04.01/SR14 
04.02.04.01/SR15 04.02.04.01/SR20 04.02.04.01/SR29 
04.02.04.01/SR34 04.02.04.01/SR38 04.02.04.01/SR39 
04.02.04.02/SR04 04.02.04.02/SR05 04.02.04.02/SR11 
04.02.04.02/SR12 04.02.04.02/SR13 04.02.04.02/SR24 
04.02.04.02/SR27 04.02.04.02/SR29 04.02.04.02/SR30 
04.02.04.02/SR31 04.02.05.01/SR08 04.02.05.01/SR09 
04.02.05.01/SR10 04.02.05.01/SR13 04.02.05.01/SR14 
04.02.05.01/SR15 04.02.05.01/SR20 04.02.05.01/SR21 
04.02.05.01/SR28 04.02.05.01/SR29 04.02.05.01/SR35 
04.02.05.01/SR42 04.02.05.01/SR43 04.02.05.01/SR51 
04.02.05.01/SR52 04.02.05.01/SR57 04.02.05.01/SR58 
04.02.05.02/SR07 04.02.05.02/SR08 04.02.05.02/SR35 
04.02.05.02/SR39 04.02.05.02/SR51 04.02.05.02/SR52 
04.02.05.02/SR53 04.02.05.03/SR06 04.02.05.03/SR07 
04.02.05.03/SR30 04.02.05.03/SR38 04.02.05.03/SR46 
04.02.05.03/SR47 04.02.05.03/SR48 04.02.05.03/SR50 
04.02.05.03/SR51 04.02.05.03/SR52 04.03.01/SR08 04.03.01/SR09 
 
#S 4.5.2/40/1:
04.01/SR01 04.03.03/SR01 04.03.03/SR04 
 
#S 4.5.2/40/3:
04.02.01.01/SR03 04.02.01.02/SR03 04.02.02.01/SR03 
04.02.02.02/SR03 04.02.03.01/SR11 04.02.05.03/SR03 04.03.01/SR04 
04.03.01/SR07 04.03.04.01/SR15 
 
#S 4.5.2/41/2:
04.02.04.01/SR05 
 
#S 4.5.2/41/3:
04.02.05.01/SR03 
 
#S 4.5.2/41/4:
04.02.05.01/SR04 
 
#S 4.5.2/42/2:
04.03.01/SR08 04.03.01/SR09 
 
#S 4.5.2/42/3:
04.02.01.02/SR10 04.02.01.02/SR11 04.02.01.02/SR22 
04.02.01.02/SR24 04.02.01.02/SR25 04.02.02.02/SR10 
04.02.02.02/SR11 04.02.02.02/SR22 04.02.02.02/SR24 
04.02.02.02/SR25 04.02.03.02/SR10 04.02.03.02/SR11 
04.02.03.02/SR22 04.02.03.02/SR24 04.02.03.02/SR25 
04.02.04.02/SR09 04.02.05.02/SR11 04.02.05.02/SR12 
04.02.05.02/SR23 04.02.05.02/SR25 04.02.05.02/SR26 


                                K-8

              STANDARD SPECIFICATIONS CROSS-REFERENCE


04.02.05.03/SR10 04.02.05.03/SR22 04.02.05.03/SR24 
04.02.05.03/SR25 04.02.05.04/SR02 04.02.05.04/SR16 
04.02.05.04/SR17 04.03.02.01/SR02 04.03.02.02/SR12 
04.03.02.02/SR13 04.03.02.02/SR14 
 
#S 4.5.2/43/2:
04.02.01.02/SR10 04.02.01.02/SR11 04.02.02.02/SR10 
04.02.02.02/SR11 04.02.03.02/SR10 04.02.05.02/SR11 
04.02.05.03/SR10 04.03.02.01/SR02 
 
#S 4.5.2/43/3:
04.02.01.01/SR07 04.02.01.01/SR22 04.02.01.02/SR07 
04.02.01.02/SR48 04.02.01.02/SR49 04.02.02.01/SR07 
04.02.02.01/SR23 04.02.02.02/SR07 04.02.02.02/SR49 
04.02.02.02/SR50 04.02.03.01/SR22 04.02.03.01/SR49 
04.02.03.02/SR07 04.02.03.02/SR66 04.02.04.01/SR15 
04.02.04.01/SR39 04.02.04.01/SR79 04.02.04.02/SR05 
04.02.04.02/SR31 04.02.05.01/SR21 04.02.05.01/SR29 
04.02.05.01/SR58 04.02.05.02/SR08 04.02.05.02/SR53 
04.02.05.03/SR07 04.02.05.03/SR51 04.02.05.03/SR52 
 
#S 4.5.3/43/4:
04.02.01.02/SR06 04.02.01.02/SR07 04.02.01.02/SR35 
04.02.01.02/SR43 04.02.01.02/SR44 04.02.01.02/SR45 
04.02.01.02/SR47 04.02.01.02/SR48 04.02.01.02/SR49 
 
#S 4.5.3/43/5:
04.02.01.01/SR06 04.02.01.01/SR08 04.02.01.01/SR09 
04.02.01.01/SR10 04.02.01.02/SR30 04.02.01.02/SR34 
04.02.01.02/SR36 04.02.01.02/SR37 04.02.01.02/SR38 
 
#S 4.5.3/43/6:
04.02.01.01/SR15 04.02.01.01/SR16 04.02.01.02/SR44 
04.02.01.02/SR45 
 
#S 4.5.4/43/7:
04.02.02.02/SR06 04.02.02.02/SR07 04.02.02.02/SR35 
04.02.02.02/SR43 04.02.02.02/SR44 04.02.02.02/SR45 
04.02.02.02/SR48 04.02.02.02/SR49 04.02.02.02/SR50 
 
#S 4.5.4/44/2:
04.02.02.01/SR06 04.02.02.01/SR08 04.02.02.01/SR09 
04.02.02.01/SR10 04.02.02.02/SR30 04.02.02.02/SR34 
04.02.02.02/SR36 04.02.02.02/SR37 04.02.02.02/SR38 
 
#S 4.5.4/44/3:
04.02.02.01/SR15 04.02.02.01/SR16 04.02.02.01/SR17 
04.02.02.02/SR44 04.02.02.02/SR45 04.02.02.02/SR46 
 
#S 4.5.4/44/4:
06.01.02/SR59 
 
#S 4.5.5/44/6:
04.02.03.01/SR01 04.02.03.01/SR02 


                                K-9

              STANDARD SPECIFICATIONS CROSS-REFERENCE


 
#S 4.5.5/44/7:
04.02.03.01/SR01 04.02.03.01/SR02 
 
#S 4.5.5/44/9:
04.02.03.01/SR60 04.02.03.03/SR09 04.02.04.01/SR50 
 
#S 4.5.5/44/10:
04.02.03.01/SR21 04.02.03.01/SR22 04.02.03.01/SR28 
04.02.03.01/SR37 04.02.03.01/SR43 04.02.03.01/SR48 
04.02.03.01/SR49 04.02.03.02/SR06 04.02.03.02/SR07 
04.02.03.02/SR38 04.02.03.02/SR39 04.02.03.02/SR40 
04.02.03.02/SR57 04.02.03.02/SR61 04.02.03.02/SR64 
04.02.03.02/SR65 04.02.03.02/SR66 04.02.04.01/SR14 
04.02.04.01/SR15 04.02.04.01/SR20 04.02.04.01/SR29 
04.02.04.01/SR34 04.02.04.01/SR38 04.02.04.01/SR39 
04.02.04.02/SR04 04.02.04.02/SR05 04.02.04.02/SR11 
04.02.04.02/SR12 04.02.04.02/SR13 04.02.04.02/SR24 
04.02.04.02/SR27 04.02.04.02/SR29 04.02.04.02/SR30 
04.02.04.02/SR31 
 
#S 4.5.5/45/2:
04.02.03.01/SR36 04.02.03.01/SR59 04.02.03.01/SR60 
04.02.03.01/SR61 04.02.03.01/SR65 04.02.03.01/SR67 
04.02.03.01/SR68 04.02.03.01/SR69 04.02.03.01/SR81 
04.02.03.02/SR58 04.02.03.03/SR01 04.02.03.03/SR06 
04.02.03.03/SR08 04.02.03.03/SR09 04.02.03.03/SR10 
04.02.04.01/SR27 04.02.04.01/SR49 04.02.04.01/SR50 
04.02.04.01/SR52 04.02.04.01/SR56 04.02.04.01/SR58 
04.02.04.01/SR59 04.02.04.01/SR60 04.02.04.01/SR72 
04.02.04.02/SR25 
 
#S 4.5.5/45/3:
04.02.03.01/SR42 04.02.03.02/SR62 04.02.03.03/SR07 
04.02.04.01/SR33 04.02.04.02/SR28 
 
#S 4.5.5/45/4:
04.02.03.01/SR36 04.02.03.01/SR75 04.02.03.02/SR58 
04.02.03.03/SR06 04.02.03.03/SR11 04.02.03.03/SR15 
04.02.03.03/SR16 04.02.04.01/SR27 04.02.04.01/SR66 
04.02.04.02/SR25 
 
#S 4.5.5/45/5:
04.02.03.01/SR81 04.02.04.01/SR72 
 
#S 4.5.5/45/6:
04.02.03.01/SR73 04.02.03.01/SR75 04.02.03.03/SR11 
04.02.04.01/SR64 04.02.04.01/SR66 
 
#S 4.5.5/46/1:
04.02.03.01/SR59 04.02.03.01/SR73 04.02.03.01/SR75 
04.02.03.03/SR08 04.02.03.03/SR11 04.02.04.01/SR49 
04.02.04.01/SR64 04.02.04.01/SR66 
 


                               K-10

              STANDARD SPECIFICATIONS CROSS-REFERENCE


#S 4.5.5/46/3:
04.02.03.01/SR76 04.02.03.03/SR12 04.02.04.01/SR67 
 
#S 4.5.5/47/1:
04.02.03.01/SR76 04.02.03.03/SR12 04.02.04.01/SR67 
 
#S 4.5.5/47/2:
04.02.03.01/SR62 04.02.03.01/SR70 04.02.03.01/SR77 
04.02.03.01/SR82 04.02.04.01/SR53 04.02.04.01/SR61 
04.02.04.01/SR68 04.02.04.01/SR73 
 
#S 4.5.5/47/4:
04.01.03/SR08 04.02.03.01/SR14 04.02.03.01/SR15 04.02.03.01/SR20 
04.02.03.01/SR21 04.02.03.02/SR30 04.02.03.02/SR31 
04.02.03.02/SR40 04.02.03.02/SR41 04.02.03.02/SR42 
04.02.03.02/SR46 04.02.04.01/SR07 04.02.04.01/SR08 
04.02.04.01/SR13 04.02.04.01/SR14 04.02.04.02/SR13 
04.02.04.02/SR14 04.02.04.02/SR15 04.02.04.02/SR19 
 
#S 4.5.5/47/5:
04.02.03.01/SR26 04.02.03.01/SR29 04.02.03.01/SR30 
04.02.03.01/SR37 04.02.03.01/SR61 04.02.03.02/SR34 
04.02.03.02/SR48 04.02.03.02/SR49 04.02.03.02/SR59 
04.02.04.01/SR18 04.02.04.01/SR21 04.02.04.01/SR22 
04.02.04.01/SR29 04.02.04.01/SR52 04.02.04.02/SR10 
04.02.04.02/SR21 04.02.04.02/SR22 04.02.04.02/SR26 06.01.02/SR60 
 
#S 4.5.5/48/1:
04.02.03.01/SR31 04.02.03.02/SR50 04.02.03.03/SR14 
04.02.04.01/SR23 04.02.04.02/SR23 
 
#S 4.5.5/48/2:
06.01.02/SR57 
 
#S 4.5.5/48/3:
04.02.03.01/SR03 04.02.03.01/SR04 04.02.03.01/SR06 
04.02.03.01/SR07 04.02.03.01/SR29 04.02.03.01/SR30 
04.02.03.02/SR48 04.02.03.02/SR49 04.02.04.02/SR21 
04.02.04.02/SR22 
 
#S 4.5.5/48/4:
04.02.03.01/SR05 04.02.03.01/SR08 
 
#S 4.5.5/48/5:
04.02.03.01/SR14 04.02.03.01/SR15 04.02.03.01/SR18 
04.02.03.01/SR19 04.02.03.01/SR28 04.02.03.02/SR31 
04.02.03.02/SR36 04.02.03.02/SR41 04.02.03.02/SR42 
04.02.03.02/SR45 04.02.03.02/SR47 04.02.03.03/SR04 
04.02.04.01/SR07 04.02.04.01/SR08 04.02.04.01/SR11 
04.02.04.01/SR12 04.02.04.01/SR20 04.02.04.02/SR14 
04.02.04.02/SR15 04.02.04.02/SR18 04.02.04.02/SR20 
 
#S 4.5.5/48/6:
04.02.03.01/SR16 04.02.03.01/SR17 04.02.03.01/SR21 


                               K-11

              STANDARD SPECIFICATIONS CROSS-REFERENCE


04.02.03.02/SR40 04.02.03.02/SR43 04.02.03.02/SR44 
04.02.03.03/SR02 04.02.03.03/SR03 04.02.03.03/SR04 
04.02.04.01/SR09 04.02.04.01/SR10 04.02.04.01/SR14 
04.02.04.02/SR13 04.02.04.02/SR16 04.02.04.02/SR17 
 
#S 4.5.5/48/7:
04.02.03.01/SR03 04.02.03.01/SR04 04.02.03.01/SR06 
04.02.03.01/SR07 04.02.03.01/SR16 04.02.03.01/SR59 
04.02.03.02/SR43 04.02.03.03/SR02 04.02.03.03/SR08 
04.02.04.01/SR09 04.02.04.01/SR49 04.02.04.01/SR51 
04.02.04.02/SR16 
 
#S 4.5.5/49/2:
04.02.03.01/SR37 04.02.03.01/SR61 04.02.03.02/SR59 
04.02.04.01/SR29 04.02.04.01/SR52 04.02.04.02/SR26 
 
#S 4.5.5/49/4:
04.02.03.01/SR37 04.02.03.02/SR59 04.02.04.01/SR29 
04.02.04.02/SR26 
 
#S 4.5.5/49/5:
04.02.03.01/SR03 04.02.03.01/SR04 04.02.03.01/SR06 
04.02.03.01/SR07 04.02.03.01/SR29 04.02.03.01/SR30 
04.02.03.01/SR31 04.02.03.02/SR48 04.02.03.02/SR49 
04.02.03.02/SR50 04.02.03.02/SR59 04.02.03.03/SR14 
04.02.04.01/SR21 04.02.04.01/SR22 04.02.04.01/SR23 
04.02.04.01/SR51 04.02.04.02/SR21 04.02.04.02/SR22 
04.02.04.02/SR23 04.02.04.02/SR26 
 
#S 4.5.5/51/1:
04.02.03.03/SR07 
 
#S 4.5.5/52/1:
04.02.03.03/SR07 
 
#S 4.5.6/55/1:
04.01.04/SR07 04.01.04/SR09 04.02.04.01/SR01 04.02.04.01/SR02 
04.02.04.01/SR28 04.02.04.01/SR51 
 
#S 4.5.6/55/3:
04.02.04.01/SR14 04.02.04.01/SR15 04.02.04.01/SR20 
04.02.04.01/SR21 04.02.04.01/SR22 04.02.04.01/SR23 
04.02.04.01/SR27 04.02.04.01/SR29 04.02.04.01/SR33 
04.02.04.01/SR34 04.02.04.01/SR38 04.02.04.01/SR39 
 
#S 4.5.6/55/4:
04.02.04.01/SR49 04.02.04.01/SR50 04.02.04.01/SR51 
04.02.04.01/SR52 04.02.04.01/SR56 04.02.04.01/SR58 
04.02.04.01/SR59 04.02.04.01/SR60 04.02.04.01/SR64 
04.02.04.01/SR66 04.02.04.01/SR67 04.02.04.01/SR68 
04.02.04.01/SR72 04.02.04.01/SR73 
 
#S 4.5.6/55/5:
04.02.04.01/SR78 04.02.04.01/SR80 04.02.04.01/SR81 


                               K-12

              STANDARD SPECIFICATIONS CROSS-REFERENCE


04.02.04.01/SR82 
 
#S 4.5.6/55/6:
06.01.02/SR61 06.01.02/SR62 
 
#S 4.5.7/55/7:
04.02.03.03/SR01 04.02.03.03/SR05 04.02.03.03/SR13 
04.02.03.03/SR15 04.02.03.03/SR16 
 
#S 4.5.7/56/1:
04.02.03.03/SR13 
 
#S 4.5.7/56/2:
04.02.03.03/SR15 04.02.03.03/SR16 
 
#S 4.5.7/56/3:
04.02.03.03/SR17 04.02.03.03/SR18 
 
#S 4.5.7/56/4:
04.02.03.03/SR17 
 
#S 4.5.7/57/1:
04.02.03.03/SR07 04.02.03.03/SR17 04.02.03.03/SR18 
 
#S 4.5.8/58/2:
04.02.05.02/SR07 04.02.05.02/SR08 04.02.05.02/SR35 
04.02.05.02/SR39 04.02.05.02/SR51 04.02.05.02/SR52 
04.02.05.02/SR53 
 
#S 4.5.8/58/3:
04.02.05.01/SR06 04.02.05.01/SR08 04.02.05.01/SR10 
04.02.05.01/SR11 04.02.05.01/SR12 04.02.05.01/SR13 
04.02.05.01/SR14 04.02.05.01/SR15 04.02.05.01/SR20 
04.02.05.01/SR22 04.02.05.01/SR23 04.02.05.02/SR31 
04.02.05.02/SR36 
 
#S 4.5.8/58/4:
06.01.02/SR63 
 
#S 4.5.8/59/1:
04.02.05.01/SR71 04.02.05.01/SR72 04.02.05.01/SR73 
04.02.05.01/SR75 04.02.05.01/SR76 
 
#S 4.5.8/60/1:
04.02.05.01/SR71 04.02.05.01/SR74 
 
#S 4.5.8/60/2:
04.02.05.01/SR71 04.02.05.01/SR75 04.02.05.01/SR76 
04.02.05.01/SR77 04.02.05.01/SR78 04.02.05.01/SR79 
 
#S 4.5.8/61/2:
04.02.05.02/SR47 04.02.05.02/SR48 
 
#S 4.5.8/61/3:


                               K-13

              STANDARD SPECIFICATIONS CROSS-REFERENCE


04.02.05.01/SR20 04.02.05.01/SR22 
 
#S 4.5.8/62/1:
04.02.05.01/SR23 04.02.05.02/SR49 
 
#S 4.5.8/62/2:
04.02.05.02/SR32 
 
#S 4.5.9/62/4:
04.02.05.03/SR11 
 
#S 4.5.9/62/5:
04.02.05.01/SR33 04.02.05.01/SR35 04.02.05.01/SR36 
04.02.05.03/SR06 04.02.05.03/SR07 04.02.05.03/SR29 
04.02.05.03/SR30 04.02.05.03/SR31 04.02.05.03/SR38 
04.02.05.03/SR46 04.02.05.03/SR47 04.02.05.03/SR48 
04.02.05.03/SR50 04.02.05.03/SR51 04.02.05.03/SR52 
 
#S 4.5.9/62/6:
04.02.05.01/SR37 06.01.02/SR64 
 
#S 4.5.9/62/7:
04.02.05.01/SR42 04.02.05.01/SR43 04.02.05.01/SR44 
04.02.05.01/SR45 04.02.05.01/SR46 04.02.05.03/SR33 
04.02.05.03/SR37 04.02.05.03/SR39 04.02.05.03/SR40 
04.02.05.03/SR41 
 
#S 4.5.9/62/8:
04.02.05.01/SR51 04.02.05.01/SR52 04.02.05.03/SR47 
04.02.05.03/SR48 
 
#S 4.5.9/62/9:
04.02.05.01/SR37 
 
#S 4.5.9/62/11:
06.01.02/SR64 
 
#S 4.5.12/63/4:
04.02.01.01/SR21 04.02.01.02/SR48 04.02.01.02/SR49 
04.02.02.01/SR22 04.02.02.02/SR49 04.02.02.02/SR50 
04.02.03.01/SR48 04.02.03.02/SR65 04.02.03.02/SR66 
04.02.04.01/SR38 04.02.04.02/SR30 04.02.04.02/SR31 
04.02.05.01/SR28 04.02.05.01/SR57 04.02.05.02/SR52 
04.02.05.02/SR53 04.02.05.03/SR51 04.02.05.03/SR52 
 
#S 4.5.12/63/5:
04.03.02.01/SR08 04.03.02.02/SR10 04.03.02.02/SR11 
04.03.02.02/SR12 04.03.02.02/SR30 04.03.02.02/SR31 
 
#S 4.5.12/63/6:
04.03.02.02/SR20 
 
#S 4.5.12/63/7:
04.03.02.01/SR01 04.03.02.01/SR02 04.03.02.01/SR04 


                               K-14

              STANDARD SPECIFICATIONS CROSS-REFERENCE


04.03.02.01/SR05 04.03.02.02/SR27 04.03.02.02/SR32 
 
#S 4.5.12/63/8:
04.03.02.01/SR02 04.03.02.01/SR05 04.03.02.01/SR09 
04.03.02.01/SR10 04.03.02.02/SR21 04.03.02.02/SR27 
04.03.02.02/SR32 
 
#S 4.5.12/64/1:
04.03.02.02/SR16 04.03.02.02/SR17 04.03.02.02/SR18 
04.03.02.02/SR19 04.03.02.02/SR22 04.03.02.02/SR23 
04.03.02.02/SR24 04.03.02.02/SR25 04.03.02.02/SR26 
04.03.02.02/SR28 04.03.02.02/SR29 
 
#S 4.5.12/64/2:
04.03.02.02/SR33 
 
#S 4.5.12/64/3:
04.03.02.02/SR04 04.03.02.02/SR05 04.03.02.02/SR06 
 
#S 4.5.13/64/4:
04.01/SR01 
 
#S 4.5.15/64/7:
04.03.04.01/SR01 04.03.04.01/SR04 04.03.04.01/SR12 
04.03.04.01/SR13 04.03.04.01/SR16 
 
#S 4.5.15/64/8:
04.03.04.02/SR01 04.03.04.02/SR04 04.03.04.02/SR05 
04.03.04.02/SR08 
 
#S 4.5.15/65/2:
04.03.04.01/SR12 04.03.04.01/SR13 04.03.04.01/SR16 
 
#S 4.5.15/65/4:
04.03.04.01/SR07 04.03.04.01/SR08 04.03.04.01/SR09 
04.03.04.02/SR10 04.03.04.02/SR11 
 
#S 4.5.16/65/5:
04.01.07/SR14 04.02.03.02/SR31 
 
#S 4.6.1/67/2:
04.01/SR02 05.01.01/SR08 05.01.02/SR01 
 
#S 4.6.1/67/3:
04.01/SR02 
 
#S 4.6.1/68/1:
05.01.02/SR02 
 
#S 4.6.2/68/7:
05.01.01/SR06 05.01.01/SR08 05.01.02/SR01 05.01.02/SR06 
 
#S 4.6.3/69/2:
04.03.03/SR06 04.03.03/SR07 05.02/SR06 05.02/SR07 


                               K-15

              STANDARD SPECIFICATIONS CROSS-REFERENCE


 
#S 4.6.3/69/3:
05.02/SR19 05.02/SR20 05.02/SR21 
 
#S 4.6.3/70/1:
05.02/SR03 
 
#S 4.6.3/70/2:
05.02/SR11 05.02/SR12 05.02/SR13 05.02/SR14 05.02/SR15 
 
#S 4.6.3/70/3:
05.02/SR04 
 
#S 4.6.3/70/4:
05.02/SR01 
 
#S 4.6.3/70/5:
05.02/SR22 
 
#S 4.6.3/70/6:
05.02/SR29 
 
#S 4.6.3/70/7:
05.02/SR30 05.02/SR31 05.02/SR32 
 
#S 4.6.3/70/9:
04.03.03/SR06 04.03.03/SR07 05.02/SR16 05.02/SR17 05.02/SR23 
05.02/SR24 05.02/SR25 05.02/SR26 05.02/SR27 05.02/SR28 
 
#S 4.6.3/71/1:
04.03.03/SR06 04.03.03/SR07 05.02/SR02 05.02/SR23 05.02/SR25 
05.02/SR26 05.02/SR27 05.02/SR28 
 
#S 4.6.3/72/1:
05.02/SR16 05.02/SR17 05.02/SR22 05.02/SR23 05.02/SR24 05.02/SR25 
05.02/SR26 05.02/SR27 05.02/SR28 05.02/SR29 05.02/SR31 05.02/SR32 
 
#S 4.6.3/73/1:
05.02/SR16 05.02/SR17 05.02/SR22 05.02/SR23 05.02/SR24 05.02/SR25 
05.02/SR26 05.02/SR27 05.02/SR28 05.02/SR29 05.02/SR31 05.02/SR32 
 
#S 4.6.3/74/1:
05.02/SR19 
 
#S 4.6.3/75/1:
05.02/SR19 
 
#S 4.6.3/75/3:
05.02/SR23 
 
#S 4.6.6/76/3:
04.03.03/SR01 04.03.03/SR04 04.03.03/SR09 04.03.03/SR10 
 
#S 4.6.6/76/4:


                               K-16

              STANDARD SPECIFICATIONS CROSS-REFERENCE


04.03.04.02/SR09 
 
#S 4.7.2/77/3:
04.01/SR01 06.01.01/SR01 06.01.01/SR02 06.01.02/SR16 
06.01.02/SR17 06.02.01/SR01 06.02.01/SR02 
 
#S 4.7.2/77/4:
06.01.02/SR19 
 
#S 4.7.2/77/6:
06.01.02/SR20 
 
#S 4.7.2/77/7:
06.01.02/SR01 06.01.02/SR04 06.01.02/SR07 06.01.02/SR08 
 
#S 4.7.2/78/2:
06.01.02/SR09 06.01.02/SR12 06.01.02/SR15 
 
#S 4.7.2/78/3:
06.01.02/SR57 
 
#S 4.7.2/78/4:
06.01.02/SR23 06.01.02/SR26 06.01.02/SR40 06.01.02/SR41 
06.01.02/SR43 
 
#S 4.7.2/78/5:
06.01.02/SR42 
 
#S 4.7.2/78/6:
06.01.02/SR41 
 
#S 4.7.2/78/7:
06.01.02/SR43 
 
#S 4.7.2/79/1:
06.01.02/SR36 06.01.02/SR44 06.01.02/SR45 
 
#S 4.7.2/79/2:
06.01.02/SR32 06.01.02/SR56 
 
#S 4.7.2/79/3:
06.01.02/SR29 06.01.02/SR52 06.01.02/SR53 06.01.02/SR58 
 
#S 4.7.3/79/4:
06.01.01/SR03 06.01.01/SR04 06.01.01/SR05 06.01.01/SR06 
06.01.01/SR07 06.01.01/SR08 06.01.01/SR09 06.01.01/SR10 
06.01.01/SR11 06.01.01/SR12 06.01.01/SR13 06.01.01/SR14 
06.01.01/SR15 06.01.01/SR16 06.01.01/SR17 06.01.01/SR18 
 
#S 4.7.3/80/1:
02.03.03/SR10 04.01/SR01 
 
#S 4.7.4/82/1:
06.02.01/SR01 


                               K-17

              STANDARD SPECIFICATIONS CROSS-REFERENCE


 
#S 4.7.4/83/3:
06.02.02/SR08 
 
#S 4.7.4/83/4:
06.02.02/SR07 
 
#S 4.7.4/83/6:
06.02.02/SR09 06.02.02/SR10 06.02.02/SR11 06.02.02/SR14 
06.02.02/SR15 
 
#S 4.7.4/83/7:
06.02.02/SR16 
 
#S 4.7.4/84/1:
06.02.02/SR23 
 
#S 4.7.4/84/2:
06.02.02/SR25 06.02.02/SR26 06.02.02/SR27 
 
#S 4.7.4/84/3:
06.02.02/SR29 
 
#S 4.7.4/84/4:
06.02.02/SR28 
 
#S 4.7.4/84/5:
06.02.02/SR19 06.02.02/SR20 
 
#S 4.7.4/84/6:
06.02.02/SR01 
 
#S 4.7.5/84/7:
06.02.01/SR01 
 
#S 4.7.5/84/8:
06.02.01/SR01 
 
#S 4.7.5/84/9:
06.02.01/SR03 
 
#S 4.7.5/84/10:
06.02.01/SR04 09.02.04/SR01 09.02.04/SR02 09.02.04/SR03 
09.02.04/SR04 09.02.04/SR05 09.02.04/SR06 09.02.04/SR07 
09.02.04/SR08 09.02.04/SR09 09.02.04/SR10 
 
#S 4.7.5/85/3:
06.02.01/SR05 
 
#S 4.7.5/85/4:
06.02.01/SR06 
 
#S 4.7.5/86/4:
06.02.01/SR07 


                               K-18

              STANDARD SPECIFICATIONS CROSS-REFERENCE


 
#S 4.7.5/86/5:
06.02.01/SR09 
 
#S 4.7.5/86/6:
06.02.01/SR08 
 
#S 4.7.5/86/9:
06.02.01/SR10 
 
#S 4.7.5/87/3:
09.02.04/SR01 09.02.04/SR02 09.02.04/SR03 09.02.04/SR04 
09.02.04/SR08 09.02.04/SR09 09.02.04/SR10 
 
#S 4.7.5/89/1:
06.02.01/SR11 
 
#S 4.7.5/89/2:
06.02.01/SR13 
 
#S 4.7.5/89/3:
06.02.01/SR12 
 
#S 4.7.6/90/5:
04.01/SR01 06.03/SR01 
 
#S 4.7.6/90/6:
04.02.04.01/SR28 04.02.04.01/SR51 06.03/SR04 
 
#S 4.7.6/91/2:
05.02/SR10 06.03/SR01 06.03/SR08 06.03/SR11 
 
#S 4.7.6/91/3:
06.03/SR06 06.03/SR07 06.03/SR09 06.03/SR10 
 
#S 4.7.6/91/4:
06.03/SR14 06.03/SR15 
 
#S 4.7.6/91/5:
06.03/SR16 06.03/SR18 
 
#S 4.7.6/91/6:
06.03/SR20 
 
#S 4.7.6/91/7:
06.03/SR17 06.03/SR19 
 
#S 4.7.6/91/9:
04.02.04.01/SR28 04.02.04.01/SR51 
 
#S 4.7.6/92/4:
06.03/SR05 
 
#S 4.10/107/2:


                               K-19

              STANDARD SPECIFICATIONS CROSS-REFERENCE


01/SR01 01/SR02 
 
#S 4.10/107/3:
05.01.01/SR03 05.01.01/SR04 05.01.01/SR05 
 
#S 4.10/107/4:
02.02.01/SR09 
 
#S 4.10/107/6:
02.02.01/SR09 05.01.01/SR02 
 
#S 4.10/107/8:
02.01.01/SR08 
 
#S 4.11/108/1:
04.02.01.02/SR14 04.02.01.02/SR15 04.02.02.02/SR14 
04.02.02.02/SR15 04.02.03.02/SR14 04.02.03.02/SR15 
04.02.05.02/SR15 04.02.05.02/SR16 04.02.05.03/SR14 
04.02.05.03/SR15 04.02.05.04/SR05 04.02.05.04/SR06 
04.03.02.01/SR05 04.03.02.02/SR32 04.03.03/SR05 09.02.01/SR01 
09.02.01/SR02 09.02.01/SR03 09.02.01/SR04 09.02.10/SR01 
09.02.10/SR02 09.02.10/SR03 09.02.10/SR04 09.02.10/SR05 
09.02.11/SR01 09.02.11/SR02 09.02.11/SR03 
 
#S 4.11/109/1:
09.02.02/SR01 09.02.02/SR02 09.02.02/SR03 09.02.02/SR04 
09.02.02/SR05 09.02.02/SR06 09.02.02/SR07 09.02.02/SR08 
09.02.02/SR09 09.02.03/SR01 09.02.03/SR02 09.02.03/SR03 
09.02.03/SR04 09.02.03/SR05 09.02.03/SR06 09.02.03/SR07 
09.02.03/SR08 09.02.05/SR01 09.02.05/SR02 09.02.05/SR03 
09.02.05/SR04 09.02.05/SR05 09.02.09/SR01 
 
#S 4.12/109/1:
09.01/SR04 
 
#S 4.12/109/5:
09.01/SR11 
 
#S 4.12/109/6:
09.01.01.01/SR01 09.01.01.01/SR02 09.01.01.01/SR03 
09.01.01.01/SR04 09.01.01.01/SR05 09.01.01.01/SR06 
09.01.01.01/SR07 09.01.01.02/SR01 09.01.01.02/SR02 
09.01.01.02/SR03 09.01.01.02/SR04 09.01.01.02/SR05 
09.01.01.02/SR06 09.01.01.02/SR07 09.01.02.01/SR01 
09.01.02.01/SR02 09.01.02.01/SR03 09.01.02.01/SR04 
09.01.02.01/SR05 09.01.02.01/SR06 09.01.02.01/SR07 
09.01.02.01/SR08 09.01.02.01/SR09 09.01.02.01/SR10 
09.01.02.01/SR11 09.01.02.01/SR12 09.01.02.02/SR01 
09.01.02.02/SR02 09.01.02.02/SR03 09.01.02.02/SR04 
09.01.02.02/SR05 09.01.02.02/SR06 09.01.02.02/SR07 
09.01.02.02/SR08 09.01.02.02/SR09 09.01.02.02/SR10 
09.01.02.02/SR11 09.01.02.02/SR12 09.01.03.01/SR01 
09.01.03.01/SR02 09.01.03.01/SR03 09.01.03.01/SR04 
09.01.03.01/SR05 09.01.03.01/SR06 09.01.03.01/SR07 


                               K-20

              STANDARD SPECIFICATIONS CROSS-REFERENCE


09.01.03.01/SR08 09.01.03.01/SR09 09.01.03.01/SR10 
09.01.03.01/SR11 09.01.03.01/SR12 09.01.03.01/SR13 
09.01.03.01/SR14 09.01.03.01/SR15 09.01.03.01/SR16 
09.01.03.01/SR17 09.01.03.02/SR01 09.01.03.02/SR02 
09.01.03.02/SR03 09.01.03.02/SR04 09.01.03.02/SR05 
09.01.03.02/SR06 09.01.03.02/SR07 09.01.03.02/SR08 
09.01.03.02/SR09 09.01.03.02/SR10 09.01.03.02/SR11 
09.01.03.02/SR12 09.01.03.02/SR13 09.01.03.02/SR14 
09.01.03.02/SR15 09.01.03.02/SR16 09.01.03.02/SR17 
09.01.04.01/SR01 09.01.04.01/SR02 09.01.04.01/SR03 
09.01.04.01/SR04 09.01.04.01/SR05 09.01.04.01/SR06 
09.01.04.01/SR07 09.01.04.02/SR01 09.01.04.02/SR02 
09.01.04.02/SR03 09.01.04.02/SR04 09.01.04.02/SR05 
09.01.04.02/SR06 09.01.04.02/SR07 09.01.05.01/SR01 
09.01.05.01/SR02 09.01.05.01/SR03 09.01.05.01/SR04 
09.01.05.01/SR05 09.01.05.01/SR06 09.01.05.02/SR01 
09.01.05.02/SR02 09.01.05.02/SR03 09.01.05.02/SR04 
09.01.05.02/SR05 09.01.05.02/SR06 09.01.09.01/SR01 
09.01.09.01/SR02 09.01.09.01/SR03 09.01.09.01/SR04 
09.01.09.01/SR05 09.01.09.01/SR06 09.01.09.01/SR07 
09.01.09.01/SR08 09.01.09.01/SR09 09.01.09.02/SR01 
09.01.09.02/SR02 09.01.09.02/SR03 09.01.09.02/SR04 
09.01.09.02/SR05 09.01.09.02/SR06 09.01.09.02/SR07 
09.01.09.02/SR08 09.01.09.02/SR09 09.01.10.01/SR01 
09.01.10.01/SR02 09.01.10.01/SR03 09.01.10.01/SR04 
09.01.10.02/SR01 09.01.10.02/SR02 09.01.10.02/SR03 
09.01.10.02/SR04 09.01.11.01/SR04 09.01.11.02/SR01 
 
#S 4.12/109/7:
09.01/SR04 09.01/SR05 09.01/SR05 09.01/SR06 09.01/SR07 
 
#S 4.12/109/8:
09.01/SR08 
 
#S 4.12/110/1:
09.01/SR09 
 
#S 4.12/110/3:
09.01/SR01 09.01/SR02 09.01/SR03 09.01/SR10 
 
#S 4.14/113/2:
04.02.03.02/SR30 
 
#S 4.14/113/3:
04.02.01.02/SR21 04.02.01.02/SR22 04.02.01.02/SR30 
04.02.02.02/SR21 04.02.02.02/SR22 04.02.02.02/SR30 
04.02.03.01/SR18 04.02.03.02/SR21 04.02.03.02/SR22 
04.02.03.02/SR45 04.02.03.03/SR04 04.02.04.01/SR11 
04.02.04.01/SR77 04.02.04.02/SR18 04.02.05.02/SR22 
04.02.05.02/SR23 04.02.05.02/SR32 04.02.05.03/SR21 
04.02.05.03/SR22 04.02.05.03/SR33 04.03.02.02/SR19 06.01.02/SR36 
06.01.02/SR37 
 
#S 4.14/114/2:


                               K-21

              STANDARD SPECIFICATIONS CROSS-REFERENCE


02.03.03/SR21 02.03.03/SR22 03.01/SR02 04.02.01.02/SR18 
04.02.01.02/SR21 04.02.01.02/SR22 04.02.01.02/SR30 
04.02.01.02/SR41 04.02.02.02/SR18 04.02.02.02/SR21 
04.02.02.02/SR22 04.02.02.02/SR30 04.02.02.02/SR41 
04.02.03.01/SR55 04.02.03.02/SR18 04.02.03.02/SR21 
04.02.03.02/SR22 04.02.03.02/SR31 04.02.03.02/SR32 
04.02.03.02/SR33 04.02.03.02/SR53 04.02.03.02/SR59 
04.02.04.01/SR45 04.02.04.02/SR26 04.02.05.02/SR19 
04.02.05.02/SR22 04.02.05.02/SR23 04.02.05.02/SR34 
04.02.05.02/SR42 04.02.05.03/SR18 04.02.05.03/SR21 
04.02.05.03/SR22 04.02.05.03/SR33 04.02.05.03/SR44 
04.02.05.04/SR10 04.02.05.04/SR13 04.02.05.04/SR14 
04.03.02.02/SR19 05.01.02/SR04 05.03/SR17 06.01.02/SR36 
06.01.02/SR37 06.02.02/SR05 06.02.02/SR13 
 
#S 5.4.2/138/6:
04.02.03.01/SR36 04.02.03.01/SR37 04.02.03.02/SR58 
04.02.03.02/SR59 04.02.03.02/SR59 04.02.03.03/SR06 
04.02.04.01/SR27 04.02.04.01/SR29 04.02.04.02/SR25 
04.02.04.02/SR26 04.02.04.02/SR26 
 
#S 5.4.2/140/1:
04.02.03.01/SR59 04.02.03.01/SR60 04.02.03.01/SR61 
04.02.03.03/SR08 04.02.03.03/SR09 
 
#S 5.4.2/142/1:
04.02.04.01/SR49 04.02.04.01/SR50 04.02.04.01/SR52 
 
#S 5.12.1/232/1:
04.03.02.02/SR15 09.02.01/SR01 09.02.01/SR02 09.02.01/SR03 
09.02.01/SR04 09.02.02/SR01 09.02.02/SR02 09.02.02/SR03 
09.02.02/SR04 09.02.02/SR05 09.02.02/SR06 09.02.02/SR07 
09.02.02/SR08 09.02.02/SR09 09.02.03/SR01 09.02.03/SR02 
09.02.03/SR03 09.02.03/SR04 09.02.03/SR05 09.02.03/SR06 
09.02.03/SR07 09.02.03/SR08 09.02.05/SR01 09.02.05/SR02 
09.02.05/SR03 09.02.05/SR04 09.02.05/SR05 09.02.09/SR01 
09.02.10/SR01 09.02.10/SR02 09.02.10/SR03 09.02.10/SR04 
09.02.10/SR05 09.02.11/SR01 09.02.11/SR02 09.02.11/SR03 
 
#S 5.12.1/232/2:
04.02.01.02/SR26 04.02.01.02/SR27 04.02.02.02/SR26 
04.02.02.02/SR27 04.02.03.02/SR26 04.02.03.02/SR27 
04.02.03.02/SR28 04.02.05.02/SR27 04.02.05.03/SR26 
04.02.05.03/SR27 04.02.05.04/SR18 
 
#S 6.1/306/6:
05.03/SR03 05.03/SR04 05.03/SR15 
 
#S 6.1/306/8:
04.03.02.02/SR22 04.03.02.02/SR23 04.03.02.02/SR24 
04.03.02.02/SR25 04.03.02.02/SR26 
 
#S 6.1/306/9:
04.03.02.02/SR07 


                               K-22

              STANDARD SPECIFICATIONS CROSS-REFERENCE


 
#S 6.1/307/2:
11.01/SR01 11.01/SR02 
 
#S 6.1/307/3:
11.01/SR01 11.01/SR02 
 
#S 6.2/308/1:
03.01/SR03 05.01.01/SR02 
 
#S 6.2/308/2:
05.01.01/SR04 05.01.01/SR05 
 
#S 6.3/309/1:
02.03.03/SR21 02.03.03/SR22 03.01/SR02 04.01.03/SR08 
04.02.01.01/SR11 04.02.01.01/SR17 04.02.01.01/SR23 
04.02.01.02/SR08 04.02.02.01/SR11 04.02.02.01/SR18 
04.02.02.01/SR24 04.02.02.02/SR08 04.02.03.01/SR23 
04.02.03.01/SR32 04.02.03.01/SR38 04.02.03.01/SR44 
04.02.03.01/SR50 04.02.03.01/SR62 04.02.03.01/SR70 
04.02.03.01/SR77 04.02.03.01/SR82 04.02.03.02/SR08 
04.02.04.01/SR16 04.02.04.01/SR24 04.02.04.01/SR30 
04.02.04.01/SR35 04.02.04.01/SR40 04.02.04.01/SR53 
04.02.04.01/SR73 04.02.04.02/SR06 04.03.01/SR10 05.01.01/SR10 
05.01.01/SR11 05.01.02/SR07 
 
#S 6.3/310/1:
02.02.02/SR11 04.02.04.01/SR61 04.02.04.01/SR68 04.02.04.01/SR83 
04.02.05.01/SR16 04.02.05.01/SR24 04.02.05.01/SR30 
04.02.05.01/SR38 04.02.05.01/SR47 04.02.05.01/SR53 
04.02.05.01/SR59 04.02.05.01/SR64 04.02.05.01/SR80 
04.02.05.01/SR82 04.02.05.02/SR09 04.02.05.03/SR08 04.03.03/SR09 
04.03.04.01/SR11 06.01.02/SR19 06.01.02/SR37 06.01.02/SR50 
06.01.02/SR54 
 
#S 6.3/311/4:
06.01.02/SR36 
 
#S 6.4/313/1:
04.03.04.01/SR11 
 
#S 6.5/314/1:
02.01.01/SR08 02.01.01/SR09 02.02.03/SR05 03.01/SR04 03.02/SR01 
03.02/SR02 05.01.01/SR01 
 
#S 6.6/316/1:
06.02.02/SR09 06.02.02/SR10 06.02.02/SR11 06.03/SR05 06.03/SR08 
06.03/SR15 
 
#S 6.6/316/4:
04.03.03/SR10 04.03.03/SR12 04.03.03/SR13 04.03.03/SR14 
04.03.03/SR15 
 
#S 6.6/317/1:


                               K-23

              STANDARD SPECIFICATIONS CROSS-REFERENCE


04.02.01.02/SR24 04.02.01.02/SR25 04.02.02.02/SR24 
04.02.02.02/SR25 04.02.03.02/SR24 04.02.03.02/SR25 
04.02.04.02/SR09 04.02.05.02/SR25 04.02.05.02/SR26 
04.02.05.03/SR24 04.02.05.03/SR25 04.02.05.03/SR29 
04.02.05.04/SR16 04.02.05.04/SR17 04.03.02.02/SR20 05.02/SR01 
05.02/SR02 05.02/SR08 05.02/SR09 05.03/SR11 
 
#S 6.6/318/1:
04.03.02.02/SR11 04.03.02.02/SR13 04.03.02.02/SR14 
04.03.04.02/SR03 04.03.04.02/SR07 
 
#S 6.7/320/1:
06.02.02/SR05 06.03/SR04 
 
#S 6.7/321/1:
04.02.01.02/SR21 04.02.01.02/SR22 04.02.01.02/SR23 
04.02.01.02/SR24 04.02.01.02/SR25 04.02.01.02/SR28 
04.02.01.02/SR29 04.02.01.02/SR30 04.02.01.02/SR40 
04.02.01.02/SR41 04.02.02.02/SR21 04.02.02.02/SR22 
04.02.02.02/SR23 04.02.02.02/SR24 04.02.02.02/SR25 
04.02.02.02/SR28 04.02.02.02/SR29 04.02.02.02/SR30 
04.02.02.02/SR40 04.02.02.02/SR41 05.02/SR01 05.02/SR02 
 
#S 6.7/322/1:
04.02.03.01/SR54 04.02.03.01/SR55 04.02.03.01/SR57 
04.02.03.02/SR21 04.02.03.02/SR22 04.02.03.02/SR23 
04.02.03.02/SR24 04.02.03.02/SR25 04.02.03.02/SR29 
04.02.03.02/SR52 04.02.03.02/SR53 04.02.03.02/SR55 
04.02.04.01/SR44 04.02.04.01/SR45 04.02.04.01/SR47 
04.02.04.02/SR09 04.02.05.01/SR22 04.02.05.01/SR23 
04.02.05.02/SR22 04.02.05.02/SR23 04.02.05.02/SR24 
04.02.05.02/SR25 04.02.05.02/SR26 04.02.05.02/SR28 
04.02.05.02/SR29 04.02.05.02/SR30 04.02.05.02/SR31 
04.02.05.02/SR42 04.02.05.02/SR44 04.02.05.03/SR21 
04.02.05.03/SR32 04.02.05.03/SR33 04.02.05.03/SR44 
 
#S 6.7/323/1:
02.02.02/SR11 04.01.08/SR04 04.01.08/SR05 04.01.08/SR09 
04.01.08/SR10 04.02.05.03/SR22 04.02.05.03/SR23 04.02.05.03/SR24 
04.02.05.03/SR25 04.02.05.03/SR28 04.02.05.03/SR29 
04.02.05.03/SR43 04.02.05.04/SR14 04.02.05.04/SR15 
04.02.05.04/SR16 04.02.05.04/SR17 04.03.02.02/SR02 
04.03.02.02/SR03 04.03.02.02/SR04 04.03.02.02/SR07 
04.03.02.02/SR10 04.03.02.02/SR12 04.03.02.02/SR13 
04.03.02.02/SR14 05.03/SR17 05.03/SR18 05.03/SR19 
 
#S 6.7/324/1:
04.02.01.02/SR18 04.02.02.02/SR18 04.02.03.02/SR18 
04.02.05.02/SR19 04.02.05.03/SR18 04.02.05.04/SR09 
04.02.05.04/SR10 04.03.02.01/SR08 06.02.02/SR13 






                               K-24












                            APPENDIX L

                      MODULE CROSS-REFERENCE




#X 01:
04.01.03/SR07 
 
#X 02.01.03.01:
02.01.01/SR05 
 
#X 02.01.03.02:
02.01.01/SR06 
 
#X 02.01.03.03:
02.01.01/SR07 
 
#X 02.02.01:
02.01.01/SR01 
 
#X 02.02.03:
02.01.02.01/SR06 02.01.02.01/SR07 02.01.02.02/SR11 
02.01.02.02/SR12 
 
#X 02.02.04:
02.01.01/SR02 
 
#X 04.01.03:
04.02.03.01/SR01 04.02.03.01/SR02 
 
#X 04.02.01.01:
04.02.05.01/SR44 04.02.05.01/SR45 04.02.05.01/SR46 
 
#X 04.02.03.01:
04.01.03/SR09 04.01.03/SR10 04.01.03/SR11 
 
#X 04.02.03.03:
02.03.03/SR15 
 
#X 04.02.04.01:
04.01.04/SR07 04.01.04/SR08 
 
#X 04.02.05.01:


                                L-1

                      MODULE CROSS-REFERENCE


04.02.05.04/SR02 
 
#X 04.02.05.02:
04.02.05.04/SR13 04.02.05.04/SR14 
 
#X 04.02.05.04:
04.02.05.01/SR15 04.02.05.01/SR20 04.02.05.01/SR21 
04.02.05.01/SR75 04.02.05.01/SR76 04.02.05.01/SR77 
04.02.05.01/SR78 04.02.05.02/SR34 04.02.05.02/SR41 
 
#X 04.03.04.01:
02.03.03/SR20 
 
#X 05.01.02:
04.02.05.03/SR24 04.02.05.03/SR25 
 
#X 05.02:
04.03.03/SR06 04.03.03/SR07 06.02.02/SR27 06.02.02/SR28 
06.03/SR18 06.03/SR19 
 
#X 05.03:
02.01.01/SR04 02.01.02.01/SR04 02.01.02.02/SR10 02.01.03.01/SR01 
02.01.03.02/SR05 02.01.03.02/SR06 02.01.03.03/SR01 
 
#X 06.01.02:
02.03.03/SR10 





























                                L-2
